"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.APIError = exports.SearchResult = exports.SearchPayload = exports.Memory = exports.Summary = exports.Message = void 0;
/**
 * Represents a message in the memory.
 */
class Message {
    /**
     * Constructs a new Message instance.
     * @param {MessageData} data - The data to create a message instance.
     */
    constructor(data) {
        this.uuid = data.uuid;
        this.created_at = data.created_at;
        this.role = data.role;
        this.content = data.content;
        this.token_count = data.token_count;
        this.metadata = data.metadata;
    }
    /**
     * Converts the Message instance to a dictionary.
     * @returns {MessageData} A dictionary representation of Message instance.
     */
    toDict() {
        return {
            uuid: this.uuid,
            created_at: this.created_at,
            role: this.role,
            content: this.content,
            token_count: this.token_count,
            metadata: this.metadata,
        };
    }
}
exports.Message = Message;
/**
 * Represents a summary of a memory.
 */
class Summary {
    /**
     * Constructs a new Summary instance.
     * @param {SummaryData} data - The data to create a summary instance.
     */
    constructor(data) {
        this.uuid = data.uuid;
        this.created_at = data.created_at;
        this.content = data.content;
        this.recent_message_uuid = data.recent_message_uuid;
        this.token_count = data.token_count;
    }
    /**
     * Converts the Summary instance to a dictionary.
     * @returns {SummaryData} A dictionary representation of Summary instance.
     */
    toDict() {
        return {
            uuid: this.uuid,
            created_at: this.created_at,
            content: this.content,
            recent_message_uuid: this.recent_message_uuid,
            token_count: this.token_count,
        };
    }
}
exports.Summary = Summary;
/**
 * Represents a memory containing messages, metadata, and a summary.
 */
class Memory {
    /**
     * Constructs a new Memory instance.
     * @param {MemoryData} data - The data to create a memory instance.
     */
    constructor(data = {}) {
        this.messages = (data.messages || []).map((messageData) => new Message(messageData));
        this.metadata = data.metadata || {};
        this.summary = data.summary ? new Summary(data.summary) : undefined;
        this.uuid = data.uuid;
        this.created_at = data.created_at;
        this.token_count = data.token_count;
    }
    /**
     * Converts the Memory instance to a dictionary.
     * @returns {MemoryData} A dictionary representation of the Memory instance.
     */
    toDict() {
        var _a;
        return {
            messages: this.messages.map((message) => message.toDict()),
            metadata: this.metadata,
            summary: (_a = this.summary) === null || _a === void 0 ? void 0 : _a.toDict(),
            uuid: this.uuid,
            created_at: this.created_at,
            token_count: this.token_count,
        };
    }
}
exports.Memory = Memory;
/**
 * Represents the payload for a memory search.
 */
class SearchPayload {
    /**
     * Constructs a new SearchPayload instance.
     * @param {SearchPayloadData} data - The data to create a Search Payload.
     */
    constructor(data) {
        this.meta = data.meta;
        this.text = data.text;
    }
}
exports.SearchPayload = SearchPayload;
/**
 * Represents a search result from a memory search.
 */
class SearchResult {
    /**
     * Constructs a new SearchResult instance.
     * @param {SearchResultData} data - The data to create a search result instance.
     */
    constructor(data = {}) {
        this.message = data.message ? new Message(data.message) : undefined;
        this.meta = data.meta || {};
        this.score = data.score;
        this.summary = data.summary;
        this.dist = data.dist;
    }
}
exports.SearchResult = SearchResult;
/**
 * Represents an error received from the API.
 */
class APIError {
    /**
     * Constructs a new APIError instance.
     * @param {number} code - The error code.
     * @param {string} message - The error message.
     */
    constructor(code, message) {
        this.code = code;
        this.message = message;
    }
}
exports.APIError = APIError;
