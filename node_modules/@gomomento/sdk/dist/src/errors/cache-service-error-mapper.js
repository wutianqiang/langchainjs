"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.cacheServiceErrorMapper = void 0;
const constants_1 = require("@grpc/grpc-js/build/src/constants");
const src_1 = require("../../src");
function cacheServiceErrorMapper(err) {
    const errParams = [
        (err === null || err === void 0 ? void 0 : err.message) || 'Unable to process request',
        err === null || err === void 0 ? void 0 : err.code,
        err === null || err === void 0 ? void 0 : err.metadata,
        err === null || err === void 0 ? void 0 : err.stack,
    ];
    switch (err === null || err === void 0 ? void 0 : err.code) {
        case constants_1.Status.PERMISSION_DENIED:
            return new src_1.PermissionError(...errParams);
        case constants_1.Status.DATA_LOSS:
        case constants_1.Status.INTERNAL:
        case constants_1.Status.ABORTED:
            return new src_1.InternalServerError(...errParams);
        case constants_1.Status.UNKNOWN:
            return new src_1.UnknownServiceError(...errParams);
        case constants_1.Status.UNAVAILABLE:
            return new src_1.ServerUnavailableError(...errParams);
        case constants_1.Status.NOT_FOUND:
            return new src_1.NotFoundError(...errParams);
        case constants_1.Status.OUT_OF_RANGE:
        case constants_1.Status.UNIMPLEMENTED:
            return new src_1.BadRequestError(...errParams);
        case constants_1.Status.FAILED_PRECONDITION:
            return new src_1.FailedPreconditionError(...errParams);
        case constants_1.Status.INVALID_ARGUMENT:
            return new src_1.InvalidArgumentError(...errParams);
        case constants_1.Status.CANCELLED:
            return new src_1.CancelledError(...errParams);
        case constants_1.Status.DEADLINE_EXCEEDED:
            return new src_1.TimeoutError(...errParams);
        case constants_1.Status.UNAUTHENTICATED:
            return new src_1.AuthenticationError(...errParams);
        case constants_1.Status.RESOURCE_EXHAUSTED:
            return new src_1.LimitExceededError(...errParams);
        case constants_1.Status.ALREADY_EXISTS:
            return new src_1.AlreadyExistsError(...errParams);
        default:
            return new src_1.UnknownError(...errParams);
    }
}
exports.cacheServiceErrorMapper = cacheServiceErrorMapper;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGUtc2VydmljZS1lcnJvci1tYXBwZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZXJyb3JzL2NhY2hlLXNlcnZpY2UtZXJyb3ItbWFwcGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLGlFQUF5RDtBQUV6RCxtQ0FnQm1CO0FBRW5CLFNBQWdCLHVCQUF1QixDQUFDLEdBQXdCO0lBQzlELE1BQU0sU0FBUyxHQUtYO1FBQ0YsQ0FBQSxHQUFHLGFBQUgsR0FBRyx1QkFBSCxHQUFHLENBQUUsT0FBTyxLQUFJLDJCQUEyQjtRQUMzQyxHQUFHLGFBQUgsR0FBRyx1QkFBSCxHQUFHLENBQUUsSUFBSTtRQUNULEdBQUcsYUFBSCxHQUFHLHVCQUFILEdBQUcsQ0FBRSxRQUFRO1FBQ2IsR0FBRyxhQUFILEdBQUcsdUJBQUgsR0FBRyxDQUFFLEtBQUs7S0FDWCxDQUFDO0lBQ0YsUUFBUSxHQUFHLGFBQUgsR0FBRyx1QkFBSCxHQUFHLENBQUUsSUFBSSxFQUFFO1FBQ2pCLEtBQUssa0JBQU0sQ0FBQyxpQkFBaUI7WUFDM0IsT0FBTyxJQUFJLHFCQUFlLENBQUMsR0FBRyxTQUFTLENBQUMsQ0FBQztRQUMzQyxLQUFLLGtCQUFNLENBQUMsU0FBUyxDQUFDO1FBQ3RCLEtBQUssa0JBQU0sQ0FBQyxRQUFRLENBQUM7UUFDckIsS0FBSyxrQkFBTSxDQUFDLE9BQU87WUFDakIsT0FBTyxJQUFJLHlCQUFtQixDQUFDLEdBQUcsU0FBUyxDQUFDLENBQUM7UUFDL0MsS0FBSyxrQkFBTSxDQUFDLE9BQU87WUFDakIsT0FBTyxJQUFJLHlCQUFtQixDQUFDLEdBQUcsU0FBUyxDQUFDLENBQUM7UUFDL0MsS0FBSyxrQkFBTSxDQUFDLFdBQVc7WUFDckIsT0FBTyxJQUFJLDRCQUFzQixDQUFDLEdBQUcsU0FBUyxDQUFDLENBQUM7UUFDbEQsS0FBSyxrQkFBTSxDQUFDLFNBQVM7WUFDbkIsT0FBTyxJQUFJLG1CQUFhLENBQUMsR0FBRyxTQUFTLENBQUMsQ0FBQztRQUN6QyxLQUFLLGtCQUFNLENBQUMsWUFBWSxDQUFDO1FBQ3pCLEtBQUssa0JBQU0sQ0FBQyxhQUFhO1lBQ3ZCLE9BQU8sSUFBSSxxQkFBZSxDQUFDLEdBQUcsU0FBUyxDQUFDLENBQUM7UUFDM0MsS0FBSyxrQkFBTSxDQUFDLG1CQUFtQjtZQUM3QixPQUFPLElBQUksNkJBQXVCLENBQUMsR0FBRyxTQUFTLENBQUMsQ0FBQztRQUNuRCxLQUFLLGtCQUFNLENBQUMsZ0JBQWdCO1lBQzFCLE9BQU8sSUFBSSwwQkFBb0IsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxDQUFDO1FBQ2hELEtBQUssa0JBQU0sQ0FBQyxTQUFTO1lBQ25CLE9BQU8sSUFBSSxvQkFBYyxDQUFDLEdBQUcsU0FBUyxDQUFDLENBQUM7UUFDMUMsS0FBSyxrQkFBTSxDQUFDLGlCQUFpQjtZQUMzQixPQUFPLElBQUksa0JBQVksQ0FBQyxHQUFHLFNBQVMsQ0FBQyxDQUFDO1FBQ3hDLEtBQUssa0JBQU0sQ0FBQyxlQUFlO1lBQ3pCLE9BQU8sSUFBSSx5QkFBbUIsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxDQUFDO1FBQy9DLEtBQUssa0JBQU0sQ0FBQyxrQkFBa0I7WUFDNUIsT0FBTyxJQUFJLHdCQUFrQixDQUFDLEdBQUcsU0FBUyxDQUFDLENBQUM7UUFDOUMsS0FBSyxrQkFBTSxDQUFDLGNBQWM7WUFDeEIsT0FBTyxJQUFJLHdCQUFrQixDQUFDLEdBQUcsU0FBUyxDQUFDLENBQUM7UUFDOUM7WUFDRSxPQUFPLElBQUksa0JBQVksQ0FBQyxHQUFHLFNBQVMsQ0FBQyxDQUFDO0tBQ3pDO0FBQ0gsQ0FBQztBQTdDRCwwREE2Q0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1N0YXR1c30gZnJvbSAnQGdycGMvZ3JwYy1qcy9idWlsZC9zcmMvY29uc3RhbnRzJztcbmltcG9ydCB7U2VydmljZUVycm9yfSBmcm9tICdAZ3JwYy9ncnBjLWpzJztcbmltcG9ydCB7XG4gIE5vdEZvdW5kRXJyb3IsXG4gIEludGVybmFsU2VydmVyRXJyb3IsXG4gIEludmFsaWRBcmd1bWVudEVycm9yLFxuICBQZXJtaXNzaW9uRXJyb3IsXG4gIEJhZFJlcXVlc3RFcnJvcixcbiAgQ2FuY2VsbGVkRXJyb3IsXG4gIFRpbWVvdXRFcnJvcixcbiAgQXV0aGVudGljYXRpb25FcnJvcixcbiAgTGltaXRFeGNlZWRlZEVycm9yLFxuICBBbHJlYWR5RXhpc3RzRXJyb3IsXG4gIFNka0Vycm9yLFxuICBVbmtub3duU2VydmljZUVycm9yLFxuICBTZXJ2ZXJVbmF2YWlsYWJsZUVycm9yLFxuICBVbmtub3duRXJyb3IsXG4gIEZhaWxlZFByZWNvbmRpdGlvbkVycm9yLFxufSBmcm9tICcuLi8uLi9zcmMnO1xuXG5leHBvcnQgZnVuY3Rpb24gY2FjaGVTZXJ2aWNlRXJyb3JNYXBwZXIoZXJyOiBTZXJ2aWNlRXJyb3IgfCBudWxsKTogU2RrRXJyb3Ige1xuICBjb25zdCBlcnJQYXJhbXM6IFtcbiAgICBzdHJpbmcsXG4gICAgbnVtYmVyIHwgdW5kZWZpbmVkLFxuICAgIG9iamVjdCB8IHVuZGVmaW5lZCxcbiAgICBzdHJpbmcgfCB1bmRlZmluZWRcbiAgXSA9IFtcbiAgICBlcnI/Lm1lc3NhZ2UgfHwgJ1VuYWJsZSB0byBwcm9jZXNzIHJlcXVlc3QnLFxuICAgIGVycj8uY29kZSxcbiAgICBlcnI/Lm1ldGFkYXRhLFxuICAgIGVycj8uc3RhY2ssXG4gIF07XG4gIHN3aXRjaCAoZXJyPy5jb2RlKSB7XG4gICAgY2FzZSBTdGF0dXMuUEVSTUlTU0lPTl9ERU5JRUQ6XG4gICAgICByZXR1cm4gbmV3IFBlcm1pc3Npb25FcnJvciguLi5lcnJQYXJhbXMpO1xuICAgIGNhc2UgU3RhdHVzLkRBVEFfTE9TUzpcbiAgICBjYXNlIFN0YXR1cy5JTlRFUk5BTDpcbiAgICBjYXNlIFN0YXR1cy5BQk9SVEVEOlxuICAgICAgcmV0dXJuIG5ldyBJbnRlcm5hbFNlcnZlckVycm9yKC4uLmVyclBhcmFtcyk7XG4gICAgY2FzZSBTdGF0dXMuVU5LTk9XTjpcbiAgICAgIHJldHVybiBuZXcgVW5rbm93blNlcnZpY2VFcnJvciguLi5lcnJQYXJhbXMpO1xuICAgIGNhc2UgU3RhdHVzLlVOQVZBSUxBQkxFOlxuICAgICAgcmV0dXJuIG5ldyBTZXJ2ZXJVbmF2YWlsYWJsZUVycm9yKC4uLmVyclBhcmFtcyk7XG4gICAgY2FzZSBTdGF0dXMuTk9UX0ZPVU5EOlxuICAgICAgcmV0dXJuIG5ldyBOb3RGb3VuZEVycm9yKC4uLmVyclBhcmFtcyk7XG4gICAgY2FzZSBTdGF0dXMuT1VUX09GX1JBTkdFOlxuICAgIGNhc2UgU3RhdHVzLlVOSU1QTEVNRU5URUQ6XG4gICAgICByZXR1cm4gbmV3IEJhZFJlcXVlc3RFcnJvciguLi5lcnJQYXJhbXMpO1xuICAgIGNhc2UgU3RhdHVzLkZBSUxFRF9QUkVDT05ESVRJT046XG4gICAgICByZXR1cm4gbmV3IEZhaWxlZFByZWNvbmRpdGlvbkVycm9yKC4uLmVyclBhcmFtcyk7XG4gICAgY2FzZSBTdGF0dXMuSU5WQUxJRF9BUkdVTUVOVDpcbiAgICAgIHJldHVybiBuZXcgSW52YWxpZEFyZ3VtZW50RXJyb3IoLi4uZXJyUGFyYW1zKTtcbiAgICBjYXNlIFN0YXR1cy5DQU5DRUxMRUQ6XG4gICAgICByZXR1cm4gbmV3IENhbmNlbGxlZEVycm9yKC4uLmVyclBhcmFtcyk7XG4gICAgY2FzZSBTdGF0dXMuREVBRExJTkVfRVhDRUVERUQ6XG4gICAgICByZXR1cm4gbmV3IFRpbWVvdXRFcnJvciguLi5lcnJQYXJhbXMpO1xuICAgIGNhc2UgU3RhdHVzLlVOQVVUSEVOVElDQVRFRDpcbiAgICAgIHJldHVybiBuZXcgQXV0aGVudGljYXRpb25FcnJvciguLi5lcnJQYXJhbXMpO1xuICAgIGNhc2UgU3RhdHVzLlJFU09VUkNFX0VYSEFVU1RFRDpcbiAgICAgIHJldHVybiBuZXcgTGltaXRFeGNlZWRlZEVycm9yKC4uLmVyclBhcmFtcyk7XG4gICAgY2FzZSBTdGF0dXMuQUxSRUFEWV9FWElTVFM6XG4gICAgICByZXR1cm4gbmV3IEFscmVhZHlFeGlzdHNFcnJvciguLi5lcnJQYXJhbXMpO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gbmV3IFVua25vd25FcnJvciguLi5lcnJQYXJhbXMpO1xuICB9XG59XG4iXX0=