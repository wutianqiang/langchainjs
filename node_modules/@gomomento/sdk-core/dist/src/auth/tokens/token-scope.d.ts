export declare enum CacheRole {
    None = "none",
    ReadWrite = "readwrite"
}
export declare class CachePermission {
    cacheRole: CacheRole;
    constructor(cacheRole: CacheRole);
}
export declare enum TopicRole {
    None = "none",
    ReadWrite = "readwrite"
}
export declare class TopicPermission {
    topicRole: TopicRole;
    constructor(topicRole: TopicRole);
}
export type Permission = CachePermission | TopicPermission;
export declare class Permissions {
    permissions: Array<Permission>;
    constructor(permissions: Array<Permission>);
}
export declare const AllDataReadWrite: Permissions;
export declare abstract class PredefinedScope {
}
export type TokenScope = typeof AllDataReadWrite | Permissions | PredefinedScope;
