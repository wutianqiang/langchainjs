"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResponseSuccess = exports.ResponseMiss = exports.ResponseHit = exports.ResponseError = exports.ResponseBase = void 0;
class ResponseBase {
    toString() {
        return this.constructor.name;
    }
}
exports.ResponseBase = ResponseBase;
function ResponseError(Base) {
    return class ResponseError extends Base {
        message() {
            return this._innerException.wrappedErrorMessage();
        }
        innerException() {
            return this._innerException;
        }
        errorCode() {
            return this._innerException.errorCode();
        }
        toString() {
            return this.message();
        }
    };
}
exports.ResponseError = ResponseError;
function ResponseHit(Base) {
    return class ResponseHit extends Base {
    };
}
exports.ResponseHit = ResponseHit;
function ResponseMiss(Base) {
    return class ResponseMiss extends Base {
        constructor() {
            super(...arguments);
            this.is_miss = true;
        }
    };
}
exports.ResponseMiss = ResponseMiss;
function ResponseSuccess(Base) {
    return class ResponseSuccess extends Base {
        constructor() {
            super(...arguments);
            this.is_success = true;
        }
    };
}
exports.ResponseSuccess = ResponseSuccess;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzcG9uc2UtYmFzZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9tZXNzYWdlcy9yZXNwb25zZXMvcmVzcG9uc2UtYmFzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSxNQUFzQixZQUFZO0lBQ3pCLFFBQVE7UUFDYixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDO0lBQy9CLENBQUM7Q0FDRjtBQUpELG9DQUlDO0FBMkJELFNBQWdCLGFBQWEsQ0FBNEIsSUFBVztJQUNsRSxPQUFPLE1BQU0sYUFBYyxTQUFRLElBQUk7UUFHOUIsT0FBTztZQUNaLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1FBQ3BELENBQUM7UUFFTSxjQUFjO1lBQ25CLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQztRQUM5QixDQUFDO1FBRU0sU0FBUztZQUNkLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUMxQyxDQUFDO1FBRU0sUUFBUTtZQUNiLE9BQU8sSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ3hCLENBQUM7S0FDRixDQUFDO0FBQ0osQ0FBQztBQXBCRCxzQ0FvQkM7QUFFRCxTQUFnQixXQUFXLENBQTRCLElBQVc7SUFDaEUsT0FBTyxNQUFNLFdBQVksU0FBUSxJQUFJO0tBQUcsQ0FBQztBQUMzQyxDQUFDO0FBRkQsa0NBRUM7QUFFRCxTQUFnQixZQUFZLENBQTRCLElBQVc7SUFDakUsT0FBTyxNQUFNLFlBQWEsU0FBUSxJQUFJO1FBQS9COztZQUNXLFlBQU8sR0FBWSxJQUFJLENBQUM7UUFDMUMsQ0FBQztLQUFBLENBQUM7QUFDSixDQUFDO0FBSkQsb0NBSUM7QUFFRCxTQUFnQixlQUFlLENBQTRCLElBQVc7SUFDcEUsT0FBTyxNQUFNLGVBQWdCLFNBQVEsSUFBSTtRQUFsQzs7WUFDVyxlQUFVLEdBQVksSUFBSSxDQUFDO1FBQzdDLENBQUM7S0FBQSxDQUFDO0FBQ0osQ0FBQztBQUpELDBDQUlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtNb21lbnRvRXJyb3JDb2RlLCBTZGtFcnJvcn0gZnJvbSAnLi4vLi4vZXJyb3JzJztcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFJlc3BvbnNlQmFzZSB7XG4gIHB1YmxpYyB0b1N0cmluZygpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmNvbnN0cnVjdG9yLm5hbWU7XG4gIH1cbn1cblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnksIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHlwZXNcbnR5cGUgQ29uc3RydWN0b3IgPSBuZXcgKC4uLmFyZ3M6IGFueVtdKSA9PiB7fTtcblxuLy8gVGhlc2UgaW50ZXJmYWNlcyBhbGxvdyB1cyB0byBpZGVudGlmeSByZXNwb25zZXMgYnkgdGhlaXIgbWl4aW5zLlxuLy8gVGhleSBhcmUgb25seSB1c2VkIHRvIG1ha2Ugc2hhcmVkIHRlc3RzIHdvcmsuXG4vLyBUaGV5IGFyZSBub3QgZm9yIHB1YmxpYyBjb25zdW1wdGlvbi5cbmV4cG9ydCBpbnRlcmZhY2UgSVJlc3BvbnNlRXJyb3Ige1xuICBtZXNzYWdlKCk6IHN0cmluZztcbiAgaW5uZXJFeGNlcHRpb24oKTogU2RrRXJyb3I7XG4gIGVycm9yQ29kZSgpOiBNb21lbnRvRXJyb3JDb2RlO1xuICB0b1N0cmluZygpOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVJlc3BvbnNlU3VjY2VzcyB7XG4gIGlzX3N1Y2Nlc3M6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVJlc3BvbnNlTWlzcyB7XG4gIGlzX21pc3M6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUxpc3RSZXNwb25zZVN1Y2Nlc3Mge1xuICBsaXN0TGVuZ3RoKCk6IG51bWJlcjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFJlc3BvbnNlRXJyb3I8VEJhc2UgZXh0ZW5kcyBDb25zdHJ1Y3Rvcj4oQmFzZTogVEJhc2UpIHtcbiAgcmV0dXJuIGNsYXNzIFJlc3BvbnNlRXJyb3IgZXh0ZW5kcyBCYXNlIHtcbiAgICBwdWJsaWMgX2lubmVyRXhjZXB0aW9uOiBTZGtFcnJvcjtcblxuICAgIHB1YmxpYyBtZXNzYWdlKCk6IHN0cmluZyB7XG4gICAgICByZXR1cm4gdGhpcy5faW5uZXJFeGNlcHRpb24ud3JhcHBlZEVycm9yTWVzc2FnZSgpO1xuICAgIH1cblxuICAgIHB1YmxpYyBpbm5lckV4Y2VwdGlvbigpOiBTZGtFcnJvciB7XG4gICAgICByZXR1cm4gdGhpcy5faW5uZXJFeGNlcHRpb247XG4gICAgfVxuXG4gICAgcHVibGljIGVycm9yQ29kZSgpOiBNb21lbnRvRXJyb3JDb2RlIHtcbiAgICAgIHJldHVybiB0aGlzLl9pbm5lckV4Y2VwdGlvbi5lcnJvckNvZGUoKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgdG9TdHJpbmcoKTogc3RyaW5nIHtcbiAgICAgIHJldHVybiB0aGlzLm1lc3NhZ2UoKTtcbiAgICB9XG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBSZXNwb25zZUhpdDxUQmFzZSBleHRlbmRzIENvbnN0cnVjdG9yPihCYXNlOiBUQmFzZSkge1xuICByZXR1cm4gY2xhc3MgUmVzcG9uc2VIaXQgZXh0ZW5kcyBCYXNlIHt9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gUmVzcG9uc2VNaXNzPFRCYXNlIGV4dGVuZHMgQ29uc3RydWN0b3I+KEJhc2U6IFRCYXNlKSB7XG4gIHJldHVybiBjbGFzcyBSZXNwb25zZU1pc3MgZXh0ZW5kcyBCYXNlIHtcbiAgICBwdWJsaWMgcmVhZG9ubHkgaXNfbWlzczogYm9vbGVhbiA9IHRydWU7XG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBSZXNwb25zZVN1Y2Nlc3M8VEJhc2UgZXh0ZW5kcyBDb25zdHJ1Y3Rvcj4oQmFzZTogVEJhc2UpIHtcbiAgcmV0dXJuIGNsYXNzIFJlc3BvbnNlU3VjY2VzcyBleHRlbmRzIEJhc2Uge1xuICAgIHB1YmxpYyByZWFkb25seSBpc19zdWNjZXNzOiBib29sZWFuID0gdHJ1ZTtcbiAgfTtcbn1cbiJdfQ==