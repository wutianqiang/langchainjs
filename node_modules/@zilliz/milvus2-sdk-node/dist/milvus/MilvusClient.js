"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MilvusClient = void 0;
const _1 = require(".");
const sdk_json_1 = __importDefault(require("../sdk.json"));
/**
 * Milvus Client class that extends GRPCClient and handles communication with Milvus server.
 */
class MilvusClient extends _1.GRPCClient {
    /**
     * Returns the SDK information.
     * SDK information will be generated on the building phase
     * @returns Object containing SDK version and recommended Milvus version.
     */
    static get sdkInfo() {
        return {
            version: sdk_json_1.default.version,
            recommandMilvus: sdk_json_1.default.milvusVersion,
        };
    }
    /**
     * Creates a new instance of MilvusClient.
     * @param configOrAddress The Milvus server's address or client configuration object.
     * @param ssl Whether to use SSL or not.
     * @param username The username for authentication.
     * @param password The password for authentication.
     * @param channelOptions Additional channel options for gRPC.
     */
    constructor(configOrAddress, ssl, username, password, channelOptions) {
        // setup the configuration
        super(configOrAddress, ssl, username, password, channelOptions);
        _1.logger.debug(`new client initialized, version: ${MilvusClient.sdkInfo.version} `);
        // connect();
        this.connect(MilvusClient.sdkInfo.version);
    }
}
exports.MilvusClient = MilvusClient;
//# sourceMappingURL=MilvusClient.js.map