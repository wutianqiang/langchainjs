"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CacheKeysCursor = exports.Cursor = exports.CacheKeysCursorInitializer = exports.ReadCursorInitializer = void 0;
const iterable_stream_1 = require("./iterable-stream");
const utility_1 = require("../utility");
/** @internal */
class ReadCursorInitializer {
    constructor(client, request, tx) {
        this._client = client;
        this._request = request;
        this._session = tx;
    }
    init() {
        return this._client.read(this._request, utility_1.Utility.txToMetadata(this._session));
    }
}
exports.ReadCursorInitializer = ReadCursorInitializer;
/** @internal */
class CacheKeysCursorInitializer {
    constructor(client, request) {
        this._client = client;
        this._request = request;
    }
    init() {
        return this._client.keys(this._request);
    }
}
exports.CacheKeysCursorInitializer = CacheKeysCursorInitializer;
/**
 * Cursor to supplement find() queries
 */
class Cursor extends iterable_stream_1.IterableStream {
    constructor(initializer, config) {
        super(initializer);
        this._config = config;
    }
    /** @override */
    _transform(message) {
        return utility_1.Utility.jsonStringToObj(utility_1.Utility._base64Decode(message.getData_asB64()), this._config);
    }
}
exports.Cursor = Cursor;
/**
 * Cursor to supplement keys() call for cache
 */
class CacheKeysCursor extends iterable_stream_1.IterableStream {
    /** @internal */
    constructor(initializer) {
        super(initializer);
    }
    /** @override */
    _transform(message) {
        return message.getKeysList();
    }
}
exports.CacheKeysCursor = CacheKeysCursor;
