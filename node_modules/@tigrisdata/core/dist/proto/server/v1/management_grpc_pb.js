// GENERATED CODE -- DO NOT EDIT!

// Original file comments:
// Copyright 2022-2023 Tigris Data, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
'use strict';
var grpc = require('@grpc/grpc-js');
var server_v1_management_pb = require('../../server/v1/management_pb.js');
var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
var openapiv3_annotations_pb = require('../../openapiv3/annotations_pb.js');

function serialize_tigrisdata_management_v1_CreateNamespaceRequest(arg) {
  if (!(arg instanceof server_v1_management_pb.CreateNamespaceRequest)) {
    throw new Error('Expected argument of type tigrisdata.management.v1.CreateNamespaceRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_management_v1_CreateNamespaceRequest(buffer_arg) {
  return server_v1_management_pb.CreateNamespaceRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_management_v1_CreateNamespaceResponse(arg) {
  if (!(arg instanceof server_v1_management_pb.CreateNamespaceResponse)) {
    throw new Error('Expected argument of type tigrisdata.management.v1.CreateNamespaceResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_management_v1_CreateNamespaceResponse(buffer_arg) {
  return server_v1_management_pb.CreateNamespaceResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_management_v1_DeleteNamespaceRequest(arg) {
  if (!(arg instanceof server_v1_management_pb.DeleteNamespaceRequest)) {
    throw new Error('Expected argument of type tigrisdata.management.v1.DeleteNamespaceRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_management_v1_DeleteNamespaceRequest(buffer_arg) {
  return server_v1_management_pb.DeleteNamespaceRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_management_v1_DeleteNamespaceResponse(arg) {
  if (!(arg instanceof server_v1_management_pb.DeleteNamespaceResponse)) {
    throw new Error('Expected argument of type tigrisdata.management.v1.DeleteNamespaceResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_management_v1_DeleteNamespaceResponse(buffer_arg) {
  return server_v1_management_pb.DeleteNamespaceResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_management_v1_GetNamespaceMetadataRequest(arg) {
  if (!(arg instanceof server_v1_management_pb.GetNamespaceMetadataRequest)) {
    throw new Error('Expected argument of type tigrisdata.management.v1.GetNamespaceMetadataRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_management_v1_GetNamespaceMetadataRequest(buffer_arg) {
  return server_v1_management_pb.GetNamespaceMetadataRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_management_v1_GetNamespaceMetadataResponse(arg) {
  if (!(arg instanceof server_v1_management_pb.GetNamespaceMetadataResponse)) {
    throw new Error('Expected argument of type tigrisdata.management.v1.GetNamespaceMetadataResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_management_v1_GetNamespaceMetadataResponse(buffer_arg) {
  return server_v1_management_pb.GetNamespaceMetadataResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_management_v1_GetUserMetadataRequest(arg) {
  if (!(arg instanceof server_v1_management_pb.GetUserMetadataRequest)) {
    throw new Error('Expected argument of type tigrisdata.management.v1.GetUserMetadataRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_management_v1_GetUserMetadataRequest(buffer_arg) {
  return server_v1_management_pb.GetUserMetadataRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_management_v1_GetUserMetadataResponse(arg) {
  if (!(arg instanceof server_v1_management_pb.GetUserMetadataResponse)) {
    throw new Error('Expected argument of type tigrisdata.management.v1.GetUserMetadataResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_management_v1_GetUserMetadataResponse(buffer_arg) {
  return server_v1_management_pb.GetUserMetadataResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_management_v1_InsertNamespaceMetadataRequest(arg) {
  if (!(arg instanceof server_v1_management_pb.InsertNamespaceMetadataRequest)) {
    throw new Error('Expected argument of type tigrisdata.management.v1.InsertNamespaceMetadataRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_management_v1_InsertNamespaceMetadataRequest(buffer_arg) {
  return server_v1_management_pb.InsertNamespaceMetadataRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_management_v1_InsertNamespaceMetadataResponse(arg) {
  if (!(arg instanceof server_v1_management_pb.InsertNamespaceMetadataResponse)) {
    throw new Error('Expected argument of type tigrisdata.management.v1.InsertNamespaceMetadataResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_management_v1_InsertNamespaceMetadataResponse(buffer_arg) {
  return server_v1_management_pb.InsertNamespaceMetadataResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_management_v1_InsertUserMetadataRequest(arg) {
  if (!(arg instanceof server_v1_management_pb.InsertUserMetadataRequest)) {
    throw new Error('Expected argument of type tigrisdata.management.v1.InsertUserMetadataRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_management_v1_InsertUserMetadataRequest(buffer_arg) {
  return server_v1_management_pb.InsertUserMetadataRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_management_v1_InsertUserMetadataResponse(arg) {
  if (!(arg instanceof server_v1_management_pb.InsertUserMetadataResponse)) {
    throw new Error('Expected argument of type tigrisdata.management.v1.InsertUserMetadataResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_management_v1_InsertUserMetadataResponse(buffer_arg) {
  return server_v1_management_pb.InsertUserMetadataResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_management_v1_ListNamespacesRequest(arg) {
  if (!(arg instanceof server_v1_management_pb.ListNamespacesRequest)) {
    throw new Error('Expected argument of type tigrisdata.management.v1.ListNamespacesRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_management_v1_ListNamespacesRequest(buffer_arg) {
  return server_v1_management_pb.ListNamespacesRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_management_v1_ListNamespacesResponse(arg) {
  if (!(arg instanceof server_v1_management_pb.ListNamespacesResponse)) {
    throw new Error('Expected argument of type tigrisdata.management.v1.ListNamespacesResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_management_v1_ListNamespacesResponse(buffer_arg) {
  return server_v1_management_pb.ListNamespacesResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_management_v1_UpdateNamespaceMetadataRequest(arg) {
  if (!(arg instanceof server_v1_management_pb.UpdateNamespaceMetadataRequest)) {
    throw new Error('Expected argument of type tigrisdata.management.v1.UpdateNamespaceMetadataRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_management_v1_UpdateNamespaceMetadataRequest(buffer_arg) {
  return server_v1_management_pb.UpdateNamespaceMetadataRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_management_v1_UpdateNamespaceMetadataResponse(arg) {
  if (!(arg instanceof server_v1_management_pb.UpdateNamespaceMetadataResponse)) {
    throw new Error('Expected argument of type tigrisdata.management.v1.UpdateNamespaceMetadataResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_management_v1_UpdateNamespaceMetadataResponse(buffer_arg) {
  return server_v1_management_pb.UpdateNamespaceMetadataResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_management_v1_UpdateUserMetadataRequest(arg) {
  if (!(arg instanceof server_v1_management_pb.UpdateUserMetadataRequest)) {
    throw new Error('Expected argument of type tigrisdata.management.v1.UpdateUserMetadataRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_management_v1_UpdateUserMetadataRequest(buffer_arg) {
  return server_v1_management_pb.UpdateUserMetadataRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_management_v1_UpdateUserMetadataResponse(arg) {
  if (!(arg instanceof server_v1_management_pb.UpdateUserMetadataResponse)) {
    throw new Error('Expected argument of type tigrisdata.management.v1.UpdateUserMetadataResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_management_v1_UpdateUserMetadataResponse(buffer_arg) {
  return server_v1_management_pb.UpdateUserMetadataResponse.deserializeBinary(new Uint8Array(buffer_arg));
}


var ManagementService = exports.ManagementService = {
  // Creates a new namespace, if it does not exist
createNamespace: {
    path: '/tigrisdata.management.v1.Management/CreateNamespace',
    requestStream: false,
    responseStream: false,
    requestType: server_v1_management_pb.CreateNamespaceRequest,
    responseType: server_v1_management_pb.CreateNamespaceResponse,
    requestSerialize: serialize_tigrisdata_management_v1_CreateNamespaceRequest,
    requestDeserialize: deserialize_tigrisdata_management_v1_CreateNamespaceRequest,
    responseSerialize: serialize_tigrisdata_management_v1_CreateNamespaceResponse,
    responseDeserialize: deserialize_tigrisdata_management_v1_CreateNamespaceResponse,
  },
  // List all namespace and optionally lists specific namespace by namespaceId filter, also supports `describe` request.
listNamespaces: {
    path: '/tigrisdata.management.v1.Management/ListNamespaces',
    requestStream: false,
    responseStream: false,
    requestType: server_v1_management_pb.ListNamespacesRequest,
    responseType: server_v1_management_pb.ListNamespacesResponse,
    requestSerialize: serialize_tigrisdata_management_v1_ListNamespacesRequest,
    requestDeserialize: deserialize_tigrisdata_management_v1_ListNamespacesRequest,
    responseSerialize: serialize_tigrisdata_management_v1_ListNamespacesResponse,
    responseDeserialize: deserialize_tigrisdata_management_v1_ListNamespacesResponse,
  },
  // DeleteNamespace deletes the namespace and all the data inside it
deleteNamespace: {
    path: '/tigrisdata.management.v1.Management/DeleteNamespace',
    requestStream: false,
    responseStream: false,
    requestType: server_v1_management_pb.DeleteNamespaceRequest,
    responseType: server_v1_management_pb.DeleteNamespaceResponse,
    requestSerialize: serialize_tigrisdata_management_v1_DeleteNamespaceRequest,
    requestDeserialize: deserialize_tigrisdata_management_v1_DeleteNamespaceRequest,
    responseSerialize: serialize_tigrisdata_management_v1_DeleteNamespaceResponse,
    responseDeserialize: deserialize_tigrisdata_management_v1_DeleteNamespaceResponse,
  },
  // insertUserMetadata inserts the user metadata object
insertUserMetadata: {
    path: '/tigrisdata.management.v1.Management/InsertUserMetadata',
    requestStream: false,
    responseStream: false,
    requestType: server_v1_management_pb.InsertUserMetadataRequest,
    responseType: server_v1_management_pb.InsertUserMetadataResponse,
    requestSerialize: serialize_tigrisdata_management_v1_InsertUserMetadataRequest,
    requestDeserialize: deserialize_tigrisdata_management_v1_InsertUserMetadataRequest,
    responseSerialize: serialize_tigrisdata_management_v1_InsertUserMetadataResponse,
    responseDeserialize: deserialize_tigrisdata_management_v1_InsertUserMetadataResponse,
  },
  // GetUserMetadata inserts the user metadata object
getUserMetadata: {
    path: '/tigrisdata.management.v1.Management/GetUserMetadata',
    requestStream: false,
    responseStream: false,
    requestType: server_v1_management_pb.GetUserMetadataRequest,
    responseType: server_v1_management_pb.GetUserMetadataResponse,
    requestSerialize: serialize_tigrisdata_management_v1_GetUserMetadataRequest,
    requestDeserialize: deserialize_tigrisdata_management_v1_GetUserMetadataRequest,
    responseSerialize: serialize_tigrisdata_management_v1_GetUserMetadataResponse,
    responseDeserialize: deserialize_tigrisdata_management_v1_GetUserMetadataResponse,
  },
  // updateUserMetadata updates the user metadata object
updateUserMetadata: {
    path: '/tigrisdata.management.v1.Management/UpdateUserMetadata',
    requestStream: false,
    responseStream: false,
    requestType: server_v1_management_pb.UpdateUserMetadataRequest,
    responseType: server_v1_management_pb.UpdateUserMetadataResponse,
    requestSerialize: serialize_tigrisdata_management_v1_UpdateUserMetadataRequest,
    requestDeserialize: deserialize_tigrisdata_management_v1_UpdateUserMetadataRequest,
    responseSerialize: serialize_tigrisdata_management_v1_UpdateUserMetadataResponse,
    responseDeserialize: deserialize_tigrisdata_management_v1_UpdateUserMetadataResponse,
  },
  // InsertNamespaceMetadata inserts the namespace metadata object
insertNamespaceMetadata: {
    path: '/tigrisdata.management.v1.Management/InsertNamespaceMetadata',
    requestStream: false,
    responseStream: false,
    requestType: server_v1_management_pb.InsertNamespaceMetadataRequest,
    responseType: server_v1_management_pb.InsertNamespaceMetadataResponse,
    requestSerialize: serialize_tigrisdata_management_v1_InsertNamespaceMetadataRequest,
    requestDeserialize: deserialize_tigrisdata_management_v1_InsertNamespaceMetadataRequest,
    responseSerialize: serialize_tigrisdata_management_v1_InsertNamespaceMetadataResponse,
    responseDeserialize: deserialize_tigrisdata_management_v1_InsertNamespaceMetadataResponse,
  },
  // GetNamespaceMetadata inserts the user metadata object
getNamespaceMetadata: {
    path: '/tigrisdata.management.v1.Management/GetNamespaceMetadata',
    requestStream: false,
    responseStream: false,
    requestType: server_v1_management_pb.GetNamespaceMetadataRequest,
    responseType: server_v1_management_pb.GetNamespaceMetadataResponse,
    requestSerialize: serialize_tigrisdata_management_v1_GetNamespaceMetadataRequest,
    requestDeserialize: deserialize_tigrisdata_management_v1_GetNamespaceMetadataRequest,
    responseSerialize: serialize_tigrisdata_management_v1_GetNamespaceMetadataResponse,
    responseDeserialize: deserialize_tigrisdata_management_v1_GetNamespaceMetadataResponse,
  },
  // UpdateNamespaceMetadata updates the user metadata object
updateNamespaceMetadata: {
    path: '/tigrisdata.management.v1.Management/UpdateNamespaceMetadata',
    requestStream: false,
    responseStream: false,
    requestType: server_v1_management_pb.UpdateNamespaceMetadataRequest,
    responseType: server_v1_management_pb.UpdateNamespaceMetadataResponse,
    requestSerialize: serialize_tigrisdata_management_v1_UpdateNamespaceMetadataRequest,
    requestDeserialize: deserialize_tigrisdata_management_v1_UpdateNamespaceMetadataRequest,
    responseSerialize: serialize_tigrisdata_management_v1_UpdateNamespaceMetadataResponse,
    responseDeserialize: deserialize_tigrisdata_management_v1_UpdateNamespaceMetadataResponse,
  },
};

exports.ManagementClient = grpc.makeGenericClientConstructor(ManagementService);
