// GENERATED CODE -- DO NOT EDIT!

// Original file comments:
// Copyright 2022-2023 Tigris Data, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
'use strict';
var grpc = require('@grpc/grpc-js');
var server_v1_realtime_pb = require('../../server/v1/realtime_pb.js');
var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
var openapiv3_annotations_pb = require('../../openapiv3/annotations_pb.js');

function serialize_tigrisdata_realtime_v1_GetRTChannelRequest(arg) {
  if (!(arg instanceof server_v1_realtime_pb.GetRTChannelRequest)) {
    throw new Error('Expected argument of type tigrisdata.realtime.v1.GetRTChannelRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_realtime_v1_GetRTChannelRequest(buffer_arg) {
  return server_v1_realtime_pb.GetRTChannelRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_realtime_v1_GetRTChannelResponse(arg) {
  if (!(arg instanceof server_v1_realtime_pb.GetRTChannelResponse)) {
    throw new Error('Expected argument of type tigrisdata.realtime.v1.GetRTChannelResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_realtime_v1_GetRTChannelResponse(buffer_arg) {
  return server_v1_realtime_pb.GetRTChannelResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_realtime_v1_GetRTChannelsRequest(arg) {
  if (!(arg instanceof server_v1_realtime_pb.GetRTChannelsRequest)) {
    throw new Error('Expected argument of type tigrisdata.realtime.v1.GetRTChannelsRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_realtime_v1_GetRTChannelsRequest(buffer_arg) {
  return server_v1_realtime_pb.GetRTChannelsRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_realtime_v1_GetRTChannelsResponse(arg) {
  if (!(arg instanceof server_v1_realtime_pb.GetRTChannelsResponse)) {
    throw new Error('Expected argument of type tigrisdata.realtime.v1.GetRTChannelsResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_realtime_v1_GetRTChannelsResponse(buffer_arg) {
  return server_v1_realtime_pb.GetRTChannelsResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_realtime_v1_ListSubscriptionRequest(arg) {
  if (!(arg instanceof server_v1_realtime_pb.ListSubscriptionRequest)) {
    throw new Error('Expected argument of type tigrisdata.realtime.v1.ListSubscriptionRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_realtime_v1_ListSubscriptionRequest(buffer_arg) {
  return server_v1_realtime_pb.ListSubscriptionRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_realtime_v1_ListSubscriptionResponse(arg) {
  if (!(arg instanceof server_v1_realtime_pb.ListSubscriptionResponse)) {
    throw new Error('Expected argument of type tigrisdata.realtime.v1.ListSubscriptionResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_realtime_v1_ListSubscriptionResponse(buffer_arg) {
  return server_v1_realtime_pb.ListSubscriptionResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_realtime_v1_MessagesRequest(arg) {
  if (!(arg instanceof server_v1_realtime_pb.MessagesRequest)) {
    throw new Error('Expected argument of type tigrisdata.realtime.v1.MessagesRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_realtime_v1_MessagesRequest(buffer_arg) {
  return server_v1_realtime_pb.MessagesRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_realtime_v1_MessagesResponse(arg) {
  if (!(arg instanceof server_v1_realtime_pb.MessagesResponse)) {
    throw new Error('Expected argument of type tigrisdata.realtime.v1.MessagesResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_realtime_v1_MessagesResponse(buffer_arg) {
  return server_v1_realtime_pb.MessagesResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_realtime_v1_PresenceRequest(arg) {
  if (!(arg instanceof server_v1_realtime_pb.PresenceRequest)) {
    throw new Error('Expected argument of type tigrisdata.realtime.v1.PresenceRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_realtime_v1_PresenceRequest(buffer_arg) {
  return server_v1_realtime_pb.PresenceRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_realtime_v1_PresenceResponse(arg) {
  if (!(arg instanceof server_v1_realtime_pb.PresenceResponse)) {
    throw new Error('Expected argument of type tigrisdata.realtime.v1.PresenceResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_realtime_v1_PresenceResponse(buffer_arg) {
  return server_v1_realtime_pb.PresenceResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_realtime_v1_ReadMessagesRequest(arg) {
  if (!(arg instanceof server_v1_realtime_pb.ReadMessagesRequest)) {
    throw new Error('Expected argument of type tigrisdata.realtime.v1.ReadMessagesRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_realtime_v1_ReadMessagesRequest(buffer_arg) {
  return server_v1_realtime_pb.ReadMessagesRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_realtime_v1_ReadMessagesResponse(arg) {
  if (!(arg instanceof server_v1_realtime_pb.ReadMessagesResponse)) {
    throw new Error('Expected argument of type tigrisdata.realtime.v1.ReadMessagesResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_realtime_v1_ReadMessagesResponse(buffer_arg) {
  return server_v1_realtime_pb.ReadMessagesResponse.deserializeBinary(new Uint8Array(buffer_arg));
}


var RealtimeService = exports.RealtimeService = {
  presence: {
    path: '/tigrisdata.realtime.v1.Realtime/Presence',
    requestStream: false,
    responseStream: false,
    requestType: server_v1_realtime_pb.PresenceRequest,
    responseType: server_v1_realtime_pb.PresenceResponse,
    requestSerialize: serialize_tigrisdata_realtime_v1_PresenceRequest,
    requestDeserialize: deserialize_tigrisdata_realtime_v1_PresenceRequest,
    responseSerialize: serialize_tigrisdata_realtime_v1_PresenceResponse,
    responseDeserialize: deserialize_tigrisdata_realtime_v1_PresenceResponse,
  },
  getRTChannel: {
    path: '/tigrisdata.realtime.v1.Realtime/GetRTChannel',
    requestStream: false,
    responseStream: false,
    requestType: server_v1_realtime_pb.GetRTChannelRequest,
    responseType: server_v1_realtime_pb.GetRTChannelResponse,
    requestSerialize: serialize_tigrisdata_realtime_v1_GetRTChannelRequest,
    requestDeserialize: deserialize_tigrisdata_realtime_v1_GetRTChannelRequest,
    responseSerialize: serialize_tigrisdata_realtime_v1_GetRTChannelResponse,
    responseDeserialize: deserialize_tigrisdata_realtime_v1_GetRTChannelResponse,
  },
  getRTChannels: {
    path: '/tigrisdata.realtime.v1.Realtime/GetRTChannels',
    requestStream: false,
    responseStream: false,
    requestType: server_v1_realtime_pb.GetRTChannelsRequest,
    responseType: server_v1_realtime_pb.GetRTChannelsResponse,
    requestSerialize: serialize_tigrisdata_realtime_v1_GetRTChannelsRequest,
    requestDeserialize: deserialize_tigrisdata_realtime_v1_GetRTChannelsRequest,
    responseSerialize: serialize_tigrisdata_realtime_v1_GetRTChannelsResponse,
    responseDeserialize: deserialize_tigrisdata_realtime_v1_GetRTChannelsResponse,
  },
  readMessages: {
    path: '/tigrisdata.realtime.v1.Realtime/ReadMessages',
    requestStream: false,
    responseStream: true,
    requestType: server_v1_realtime_pb.ReadMessagesRequest,
    responseType: server_v1_realtime_pb.ReadMessagesResponse,
    requestSerialize: serialize_tigrisdata_realtime_v1_ReadMessagesRequest,
    requestDeserialize: deserialize_tigrisdata_realtime_v1_ReadMessagesRequest,
    responseSerialize: serialize_tigrisdata_realtime_v1_ReadMessagesResponse,
    responseDeserialize: deserialize_tigrisdata_realtime_v1_ReadMessagesResponse,
  },
  messages: {
    path: '/tigrisdata.realtime.v1.Realtime/Messages',
    requestStream: false,
    responseStream: false,
    requestType: server_v1_realtime_pb.MessagesRequest,
    responseType: server_v1_realtime_pb.MessagesResponse,
    requestSerialize: serialize_tigrisdata_realtime_v1_MessagesRequest,
    requestDeserialize: deserialize_tigrisdata_realtime_v1_MessagesRequest,
    responseSerialize: serialize_tigrisdata_realtime_v1_MessagesResponse,
    responseDeserialize: deserialize_tigrisdata_realtime_v1_MessagesResponse,
  },
  listSubscriptions: {
    path: '/tigrisdata.realtime.v1.Realtime/ListSubscriptions',
    requestStream: false,
    responseStream: false,
    requestType: server_v1_realtime_pb.ListSubscriptionRequest,
    responseType: server_v1_realtime_pb.ListSubscriptionResponse,
    requestSerialize: serialize_tigrisdata_realtime_v1_ListSubscriptionRequest,
    requestDeserialize: deserialize_tigrisdata_realtime_v1_ListSubscriptionRequest,
    responseSerialize: serialize_tigrisdata_realtime_v1_ListSubscriptionResponse,
    responseDeserialize: deserialize_tigrisdata_realtime_v1_ListSubscriptionResponse,
  },
};

exports.RealtimeClient = grpc.makeGenericClientConstructor(RealtimeService);
