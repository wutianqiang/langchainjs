// package: tigrisdata.observability.v1
// file: server/v1/observability.proto

/* tslint:disable */
/* eslint-disable */

import * as grpc from "@grpc/grpc-js";
import * as server_v1_observability_pb from "../../server/v1/observability_pb";
import * as openapiv3_annotations_pb from "../../openapiv3/annotations_pb";

interface IObservabilityService extends grpc.ServiceDefinition<grpc.UntypedServiceImplementation> {
    queryTimeSeriesMetrics: IObservabilityService_IQueryTimeSeriesMetrics;
    quotaLimits: IObservabilityService_IQuotaLimits;
    quotaUsage: IObservabilityService_IQuotaUsage;
    getInfo: IObservabilityService_IGetInfo;
}

interface IObservabilityService_IQueryTimeSeriesMetrics extends grpc.MethodDefinition<server_v1_observability_pb.QueryTimeSeriesMetricsRequest, server_v1_observability_pb.QueryTimeSeriesMetricsResponse> {
    path: "/tigrisdata.observability.v1.Observability/QueryTimeSeriesMetrics";
    requestStream: false;
    responseStream: false;
    requestSerialize: grpc.serialize<server_v1_observability_pb.QueryTimeSeriesMetricsRequest>;
    requestDeserialize: grpc.deserialize<server_v1_observability_pb.QueryTimeSeriesMetricsRequest>;
    responseSerialize: grpc.serialize<server_v1_observability_pb.QueryTimeSeriesMetricsResponse>;
    responseDeserialize: grpc.deserialize<server_v1_observability_pb.QueryTimeSeriesMetricsResponse>;
}
interface IObservabilityService_IQuotaLimits extends grpc.MethodDefinition<server_v1_observability_pb.QuotaLimitsRequest, server_v1_observability_pb.QuotaLimitsResponse> {
    path: "/tigrisdata.observability.v1.Observability/QuotaLimits";
    requestStream: false;
    responseStream: false;
    requestSerialize: grpc.serialize<server_v1_observability_pb.QuotaLimitsRequest>;
    requestDeserialize: grpc.deserialize<server_v1_observability_pb.QuotaLimitsRequest>;
    responseSerialize: grpc.serialize<server_v1_observability_pb.QuotaLimitsResponse>;
    responseDeserialize: grpc.deserialize<server_v1_observability_pb.QuotaLimitsResponse>;
}
interface IObservabilityService_IQuotaUsage extends grpc.MethodDefinition<server_v1_observability_pb.QuotaUsageRequest, server_v1_observability_pb.QuotaUsageResponse> {
    path: "/tigrisdata.observability.v1.Observability/QuotaUsage";
    requestStream: false;
    responseStream: false;
    requestSerialize: grpc.serialize<server_v1_observability_pb.QuotaUsageRequest>;
    requestDeserialize: grpc.deserialize<server_v1_observability_pb.QuotaUsageRequest>;
    responseSerialize: grpc.serialize<server_v1_observability_pb.QuotaUsageResponse>;
    responseDeserialize: grpc.deserialize<server_v1_observability_pb.QuotaUsageResponse>;
}
interface IObservabilityService_IGetInfo extends grpc.MethodDefinition<server_v1_observability_pb.GetInfoRequest, server_v1_observability_pb.GetInfoResponse> {
    path: "/tigrisdata.observability.v1.Observability/GetInfo";
    requestStream: false;
    responseStream: false;
    requestSerialize: grpc.serialize<server_v1_observability_pb.GetInfoRequest>;
    requestDeserialize: grpc.deserialize<server_v1_observability_pb.GetInfoRequest>;
    responseSerialize: grpc.serialize<server_v1_observability_pb.GetInfoResponse>;
    responseDeserialize: grpc.deserialize<server_v1_observability_pb.GetInfoResponse>;
}

export const ObservabilityService: IObservabilityService;

export interface IObservabilityServer extends grpc.UntypedServiceImplementation {
    queryTimeSeriesMetrics: grpc.handleUnaryCall<server_v1_observability_pb.QueryTimeSeriesMetricsRequest, server_v1_observability_pb.QueryTimeSeriesMetricsResponse>;
    quotaLimits: grpc.handleUnaryCall<server_v1_observability_pb.QuotaLimitsRequest, server_v1_observability_pb.QuotaLimitsResponse>;
    quotaUsage: grpc.handleUnaryCall<server_v1_observability_pb.QuotaUsageRequest, server_v1_observability_pb.QuotaUsageResponse>;
    getInfo: grpc.handleUnaryCall<server_v1_observability_pb.GetInfoRequest, server_v1_observability_pb.GetInfoResponse>;
}

export interface IObservabilityClient {
    queryTimeSeriesMetrics(request: server_v1_observability_pb.QueryTimeSeriesMetricsRequest, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QueryTimeSeriesMetricsResponse) => void): grpc.ClientUnaryCall;
    queryTimeSeriesMetrics(request: server_v1_observability_pb.QueryTimeSeriesMetricsRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QueryTimeSeriesMetricsResponse) => void): grpc.ClientUnaryCall;
    queryTimeSeriesMetrics(request: server_v1_observability_pb.QueryTimeSeriesMetricsRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QueryTimeSeriesMetricsResponse) => void): grpc.ClientUnaryCall;
    quotaLimits(request: server_v1_observability_pb.QuotaLimitsRequest, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QuotaLimitsResponse) => void): grpc.ClientUnaryCall;
    quotaLimits(request: server_v1_observability_pb.QuotaLimitsRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QuotaLimitsResponse) => void): grpc.ClientUnaryCall;
    quotaLimits(request: server_v1_observability_pb.QuotaLimitsRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QuotaLimitsResponse) => void): grpc.ClientUnaryCall;
    quotaUsage(request: server_v1_observability_pb.QuotaUsageRequest, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QuotaUsageResponse) => void): grpc.ClientUnaryCall;
    quotaUsage(request: server_v1_observability_pb.QuotaUsageRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QuotaUsageResponse) => void): grpc.ClientUnaryCall;
    quotaUsage(request: server_v1_observability_pb.QuotaUsageRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QuotaUsageResponse) => void): grpc.ClientUnaryCall;
    getInfo(request: server_v1_observability_pb.GetInfoRequest, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.GetInfoResponse) => void): grpc.ClientUnaryCall;
    getInfo(request: server_v1_observability_pb.GetInfoRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.GetInfoResponse) => void): grpc.ClientUnaryCall;
    getInfo(request: server_v1_observability_pb.GetInfoRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.GetInfoResponse) => void): grpc.ClientUnaryCall;
}

export class ObservabilityClient extends grpc.Client implements IObservabilityClient {
    constructor(address: string, credentials: grpc.ChannelCredentials, options?: Partial<grpc.ClientOptions>);
    public queryTimeSeriesMetrics(request: server_v1_observability_pb.QueryTimeSeriesMetricsRequest, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QueryTimeSeriesMetricsResponse) => void): grpc.ClientUnaryCall;
    public queryTimeSeriesMetrics(request: server_v1_observability_pb.QueryTimeSeriesMetricsRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QueryTimeSeriesMetricsResponse) => void): grpc.ClientUnaryCall;
    public queryTimeSeriesMetrics(request: server_v1_observability_pb.QueryTimeSeriesMetricsRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QueryTimeSeriesMetricsResponse) => void): grpc.ClientUnaryCall;
    public quotaLimits(request: server_v1_observability_pb.QuotaLimitsRequest, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QuotaLimitsResponse) => void): grpc.ClientUnaryCall;
    public quotaLimits(request: server_v1_observability_pb.QuotaLimitsRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QuotaLimitsResponse) => void): grpc.ClientUnaryCall;
    public quotaLimits(request: server_v1_observability_pb.QuotaLimitsRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QuotaLimitsResponse) => void): grpc.ClientUnaryCall;
    public quotaUsage(request: server_v1_observability_pb.QuotaUsageRequest, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QuotaUsageResponse) => void): grpc.ClientUnaryCall;
    public quotaUsage(request: server_v1_observability_pb.QuotaUsageRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QuotaUsageResponse) => void): grpc.ClientUnaryCall;
    public quotaUsage(request: server_v1_observability_pb.QuotaUsageRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QuotaUsageResponse) => void): grpc.ClientUnaryCall;
    public getInfo(request: server_v1_observability_pb.GetInfoRequest, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.GetInfoResponse) => void): grpc.ClientUnaryCall;
    public getInfo(request: server_v1_observability_pb.GetInfoRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.GetInfoResponse) => void): grpc.ClientUnaryCall;
    public getInfo(request: server_v1_observability_pb.GetInfoRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.GetInfoResponse) => void): grpc.ClientUnaryCall;
}
