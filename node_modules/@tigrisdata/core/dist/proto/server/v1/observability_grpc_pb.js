// GENERATED CODE -- DO NOT EDIT!

// Original file comments:
// Copyright 2022-2023 Tigris Data, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
'use strict';
var grpc = require('@grpc/grpc-js');
var server_v1_observability_pb = require('../../server/v1/observability_pb.js');
var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
var openapiv3_annotations_pb = require('../../openapiv3/annotations_pb.js');

function serialize_tigrisdata_observability_v1_GetInfoRequest(arg) {
  if (!(arg instanceof server_v1_observability_pb.GetInfoRequest)) {
    throw new Error('Expected argument of type tigrisdata.observability.v1.GetInfoRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_observability_v1_GetInfoRequest(buffer_arg) {
  return server_v1_observability_pb.GetInfoRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_observability_v1_GetInfoResponse(arg) {
  if (!(arg instanceof server_v1_observability_pb.GetInfoResponse)) {
    throw new Error('Expected argument of type tigrisdata.observability.v1.GetInfoResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_observability_v1_GetInfoResponse(buffer_arg) {
  return server_v1_observability_pb.GetInfoResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_observability_v1_QueryTimeSeriesMetricsRequest(arg) {
  if (!(arg instanceof server_v1_observability_pb.QueryTimeSeriesMetricsRequest)) {
    throw new Error('Expected argument of type tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_observability_v1_QueryTimeSeriesMetricsRequest(buffer_arg) {
  return server_v1_observability_pb.QueryTimeSeriesMetricsRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_observability_v1_QueryTimeSeriesMetricsResponse(arg) {
  if (!(arg instanceof server_v1_observability_pb.QueryTimeSeriesMetricsResponse)) {
    throw new Error('Expected argument of type tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_observability_v1_QueryTimeSeriesMetricsResponse(buffer_arg) {
  return server_v1_observability_pb.QueryTimeSeriesMetricsResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_observability_v1_QuotaLimitsRequest(arg) {
  if (!(arg instanceof server_v1_observability_pb.QuotaLimitsRequest)) {
    throw new Error('Expected argument of type tigrisdata.observability.v1.QuotaLimitsRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_observability_v1_QuotaLimitsRequest(buffer_arg) {
  return server_v1_observability_pb.QuotaLimitsRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_observability_v1_QuotaLimitsResponse(arg) {
  if (!(arg instanceof server_v1_observability_pb.QuotaLimitsResponse)) {
    throw new Error('Expected argument of type tigrisdata.observability.v1.QuotaLimitsResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_observability_v1_QuotaLimitsResponse(buffer_arg) {
  return server_v1_observability_pb.QuotaLimitsResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_observability_v1_QuotaUsageRequest(arg) {
  if (!(arg instanceof server_v1_observability_pb.QuotaUsageRequest)) {
    throw new Error('Expected argument of type tigrisdata.observability.v1.QuotaUsageRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_observability_v1_QuotaUsageRequest(buffer_arg) {
  return server_v1_observability_pb.QuotaUsageRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_observability_v1_QuotaUsageResponse(arg) {
  if (!(arg instanceof server_v1_observability_pb.QuotaUsageResponse)) {
    throw new Error('Expected argument of type tigrisdata.observability.v1.QuotaUsageResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_observability_v1_QuotaUsageResponse(buffer_arg) {
  return server_v1_observability_pb.QuotaUsageResponse.deserializeBinary(new Uint8Array(buffer_arg));
}


var ObservabilityService = exports.ObservabilityService = {
  // Queries time series metrics
queryTimeSeriesMetrics: {
    path: '/tigrisdata.observability.v1.Observability/QueryTimeSeriesMetrics',
    requestStream: false,
    responseStream: false,
    requestType: server_v1_observability_pb.QueryTimeSeriesMetricsRequest,
    responseType: server_v1_observability_pb.QueryTimeSeriesMetricsResponse,
    requestSerialize: serialize_tigrisdata_observability_v1_QueryTimeSeriesMetricsRequest,
    requestDeserialize: deserialize_tigrisdata_observability_v1_QueryTimeSeriesMetricsRequest,
    responseSerialize: serialize_tigrisdata_observability_v1_QueryTimeSeriesMetricsResponse,
    responseDeserialize: deserialize_tigrisdata_observability_v1_QueryTimeSeriesMetricsResponse,
  },
  // Returns current namespace quota limits
quotaLimits: {
    path: '/tigrisdata.observability.v1.Observability/QuotaLimits',
    requestStream: false,
    responseStream: false,
    requestType: server_v1_observability_pb.QuotaLimitsRequest,
    responseType: server_v1_observability_pb.QuotaLimitsResponse,
    requestSerialize: serialize_tigrisdata_observability_v1_QuotaLimitsRequest,
    requestDeserialize: deserialize_tigrisdata_observability_v1_QuotaLimitsRequest,
    responseSerialize: serialize_tigrisdata_observability_v1_QuotaLimitsResponse,
    responseDeserialize: deserialize_tigrisdata_observability_v1_QuotaLimitsResponse,
  },
  // Returns current namespace quota limits
quotaUsage: {
    path: '/tigrisdata.observability.v1.Observability/QuotaUsage',
    requestStream: false,
    responseStream: false,
    requestType: server_v1_observability_pb.QuotaUsageRequest,
    responseType: server_v1_observability_pb.QuotaUsageResponse,
    requestSerialize: serialize_tigrisdata_observability_v1_QuotaUsageRequest,
    requestDeserialize: deserialize_tigrisdata_observability_v1_QuotaUsageRequest,
    responseSerialize: serialize_tigrisdata_observability_v1_QuotaUsageResponse,
    responseDeserialize: deserialize_tigrisdata_observability_v1_QuotaUsageResponse,
  },
  // Provides the information about the server. This information includes returning the server version, etc.
getInfo: {
    path: '/tigrisdata.observability.v1.Observability/GetInfo',
    requestStream: false,
    responseStream: false,
    requestType: server_v1_observability_pb.GetInfoRequest,
    responseType: server_v1_observability_pb.GetInfoResponse,
    requestSerialize: serialize_tigrisdata_observability_v1_GetInfoRequest,
    requestDeserialize: deserialize_tigrisdata_observability_v1_GetInfoRequest,
    responseSerialize: serialize_tigrisdata_observability_v1_GetInfoResponse,
    responseDeserialize: deserialize_tigrisdata_observability_v1_GetInfoResponse,
  },
};

exports.ObservabilityClient = grpc.makeGenericClientConstructor(ObservabilityService);
