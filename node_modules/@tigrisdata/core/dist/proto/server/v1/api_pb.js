// source: server/v1/api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var openapiv3_annotations_pb = require('../../openapiv3/annotations_pb.js');
goog.object.extend(proto, openapiv3_annotations_pb);
goog.exportSymbol('proto.tigrisdata.v1.AppKey', null, global);
goog.exportSymbol('proto.tigrisdata.v1.BeginTransactionRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.BeginTransactionResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.BranchInfo', null, global);
goog.exportSymbol('proto.tigrisdata.v1.BranchMetadata', null, global);
goog.exportSymbol('proto.tigrisdata.v1.BuildCollectionIndexRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.BuildCollectionIndexResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.Collation', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CollectionDescription', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CollectionIndex', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CollectionInfo', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CollectionMetadata', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CollectionOptions', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CommitTransactionRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CommitTransactionResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CountRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CountResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CreateAppKeyRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CreateAppKeyResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CreateBranchRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CreateBranchResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CreateOrUpdateCollectionRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CreateOrUpdateCollectionResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CreateProjectRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CreateProjectResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DatabaseMetadata', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DatabaseOptions', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DeleteAppKeyRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DeleteAppKeyResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DeleteBranchRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DeleteBranchResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DeleteProjectRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DeleteProjectResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DeleteRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DeleteRequestOptions', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DeleteResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DescribeCollectionRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DescribeCollectionResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DescribeDatabaseRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DescribeDatabaseResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DropCollectionRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DropCollectionResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ExplainResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.FacetCount', null, global);
goog.exportSymbol('proto.tigrisdata.v1.FacetStats', null, global);
goog.exportSymbol('proto.tigrisdata.v1.Field', null, global);
goog.exportSymbol('proto.tigrisdata.v1.GroupedSearchHits', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ImportRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ImportRequestOptions', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ImportResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.InsertRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.InsertRequestOptions', null, global);
goog.exportSymbol('proto.tigrisdata.v1.InsertResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ListAppKeysRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ListAppKeysResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ListBranchesRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ListBranchesResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ListCollectionsRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ListCollectionsResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ListProjectsRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ListProjectsResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.Match', null, global);
goog.exportSymbol('proto.tigrisdata.v1.MatchField', null, global);
goog.exportSymbol('proto.tigrisdata.v1.Page', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ProjectDescription', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ProjectInfo', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ProjectMetadata', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ReadRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ReadRequestOptions', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ReadResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ReplaceRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ReplaceRequestOptions', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ReplaceResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ResponseMetadata', null, global);
goog.exportSymbol('proto.tigrisdata.v1.RollbackTransactionRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.RollbackTransactionResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.RotateAppKeyRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.RotateAppKeyResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.SearchFacet', null, global);
goog.exportSymbol('proto.tigrisdata.v1.SearchHit', null, global);
goog.exportSymbol('proto.tigrisdata.v1.SearchHitMeta', null, global);
goog.exportSymbol('proto.tigrisdata.v1.SearchMetadata', null, global);
goog.exportSymbol('proto.tigrisdata.v1.SearchRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.SearchResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.TransactionCtx', null, global);
goog.exportSymbol('proto.tigrisdata.v1.TransactionOptions', null, global);
goog.exportSymbol('proto.tigrisdata.v1.UpdateAppKeyRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.UpdateAppKeyResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.UpdateRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.UpdateRequestOptions', null, global);
goog.exportSymbol('proto.tigrisdata.v1.UpdateResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.WriteOptions', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.WriteOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.WriteOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.WriteOptions.displayName = 'proto.tigrisdata.v1.WriteOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.Collation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.Collation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.Collation.displayName = 'proto.tigrisdata.v1.Collation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ReadRequestOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.ReadRequestOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ReadRequestOptions.displayName = 'proto.tigrisdata.v1.ReadRequestOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DatabaseOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DatabaseOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DatabaseOptions.displayName = 'proto.tigrisdata.v1.DatabaseOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CollectionOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CollectionOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CollectionOptions.displayName = 'proto.tigrisdata.v1.CollectionOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.TransactionOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.TransactionOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.TransactionOptions.displayName = 'proto.tigrisdata.v1.TransactionOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.TransactionCtx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.TransactionCtx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.TransactionCtx.displayName = 'proto.tigrisdata.v1.TransactionCtx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.BeginTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.BeginTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.BeginTransactionRequest.displayName = 'proto.tigrisdata.v1.BeginTransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.BeginTransactionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.BeginTransactionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.BeginTransactionResponse.displayName = 'proto.tigrisdata.v1.BeginTransactionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CommitTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CommitTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CommitTransactionRequest.displayName = 'proto.tigrisdata.v1.CommitTransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CommitTransactionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CommitTransactionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CommitTransactionResponse.displayName = 'proto.tigrisdata.v1.CommitTransactionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.RollbackTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.RollbackTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.RollbackTransactionRequest.displayName = 'proto.tigrisdata.v1.RollbackTransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.RollbackTransactionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.RollbackTransactionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.RollbackTransactionResponse.displayName = 'proto.tigrisdata.v1.RollbackTransactionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.InsertRequestOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.InsertRequestOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.InsertRequestOptions.displayName = 'proto.tigrisdata.v1.InsertRequestOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ImportRequestOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.ImportRequestOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ImportRequestOptions.displayName = 'proto.tigrisdata.v1.ImportRequestOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ResponseMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.ResponseMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ResponseMetadata.displayName = 'proto.tigrisdata.v1.ResponseMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.InsertRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.InsertRequest.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.InsertRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.InsertRequest.displayName = 'proto.tigrisdata.v1.InsertRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.InsertResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.InsertResponse.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.InsertResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.InsertResponse.displayName = 'proto.tigrisdata.v1.InsertResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ImportRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.ImportRequest.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.ImportRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ImportRequest.displayName = 'proto.tigrisdata.v1.ImportRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ImportResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.ImportResponse.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.ImportResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ImportResponse.displayName = 'proto.tigrisdata.v1.ImportResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ReplaceRequestOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.ReplaceRequestOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ReplaceRequestOptions.displayName = 'proto.tigrisdata.v1.ReplaceRequestOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ReplaceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.ReplaceRequest.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.ReplaceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ReplaceRequest.displayName = 'proto.tigrisdata.v1.ReplaceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ReplaceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.ReplaceResponse.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.ReplaceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ReplaceResponse.displayName = 'proto.tigrisdata.v1.ReplaceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DeleteRequestOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DeleteRequestOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DeleteRequestOptions.displayName = 'proto.tigrisdata.v1.DeleteRequestOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DeleteRequest.displayName = 'proto.tigrisdata.v1.DeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DeleteResponse.displayName = 'proto.tigrisdata.v1.DeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.UpdateRequestOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.UpdateRequestOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.UpdateRequestOptions.displayName = 'proto.tigrisdata.v1.UpdateRequestOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.UpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.UpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.UpdateRequest.displayName = 'proto.tigrisdata.v1.UpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.UpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.UpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.UpdateResponse.displayName = 'proto.tigrisdata.v1.UpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ReadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.ReadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ReadRequest.displayName = 'proto.tigrisdata.v1.ReadRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ReadResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.ReadResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ReadResponse.displayName = 'proto.tigrisdata.v1.ReadResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CountRequest.displayName = 'proto.tigrisdata.v1.CountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CountResponse.displayName = 'proto.tigrisdata.v1.CountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ExplainResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.ExplainResponse.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.ExplainResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ExplainResponse.displayName = 'proto.tigrisdata.v1.ExplainResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.SearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.SearchRequest.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.SearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.SearchRequest.displayName = 'proto.tigrisdata.v1.SearchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.SearchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.SearchResponse.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.SearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.SearchResponse.displayName = 'proto.tigrisdata.v1.SearchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.SearchHit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.SearchHit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.SearchHit.displayName = 'proto.tigrisdata.v1.SearchHit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.SearchHitMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.SearchHitMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.SearchHitMeta.displayName = 'proto.tigrisdata.v1.SearchHitMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.SearchFacet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.SearchFacet.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.SearchFacet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.SearchFacet.displayName = 'proto.tigrisdata.v1.SearchFacet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.FacetCount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.FacetCount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.FacetCount.displayName = 'proto.tigrisdata.v1.FacetCount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.FacetStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.FacetStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.FacetStats.displayName = 'proto.tigrisdata.v1.FacetStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.SearchMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.SearchMetadata.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.SearchMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.SearchMetadata.displayName = 'proto.tigrisdata.v1.SearchMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.MatchField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.MatchField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.MatchField.displayName = 'proto.tigrisdata.v1.MatchField';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.Match = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.Match.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.Match, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.Match.displayName = 'proto.tigrisdata.v1.Match';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.GroupedSearchHits = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.GroupedSearchHits.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.GroupedSearchHits, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.GroupedSearchHits.displayName = 'proto.tigrisdata.v1.GroupedSearchHits';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.Page = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.Page, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.Page.displayName = 'proto.tigrisdata.v1.Page';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CreateProjectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CreateProjectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CreateProjectRequest.displayName = 'proto.tigrisdata.v1.CreateProjectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CreateProjectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CreateProjectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CreateProjectResponse.displayName = 'proto.tigrisdata.v1.CreateProjectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DeleteProjectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DeleteProjectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DeleteProjectRequest.displayName = 'proto.tigrisdata.v1.DeleteProjectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DeleteProjectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DeleteProjectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DeleteProjectResponse.displayName = 'proto.tigrisdata.v1.DeleteProjectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CreateBranchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CreateBranchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CreateBranchRequest.displayName = 'proto.tigrisdata.v1.CreateBranchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CreateBranchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CreateBranchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CreateBranchResponse.displayName = 'proto.tigrisdata.v1.CreateBranchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DeleteBranchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DeleteBranchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DeleteBranchRequest.displayName = 'proto.tigrisdata.v1.DeleteBranchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DeleteBranchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DeleteBranchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DeleteBranchResponse.displayName = 'proto.tigrisdata.v1.DeleteBranchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ListBranchesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.ListBranchesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ListBranchesRequest.displayName = 'proto.tigrisdata.v1.ListBranchesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ListBranchesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.ListBranchesResponse.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.ListBranchesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ListBranchesResponse.displayName = 'proto.tigrisdata.v1.ListBranchesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CreateOrUpdateCollectionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.displayName = 'proto.tigrisdata.v1.CreateOrUpdateCollectionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CreateOrUpdateCollectionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.displayName = 'proto.tigrisdata.v1.CreateOrUpdateCollectionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DropCollectionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DropCollectionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DropCollectionRequest.displayName = 'proto.tigrisdata.v1.DropCollectionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DropCollectionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DropCollectionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DropCollectionResponse.displayName = 'proto.tigrisdata.v1.DropCollectionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ProjectInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.ProjectInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ProjectInfo.displayName = 'proto.tigrisdata.v1.ProjectInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CollectionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CollectionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CollectionInfo.displayName = 'proto.tigrisdata.v1.CollectionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.BranchInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.BranchInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.BranchInfo.displayName = 'proto.tigrisdata.v1.BranchInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ListProjectsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.ListProjectsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ListProjectsRequest.displayName = 'proto.tigrisdata.v1.ListProjectsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ListProjectsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.ListProjectsResponse.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.ListProjectsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ListProjectsResponse.displayName = 'proto.tigrisdata.v1.ListProjectsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ListCollectionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.ListCollectionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ListCollectionsRequest.displayName = 'proto.tigrisdata.v1.ListCollectionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ListCollectionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.ListCollectionsResponse.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.ListCollectionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ListCollectionsResponse.displayName = 'proto.tigrisdata.v1.ListCollectionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DescribeDatabaseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DescribeDatabaseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DescribeDatabaseRequest.displayName = 'proto.tigrisdata.v1.DescribeDatabaseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DescribeCollectionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DescribeCollectionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DescribeCollectionRequest.displayName = 'proto.tigrisdata.v1.DescribeCollectionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DescribeDatabaseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.DescribeDatabaseResponse.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.DescribeDatabaseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DescribeDatabaseResponse.displayName = 'proto.tigrisdata.v1.DescribeDatabaseResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DescribeCollectionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.DescribeCollectionResponse.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.DescribeCollectionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DescribeCollectionResponse.displayName = 'proto.tigrisdata.v1.DescribeCollectionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ProjectDescription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.ProjectDescription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ProjectDescription.displayName = 'proto.tigrisdata.v1.ProjectDescription';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CollectionDescription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.CollectionDescription.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.CollectionDescription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CollectionDescription.displayName = 'proto.tigrisdata.v1.CollectionDescription';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ProjectMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.ProjectMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ProjectMetadata.displayName = 'proto.tigrisdata.v1.ProjectMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DatabaseMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DatabaseMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DatabaseMetadata.displayName = 'proto.tigrisdata.v1.DatabaseMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CollectionMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CollectionMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CollectionMetadata.displayName = 'proto.tigrisdata.v1.CollectionMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CollectionIndex = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.CollectionIndex.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.CollectionIndex, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CollectionIndex.displayName = 'proto.tigrisdata.v1.CollectionIndex';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.Field = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.Field, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.Field.displayName = 'proto.tigrisdata.v1.Field';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.BuildCollectionIndexRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.BuildCollectionIndexRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.BuildCollectionIndexRequest.displayName = 'proto.tigrisdata.v1.BuildCollectionIndexRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.BuildCollectionIndexResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.BuildCollectionIndexResponse.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.BuildCollectionIndexResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.BuildCollectionIndexResponse.displayName = 'proto.tigrisdata.v1.BuildCollectionIndexResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.BranchMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.BranchMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.BranchMetadata.displayName = 'proto.tigrisdata.v1.BranchMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CreateAppKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CreateAppKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CreateAppKeyRequest.displayName = 'proto.tigrisdata.v1.CreateAppKeyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CreateAppKeyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CreateAppKeyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CreateAppKeyResponse.displayName = 'proto.tigrisdata.v1.CreateAppKeyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.UpdateAppKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.UpdateAppKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.UpdateAppKeyRequest.displayName = 'proto.tigrisdata.v1.UpdateAppKeyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.UpdateAppKeyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.UpdateAppKeyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.UpdateAppKeyResponse.displayName = 'proto.tigrisdata.v1.UpdateAppKeyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.AppKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.AppKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.AppKey.displayName = 'proto.tigrisdata.v1.AppKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ListAppKeysRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.ListAppKeysRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ListAppKeysRequest.displayName = 'proto.tigrisdata.v1.ListAppKeysRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ListAppKeysResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.ListAppKeysResponse.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.ListAppKeysResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ListAppKeysResponse.displayName = 'proto.tigrisdata.v1.ListAppKeysResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DeleteAppKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DeleteAppKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DeleteAppKeyRequest.displayName = 'proto.tigrisdata.v1.DeleteAppKeyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DeleteAppKeyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DeleteAppKeyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DeleteAppKeyResponse.displayName = 'proto.tigrisdata.v1.DeleteAppKeyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.RotateAppKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.RotateAppKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.RotateAppKeyRequest.displayName = 'proto.tigrisdata.v1.RotateAppKeyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.RotateAppKeyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.RotateAppKeyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.RotateAppKeyResponse.displayName = 'proto.tigrisdata.v1.RotateAppKeyResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.WriteOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.WriteOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.WriteOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.WriteOptions.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.WriteOptions}
 */
proto.tigrisdata.v1.WriteOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.WriteOptions;
  return proto.tigrisdata.v1.WriteOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.WriteOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.WriteOptions}
 */
proto.tigrisdata.v1.WriteOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.WriteOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.WriteOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.WriteOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.WriteOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.Collation.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.Collation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.Collation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.Collation.toObject = function(includeInstance, msg) {
  var f, obj = {
    pb_case: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.Collation}
 */
proto.tigrisdata.v1.Collation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.Collation;
  return proto.tigrisdata.v1.Collation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.Collation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.Collation}
 */
proto.tigrisdata.v1.Collation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.Collation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.Collation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.Collation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.Collation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCase();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string case = 1;
 * @return {string}
 */
proto.tigrisdata.v1.Collation.prototype.getCase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.Collation} returns this
 */
proto.tigrisdata.v1.Collation.prototype.setCase = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ReadRequestOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ReadRequestOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReadRequestOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    skip: jspb.Message.getFieldWithDefault(msg, 3, 0),
    offset: msg.getOffset_asB64(),
    collation: (f = msg.getCollation()) && proto.tigrisdata.v1.Collation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ReadRequestOptions}
 */
proto.tigrisdata.v1.ReadRequestOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ReadRequestOptions;
  return proto.tigrisdata.v1.ReadRequestOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ReadRequestOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ReadRequestOptions}
 */
proto.tigrisdata.v1.ReadRequestOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSkip(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOffset(value);
      break;
    case 5:
      var value = new proto.tigrisdata.v1.Collation;
      reader.readMessage(value,proto.tigrisdata.v1.Collation.deserializeBinaryFromReader);
      msg.setCollation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ReadRequestOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ReadRequestOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReadRequestOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSkip();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getOffset_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getCollation();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.tigrisdata.v1.Collation.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 limit = 2;
 * @return {number}
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.ReadRequestOptions} returns this
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 skip = 3;
 * @return {number}
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.getSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.ReadRequestOptions} returns this
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.setSkip = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes offset = 4;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.getOffset = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes offset = 4;
 * This is a type-conversion wrapper around `getOffset()`
 * @return {string}
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.getOffset_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOffset()));
};


/**
 * optional bytes offset = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOffset()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.getOffset_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOffset()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.ReadRequestOptions} returns this
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.setOffset = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional Collation collation = 5;
 * @return {?proto.tigrisdata.v1.Collation}
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.getCollation = function() {
  return /** @type{?proto.tigrisdata.v1.Collation} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.Collation, 5));
};


/**
 * @param {?proto.tigrisdata.v1.Collation|undefined} value
 * @return {!proto.tigrisdata.v1.ReadRequestOptions} returns this
*/
proto.tigrisdata.v1.ReadRequestOptions.prototype.setCollation = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ReadRequestOptions} returns this
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.clearCollation = function() {
  return this.setCollation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.hasCollation = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DatabaseOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DatabaseOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DatabaseOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DatabaseOptions.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DatabaseOptions}
 */
proto.tigrisdata.v1.DatabaseOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DatabaseOptions;
  return proto.tigrisdata.v1.DatabaseOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DatabaseOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DatabaseOptions}
 */
proto.tigrisdata.v1.DatabaseOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DatabaseOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DatabaseOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DatabaseOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DatabaseOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CollectionOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CollectionOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CollectionOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CollectionOptions.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CollectionOptions}
 */
proto.tigrisdata.v1.CollectionOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CollectionOptions;
  return proto.tigrisdata.v1.CollectionOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CollectionOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CollectionOptions}
 */
proto.tigrisdata.v1.CollectionOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CollectionOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CollectionOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CollectionOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CollectionOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.TransactionOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.TransactionOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.TransactionOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.TransactionOptions.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.TransactionOptions}
 */
proto.tigrisdata.v1.TransactionOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.TransactionOptions;
  return proto.tigrisdata.v1.TransactionOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.TransactionOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.TransactionOptions}
 */
proto.tigrisdata.v1.TransactionOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.TransactionOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.TransactionOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.TransactionOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.TransactionOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.TransactionCtx.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.TransactionCtx.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.TransactionCtx} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.TransactionCtx.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    origin: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.TransactionCtx}
 */
proto.tigrisdata.v1.TransactionCtx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.TransactionCtx;
  return proto.tigrisdata.v1.TransactionCtx.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.TransactionCtx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.TransactionCtx}
 */
proto.tigrisdata.v1.TransactionCtx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrigin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.TransactionCtx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.TransactionCtx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.TransactionCtx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.TransactionCtx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrigin();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.tigrisdata.v1.TransactionCtx.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.TransactionCtx} returns this
 */
proto.tigrisdata.v1.TransactionCtx.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string origin = 2;
 * @return {string}
 */
proto.tigrisdata.v1.TransactionCtx.prototype.getOrigin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.TransactionCtx} returns this
 */
proto.tigrisdata.v1.TransactionCtx.prototype.setOrigin = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.BeginTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.BeginTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.BeginTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.BeginTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.TransactionOptions.toObject(includeInstance, f),
    branch: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.BeginTransactionRequest}
 */
proto.tigrisdata.v1.BeginTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.BeginTransactionRequest;
  return proto.tigrisdata.v1.BeginTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.BeginTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.BeginTransactionRequest}
 */
proto.tigrisdata.v1.BeginTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.TransactionOptions;
      reader.readMessage(value,proto.tigrisdata.v1.TransactionOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.BeginTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.BeginTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.BeginTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.BeginTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.TransactionOptions.serializeBinaryToWriter
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.BeginTransactionRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.BeginTransactionRequest} returns this
 */
proto.tigrisdata.v1.BeginTransactionRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TransactionOptions options = 2;
 * @return {?proto.tigrisdata.v1.TransactionOptions}
 */
proto.tigrisdata.v1.BeginTransactionRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.TransactionOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.TransactionOptions, 2));
};


/**
 * @param {?proto.tigrisdata.v1.TransactionOptions|undefined} value
 * @return {!proto.tigrisdata.v1.BeginTransactionRequest} returns this
*/
proto.tigrisdata.v1.BeginTransactionRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.BeginTransactionRequest} returns this
 */
proto.tigrisdata.v1.BeginTransactionRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.BeginTransactionRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string branch = 3;
 * @return {string}
 */
proto.tigrisdata.v1.BeginTransactionRequest.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.BeginTransactionRequest} returns this
 */
proto.tigrisdata.v1.BeginTransactionRequest.prototype.setBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.BeginTransactionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.BeginTransactionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.BeginTransactionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.BeginTransactionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    txCtx: (f = msg.getTxCtx()) && proto.tigrisdata.v1.TransactionCtx.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.BeginTransactionResponse}
 */
proto.tigrisdata.v1.BeginTransactionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.BeginTransactionResponse;
  return proto.tigrisdata.v1.BeginTransactionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.BeginTransactionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.BeginTransactionResponse}
 */
proto.tigrisdata.v1.BeginTransactionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.TransactionCtx;
      reader.readMessage(value,proto.tigrisdata.v1.TransactionCtx.deserializeBinaryFromReader);
      msg.setTxCtx(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.BeginTransactionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.BeginTransactionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.BeginTransactionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.BeginTransactionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxCtx();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.TransactionCtx.serializeBinaryToWriter
    );
  }
};


/**
 * optional TransactionCtx tx_ctx = 1;
 * @return {?proto.tigrisdata.v1.TransactionCtx}
 */
proto.tigrisdata.v1.BeginTransactionResponse.prototype.getTxCtx = function() {
  return /** @type{?proto.tigrisdata.v1.TransactionCtx} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.TransactionCtx, 1));
};


/**
 * @param {?proto.tigrisdata.v1.TransactionCtx|undefined} value
 * @return {!proto.tigrisdata.v1.BeginTransactionResponse} returns this
*/
proto.tigrisdata.v1.BeginTransactionResponse.prototype.setTxCtx = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.BeginTransactionResponse} returns this
 */
proto.tigrisdata.v1.BeginTransactionResponse.prototype.clearTxCtx = function() {
  return this.setTxCtx(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.BeginTransactionResponse.prototype.hasTxCtx = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CommitTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CommitTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CommitTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CommitTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    branch: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CommitTransactionRequest}
 */
proto.tigrisdata.v1.CommitTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CommitTransactionRequest;
  return proto.tigrisdata.v1.CommitTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CommitTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CommitTransactionRequest}
 */
proto.tigrisdata.v1.CommitTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CommitTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CommitTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CommitTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CommitTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.CommitTransactionRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CommitTransactionRequest} returns this
 */
proto.tigrisdata.v1.CommitTransactionRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string branch = 2;
 * @return {string}
 */
proto.tigrisdata.v1.CommitTransactionRequest.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CommitTransactionRequest} returns this
 */
proto.tigrisdata.v1.CommitTransactionRequest.prototype.setBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CommitTransactionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CommitTransactionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CommitTransactionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CommitTransactionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CommitTransactionResponse}
 */
proto.tigrisdata.v1.CommitTransactionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CommitTransactionResponse;
  return proto.tigrisdata.v1.CommitTransactionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CommitTransactionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CommitTransactionResponse}
 */
proto.tigrisdata.v1.CommitTransactionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CommitTransactionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CommitTransactionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CommitTransactionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CommitTransactionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.tigrisdata.v1.CommitTransactionResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CommitTransactionResponse} returns this
 */
proto.tigrisdata.v1.CommitTransactionResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.RollbackTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.RollbackTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.RollbackTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.RollbackTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    branch: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.RollbackTransactionRequest}
 */
proto.tigrisdata.v1.RollbackTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.RollbackTransactionRequest;
  return proto.tigrisdata.v1.RollbackTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.RollbackTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.RollbackTransactionRequest}
 */
proto.tigrisdata.v1.RollbackTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.RollbackTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.RollbackTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.RollbackTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.RollbackTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.RollbackTransactionRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.RollbackTransactionRequest} returns this
 */
proto.tigrisdata.v1.RollbackTransactionRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string branch = 2;
 * @return {string}
 */
proto.tigrisdata.v1.RollbackTransactionRequest.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.RollbackTransactionRequest} returns this
 */
proto.tigrisdata.v1.RollbackTransactionRequest.prototype.setBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.RollbackTransactionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.RollbackTransactionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.RollbackTransactionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.RollbackTransactionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.RollbackTransactionResponse}
 */
proto.tigrisdata.v1.RollbackTransactionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.RollbackTransactionResponse;
  return proto.tigrisdata.v1.RollbackTransactionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.RollbackTransactionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.RollbackTransactionResponse}
 */
proto.tigrisdata.v1.RollbackTransactionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.RollbackTransactionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.RollbackTransactionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.RollbackTransactionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.RollbackTransactionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.tigrisdata.v1.RollbackTransactionResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.RollbackTransactionResponse} returns this
 */
proto.tigrisdata.v1.RollbackTransactionResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.InsertRequestOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.InsertRequestOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.InsertRequestOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.InsertRequestOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    writeOptions: (f = msg.getWriteOptions()) && proto.tigrisdata.v1.WriteOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.InsertRequestOptions}
 */
proto.tigrisdata.v1.InsertRequestOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.InsertRequestOptions;
  return proto.tigrisdata.v1.InsertRequestOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.InsertRequestOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.InsertRequestOptions}
 */
proto.tigrisdata.v1.InsertRequestOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.WriteOptions;
      reader.readMessage(value,proto.tigrisdata.v1.WriteOptions.deserializeBinaryFromReader);
      msg.setWriteOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.InsertRequestOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.InsertRequestOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.InsertRequestOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.InsertRequestOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWriteOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.WriteOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional WriteOptions write_options = 1;
 * @return {?proto.tigrisdata.v1.WriteOptions}
 */
proto.tigrisdata.v1.InsertRequestOptions.prototype.getWriteOptions = function() {
  return /** @type{?proto.tigrisdata.v1.WriteOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.WriteOptions, 1));
};


/**
 * @param {?proto.tigrisdata.v1.WriteOptions|undefined} value
 * @return {!proto.tigrisdata.v1.InsertRequestOptions} returns this
*/
proto.tigrisdata.v1.InsertRequestOptions.prototype.setWriteOptions = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.InsertRequestOptions} returns this
 */
proto.tigrisdata.v1.InsertRequestOptions.prototype.clearWriteOptions = function() {
  return this.setWriteOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.InsertRequestOptions.prototype.hasWriteOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ImportRequestOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ImportRequestOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ImportRequestOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ImportRequestOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    writeOptions: (f = msg.getWriteOptions()) && proto.tigrisdata.v1.WriteOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ImportRequestOptions}
 */
proto.tigrisdata.v1.ImportRequestOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ImportRequestOptions;
  return proto.tigrisdata.v1.ImportRequestOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ImportRequestOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ImportRequestOptions}
 */
proto.tigrisdata.v1.ImportRequestOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.WriteOptions;
      reader.readMessage(value,proto.tigrisdata.v1.WriteOptions.deserializeBinaryFromReader);
      msg.setWriteOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ImportRequestOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ImportRequestOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ImportRequestOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ImportRequestOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWriteOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.WriteOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional WriteOptions write_options = 1;
 * @return {?proto.tigrisdata.v1.WriteOptions}
 */
proto.tigrisdata.v1.ImportRequestOptions.prototype.getWriteOptions = function() {
  return /** @type{?proto.tigrisdata.v1.WriteOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.WriteOptions, 1));
};


/**
 * @param {?proto.tigrisdata.v1.WriteOptions|undefined} value
 * @return {!proto.tigrisdata.v1.ImportRequestOptions} returns this
*/
proto.tigrisdata.v1.ImportRequestOptions.prototype.setWriteOptions = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ImportRequestOptions} returns this
 */
proto.tigrisdata.v1.ImportRequestOptions.prototype.clearWriteOptions = function() {
  return this.setWriteOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ImportRequestOptions.prototype.hasWriteOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ResponseMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ResponseMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ResponseMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ResponseMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    deletedAt: (f = msg.getDeletedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ResponseMetadata}
 */
proto.tigrisdata.v1.ResponseMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ResponseMetadata;
  return proto.tigrisdata.v1.ResponseMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ResponseMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ResponseMetadata}
 */
proto.tigrisdata.v1.ResponseMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeletedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ResponseMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ResponseMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ResponseMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ResponseMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDeletedAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp created_at = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tigrisdata.v1.ResponseMetadata.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tigrisdata.v1.ResponseMetadata} returns this
*/
proto.tigrisdata.v1.ResponseMetadata.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ResponseMetadata} returns this
 */
proto.tigrisdata.v1.ResponseMetadata.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ResponseMetadata.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tigrisdata.v1.ResponseMetadata.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tigrisdata.v1.ResponseMetadata} returns this
*/
proto.tigrisdata.v1.ResponseMetadata.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ResponseMetadata} returns this
 */
proto.tigrisdata.v1.ResponseMetadata.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ResponseMetadata.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp deleted_at = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tigrisdata.v1.ResponseMetadata.prototype.getDeletedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tigrisdata.v1.ResponseMetadata} returns this
*/
proto.tigrisdata.v1.ResponseMetadata.prototype.setDeletedAt = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ResponseMetadata} returns this
 */
proto.tigrisdata.v1.ResponseMetadata.prototype.clearDeletedAt = function() {
  return this.setDeletedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ResponseMetadata.prototype.hasDeletedAt = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.InsertRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.InsertRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.InsertRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.InsertRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.InsertRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    documentsList: msg.getDocumentsList_asB64(),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.InsertRequestOptions.toObject(includeInstance, f),
    branch: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.InsertRequest}
 */
proto.tigrisdata.v1.InsertRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.InsertRequest;
  return proto.tigrisdata.v1.InsertRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.InsertRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.InsertRequest}
 */
proto.tigrisdata.v1.InsertRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addDocuments(value);
      break;
    case 4:
      var value = new proto.tigrisdata.v1.InsertRequestOptions;
      reader.readMessage(value,proto.tigrisdata.v1.InsertRequestOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.InsertRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.InsertRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.InsertRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.InsertRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDocumentsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.tigrisdata.v1.InsertRequestOptions.serializeBinaryToWriter
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.InsertRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.InsertRequest} returns this
 */
proto.tigrisdata.v1.InsertRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.InsertRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.InsertRequest} returns this
 */
proto.tigrisdata.v1.InsertRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated bytes documents = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.tigrisdata.v1.InsertRequest.prototype.getDocumentsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes documents = 3;
 * This is a type-conversion wrapper around `getDocumentsList()`
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.InsertRequest.prototype.getDocumentsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getDocumentsList()));
};


/**
 * repeated bytes documents = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDocumentsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.tigrisdata.v1.InsertRequest.prototype.getDocumentsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getDocumentsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.tigrisdata.v1.InsertRequest} returns this
 */
proto.tigrisdata.v1.InsertRequest.prototype.setDocumentsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.InsertRequest} returns this
 */
proto.tigrisdata.v1.InsertRequest.prototype.addDocuments = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.InsertRequest} returns this
 */
proto.tigrisdata.v1.InsertRequest.prototype.clearDocumentsList = function() {
  return this.setDocumentsList([]);
};


/**
 * optional InsertRequestOptions options = 4;
 * @return {?proto.tigrisdata.v1.InsertRequestOptions}
 */
proto.tigrisdata.v1.InsertRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.InsertRequestOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.InsertRequestOptions, 4));
};


/**
 * @param {?proto.tigrisdata.v1.InsertRequestOptions|undefined} value
 * @return {!proto.tigrisdata.v1.InsertRequest} returns this
*/
proto.tigrisdata.v1.InsertRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.InsertRequest} returns this
 */
proto.tigrisdata.v1.InsertRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.InsertRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string branch = 5;
 * @return {string}
 */
proto.tigrisdata.v1.InsertRequest.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.InsertRequest} returns this
 */
proto.tigrisdata.v1.InsertRequest.prototype.setBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.InsertResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.InsertResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.InsertResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.InsertResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.InsertResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.ResponseMetadata.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, ""),
    keysList: msg.getKeysList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.InsertResponse}
 */
proto.tigrisdata.v1.InsertResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.InsertResponse;
  return proto.tigrisdata.v1.InsertResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.InsertResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.InsertResponse}
 */
proto.tigrisdata.v1.InsertResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.ResponseMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.ResponseMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addKeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.InsertResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.InsertResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.InsertResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.InsertResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.ResponseMetadata.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getKeysList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
};


/**
 * optional ResponseMetadata metadata = 1;
 * @return {?proto.tigrisdata.v1.ResponseMetadata}
 */
proto.tigrisdata.v1.InsertResponse.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.ResponseMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.ResponseMetadata, 1));
};


/**
 * @param {?proto.tigrisdata.v1.ResponseMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.InsertResponse} returns this
*/
proto.tigrisdata.v1.InsertResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.InsertResponse} returns this
 */
proto.tigrisdata.v1.InsertResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.InsertResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.tigrisdata.v1.InsertResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.InsertResponse} returns this
 */
proto.tigrisdata.v1.InsertResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated bytes keys = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.tigrisdata.v1.InsertResponse.prototype.getKeysList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes keys = 3;
 * This is a type-conversion wrapper around `getKeysList()`
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.InsertResponse.prototype.getKeysList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getKeysList()));
};


/**
 * repeated bytes keys = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getKeysList()`
 * @return {!Array<!Uint8Array>}
 */
proto.tigrisdata.v1.InsertResponse.prototype.getKeysList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getKeysList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.tigrisdata.v1.InsertResponse} returns this
 */
proto.tigrisdata.v1.InsertResponse.prototype.setKeysList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.InsertResponse} returns this
 */
proto.tigrisdata.v1.InsertResponse.prototype.addKeys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.InsertResponse} returns this
 */
proto.tigrisdata.v1.InsertResponse.prototype.clearKeysList = function() {
  return this.setKeysList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.ImportRequest.repeatedFields_ = [3,7,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ImportRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ImportRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ImportRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ImportRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    documentsList: msg.getDocumentsList_asB64(),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.ImportRequestOptions.toObject(includeInstance, f),
    branch: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createCollection: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    primaryKeyList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    autogeneratedList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ImportRequest}
 */
proto.tigrisdata.v1.ImportRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ImportRequest;
  return proto.tigrisdata.v1.ImportRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ImportRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ImportRequest}
 */
proto.tigrisdata.v1.ImportRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addDocuments(value);
      break;
    case 4:
      var value = new proto.tigrisdata.v1.ImportRequestOptions;
      reader.readMessage(value,proto.tigrisdata.v1.ImportRequestOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCreateCollection(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addPrimaryKey(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addAutogenerated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ImportRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ImportRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ImportRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ImportRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDocumentsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.tigrisdata.v1.ImportRequestOptions.serializeBinaryToWriter
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreateCollection();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getPrimaryKeyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getAutogeneratedList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.ImportRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ImportRequest} returns this
 */
proto.tigrisdata.v1.ImportRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.ImportRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ImportRequest} returns this
 */
proto.tigrisdata.v1.ImportRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated bytes documents = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.tigrisdata.v1.ImportRequest.prototype.getDocumentsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes documents = 3;
 * This is a type-conversion wrapper around `getDocumentsList()`
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.ImportRequest.prototype.getDocumentsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getDocumentsList()));
};


/**
 * repeated bytes documents = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDocumentsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.tigrisdata.v1.ImportRequest.prototype.getDocumentsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getDocumentsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.tigrisdata.v1.ImportRequest} returns this
 */
proto.tigrisdata.v1.ImportRequest.prototype.setDocumentsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.ImportRequest} returns this
 */
proto.tigrisdata.v1.ImportRequest.prototype.addDocuments = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.ImportRequest} returns this
 */
proto.tigrisdata.v1.ImportRequest.prototype.clearDocumentsList = function() {
  return this.setDocumentsList([]);
};


/**
 * optional ImportRequestOptions options = 4;
 * @return {?proto.tigrisdata.v1.ImportRequestOptions}
 */
proto.tigrisdata.v1.ImportRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.ImportRequestOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.ImportRequestOptions, 4));
};


/**
 * @param {?proto.tigrisdata.v1.ImportRequestOptions|undefined} value
 * @return {!proto.tigrisdata.v1.ImportRequest} returns this
*/
proto.tigrisdata.v1.ImportRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ImportRequest} returns this
 */
proto.tigrisdata.v1.ImportRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ImportRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string branch = 5;
 * @return {string}
 */
proto.tigrisdata.v1.ImportRequest.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ImportRequest} returns this
 */
proto.tigrisdata.v1.ImportRequest.prototype.setBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool create_collection = 6;
 * @return {boolean}
 */
proto.tigrisdata.v1.ImportRequest.prototype.getCreateCollection = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tigrisdata.v1.ImportRequest} returns this
 */
proto.tigrisdata.v1.ImportRequest.prototype.setCreateCollection = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * repeated string primary_key = 7;
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.ImportRequest.prototype.getPrimaryKeyList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.tigrisdata.v1.ImportRequest} returns this
 */
proto.tigrisdata.v1.ImportRequest.prototype.setPrimaryKeyList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.ImportRequest} returns this
 */
proto.tigrisdata.v1.ImportRequest.prototype.addPrimaryKey = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.ImportRequest} returns this
 */
proto.tigrisdata.v1.ImportRequest.prototype.clearPrimaryKeyList = function() {
  return this.setPrimaryKeyList([]);
};


/**
 * repeated string autogenerated = 8;
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.ImportRequest.prototype.getAutogeneratedList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.tigrisdata.v1.ImportRequest} returns this
 */
proto.tigrisdata.v1.ImportRequest.prototype.setAutogeneratedList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.ImportRequest} returns this
 */
proto.tigrisdata.v1.ImportRequest.prototype.addAutogenerated = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.ImportRequest} returns this
 */
proto.tigrisdata.v1.ImportRequest.prototype.clearAutogeneratedList = function() {
  return this.setAutogeneratedList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.ImportResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ImportResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ImportResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ImportResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ImportResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.ResponseMetadata.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, ""),
    keysList: msg.getKeysList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ImportResponse}
 */
proto.tigrisdata.v1.ImportResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ImportResponse;
  return proto.tigrisdata.v1.ImportResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ImportResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ImportResponse}
 */
proto.tigrisdata.v1.ImportResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.ResponseMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.ResponseMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addKeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ImportResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ImportResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ImportResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ImportResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.ResponseMetadata.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getKeysList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
};


/**
 * optional ResponseMetadata metadata = 1;
 * @return {?proto.tigrisdata.v1.ResponseMetadata}
 */
proto.tigrisdata.v1.ImportResponse.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.ResponseMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.ResponseMetadata, 1));
};


/**
 * @param {?proto.tigrisdata.v1.ResponseMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.ImportResponse} returns this
*/
proto.tigrisdata.v1.ImportResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ImportResponse} returns this
 */
proto.tigrisdata.v1.ImportResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ImportResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.tigrisdata.v1.ImportResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ImportResponse} returns this
 */
proto.tigrisdata.v1.ImportResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated bytes keys = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.tigrisdata.v1.ImportResponse.prototype.getKeysList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes keys = 3;
 * This is a type-conversion wrapper around `getKeysList()`
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.ImportResponse.prototype.getKeysList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getKeysList()));
};


/**
 * repeated bytes keys = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getKeysList()`
 * @return {!Array<!Uint8Array>}
 */
proto.tigrisdata.v1.ImportResponse.prototype.getKeysList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getKeysList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.tigrisdata.v1.ImportResponse} returns this
 */
proto.tigrisdata.v1.ImportResponse.prototype.setKeysList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.ImportResponse} returns this
 */
proto.tigrisdata.v1.ImportResponse.prototype.addKeys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.ImportResponse} returns this
 */
proto.tigrisdata.v1.ImportResponse.prototype.clearKeysList = function() {
  return this.setKeysList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ReplaceRequestOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ReplaceRequestOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ReplaceRequestOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReplaceRequestOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    writeOptions: (f = msg.getWriteOptions()) && proto.tigrisdata.v1.WriteOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ReplaceRequestOptions}
 */
proto.tigrisdata.v1.ReplaceRequestOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ReplaceRequestOptions;
  return proto.tigrisdata.v1.ReplaceRequestOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ReplaceRequestOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ReplaceRequestOptions}
 */
proto.tigrisdata.v1.ReplaceRequestOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.WriteOptions;
      reader.readMessage(value,proto.tigrisdata.v1.WriteOptions.deserializeBinaryFromReader);
      msg.setWriteOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReplaceRequestOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ReplaceRequestOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ReplaceRequestOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReplaceRequestOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWriteOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.WriteOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional WriteOptions write_options = 1;
 * @return {?proto.tigrisdata.v1.WriteOptions}
 */
proto.tigrisdata.v1.ReplaceRequestOptions.prototype.getWriteOptions = function() {
  return /** @type{?proto.tigrisdata.v1.WriteOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.WriteOptions, 1));
};


/**
 * @param {?proto.tigrisdata.v1.WriteOptions|undefined} value
 * @return {!proto.tigrisdata.v1.ReplaceRequestOptions} returns this
*/
proto.tigrisdata.v1.ReplaceRequestOptions.prototype.setWriteOptions = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ReplaceRequestOptions} returns this
 */
proto.tigrisdata.v1.ReplaceRequestOptions.prototype.clearWriteOptions = function() {
  return this.setWriteOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ReplaceRequestOptions.prototype.hasWriteOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.ReplaceRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ReplaceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ReplaceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReplaceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    documentsList: msg.getDocumentsList_asB64(),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.ReplaceRequestOptions.toObject(includeInstance, f),
    branch: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ReplaceRequest}
 */
proto.tigrisdata.v1.ReplaceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ReplaceRequest;
  return proto.tigrisdata.v1.ReplaceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ReplaceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ReplaceRequest}
 */
proto.tigrisdata.v1.ReplaceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addDocuments(value);
      break;
    case 4:
      var value = new proto.tigrisdata.v1.ReplaceRequestOptions;
      reader.readMessage(value,proto.tigrisdata.v1.ReplaceRequestOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ReplaceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ReplaceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReplaceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDocumentsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.tigrisdata.v1.ReplaceRequestOptions.serializeBinaryToWriter
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ReplaceRequest} returns this
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ReplaceRequest} returns this
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated bytes documents = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.getDocumentsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes documents = 3;
 * This is a type-conversion wrapper around `getDocumentsList()`
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.getDocumentsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getDocumentsList()));
};


/**
 * repeated bytes documents = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDocumentsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.getDocumentsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getDocumentsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.tigrisdata.v1.ReplaceRequest} returns this
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.setDocumentsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.ReplaceRequest} returns this
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.addDocuments = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.ReplaceRequest} returns this
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.clearDocumentsList = function() {
  return this.setDocumentsList([]);
};


/**
 * optional ReplaceRequestOptions options = 4;
 * @return {?proto.tigrisdata.v1.ReplaceRequestOptions}
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.ReplaceRequestOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.ReplaceRequestOptions, 4));
};


/**
 * @param {?proto.tigrisdata.v1.ReplaceRequestOptions|undefined} value
 * @return {!proto.tigrisdata.v1.ReplaceRequest} returns this
*/
proto.tigrisdata.v1.ReplaceRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ReplaceRequest} returns this
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string branch = 5;
 * @return {string}
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ReplaceRequest} returns this
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.setBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.ReplaceResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ReplaceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ReplaceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReplaceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.ResponseMetadata.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, ""),
    keysList: msg.getKeysList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ReplaceResponse}
 */
proto.tigrisdata.v1.ReplaceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ReplaceResponse;
  return proto.tigrisdata.v1.ReplaceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ReplaceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ReplaceResponse}
 */
proto.tigrisdata.v1.ReplaceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.ResponseMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.ResponseMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addKeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ReplaceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ReplaceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReplaceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.ResponseMetadata.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getKeysList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
};


/**
 * optional ResponseMetadata metadata = 1;
 * @return {?proto.tigrisdata.v1.ResponseMetadata}
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.ResponseMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.ResponseMetadata, 1));
};


/**
 * @param {?proto.tigrisdata.v1.ResponseMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.ReplaceResponse} returns this
*/
proto.tigrisdata.v1.ReplaceResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ReplaceResponse} returns this
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ReplaceResponse} returns this
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated bytes keys = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.getKeysList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes keys = 3;
 * This is a type-conversion wrapper around `getKeysList()`
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.getKeysList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getKeysList()));
};


/**
 * repeated bytes keys = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getKeysList()`
 * @return {!Array<!Uint8Array>}
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.getKeysList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getKeysList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.tigrisdata.v1.ReplaceResponse} returns this
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.setKeysList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.ReplaceResponse} returns this
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.addKeys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.ReplaceResponse} returns this
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.clearKeysList = function() {
  return this.setKeysList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DeleteRequestOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DeleteRequestOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DeleteRequestOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteRequestOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    writeOptions: (f = msg.getWriteOptions()) && proto.tigrisdata.v1.WriteOptions.toObject(includeInstance, f),
    collation: (f = msg.getCollation()) && proto.tigrisdata.v1.Collation.toObject(includeInstance, f),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DeleteRequestOptions}
 */
proto.tigrisdata.v1.DeleteRequestOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DeleteRequestOptions;
  return proto.tigrisdata.v1.DeleteRequestOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DeleteRequestOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DeleteRequestOptions}
 */
proto.tigrisdata.v1.DeleteRequestOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.WriteOptions;
      reader.readMessage(value,proto.tigrisdata.v1.WriteOptions.deserializeBinaryFromReader);
      msg.setWriteOptions(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.Collation;
      reader.readMessage(value,proto.tigrisdata.v1.Collation.deserializeBinaryFromReader);
      msg.setCollation(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DeleteRequestOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DeleteRequestOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DeleteRequestOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteRequestOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWriteOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.WriteOptions.serializeBinaryToWriter
    );
  }
  f = message.getCollation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.Collation.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional WriteOptions write_options = 1;
 * @return {?proto.tigrisdata.v1.WriteOptions}
 */
proto.tigrisdata.v1.DeleteRequestOptions.prototype.getWriteOptions = function() {
  return /** @type{?proto.tigrisdata.v1.WriteOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.WriteOptions, 1));
};


/**
 * @param {?proto.tigrisdata.v1.WriteOptions|undefined} value
 * @return {!proto.tigrisdata.v1.DeleteRequestOptions} returns this
*/
proto.tigrisdata.v1.DeleteRequestOptions.prototype.setWriteOptions = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.DeleteRequestOptions} returns this
 */
proto.tigrisdata.v1.DeleteRequestOptions.prototype.clearWriteOptions = function() {
  return this.setWriteOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.DeleteRequestOptions.prototype.hasWriteOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Collation collation = 2;
 * @return {?proto.tigrisdata.v1.Collation}
 */
proto.tigrisdata.v1.DeleteRequestOptions.prototype.getCollation = function() {
  return /** @type{?proto.tigrisdata.v1.Collation} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.Collation, 2));
};


/**
 * @param {?proto.tigrisdata.v1.Collation|undefined} value
 * @return {!proto.tigrisdata.v1.DeleteRequestOptions} returns this
*/
proto.tigrisdata.v1.DeleteRequestOptions.prototype.setCollation = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.DeleteRequestOptions} returns this
 */
proto.tigrisdata.v1.DeleteRequestOptions.prototype.clearCollation = function() {
  return this.setCollation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.DeleteRequestOptions.prototype.hasCollation = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 limit = 3;
 * @return {number}
 */
proto.tigrisdata.v1.DeleteRequestOptions.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.DeleteRequestOptions} returns this
 */
proto.tigrisdata.v1.DeleteRequestOptions.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    filter: msg.getFilter_asB64(),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.DeleteRequestOptions.toObject(includeInstance, f),
    branch: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DeleteRequest}
 */
proto.tigrisdata.v1.DeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DeleteRequest;
  return proto.tigrisdata.v1.DeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DeleteRequest}
 */
proto.tigrisdata.v1.DeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFilter(value);
      break;
    case 4:
      var value = new proto.tigrisdata.v1.DeleteRequestOptions;
      reader.readMessage(value,proto.tigrisdata.v1.DeleteRequestOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFilter_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.tigrisdata.v1.DeleteRequestOptions.serializeBinaryToWriter
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.DeleteRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DeleteRequest} returns this
 */
proto.tigrisdata.v1.DeleteRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.DeleteRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DeleteRequest} returns this
 */
proto.tigrisdata.v1.DeleteRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes filter = 3;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.DeleteRequest.prototype.getFilter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes filter = 3;
 * This is a type-conversion wrapper around `getFilter()`
 * @return {string}
 */
proto.tigrisdata.v1.DeleteRequest.prototype.getFilter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFilter()));
};


/**
 * optional bytes filter = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFilter()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DeleteRequest.prototype.getFilter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFilter()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.DeleteRequest} returns this
 */
proto.tigrisdata.v1.DeleteRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional DeleteRequestOptions options = 4;
 * @return {?proto.tigrisdata.v1.DeleteRequestOptions}
 */
proto.tigrisdata.v1.DeleteRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.DeleteRequestOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.DeleteRequestOptions, 4));
};


/**
 * @param {?proto.tigrisdata.v1.DeleteRequestOptions|undefined} value
 * @return {!proto.tigrisdata.v1.DeleteRequest} returns this
*/
proto.tigrisdata.v1.DeleteRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.DeleteRequest} returns this
 */
proto.tigrisdata.v1.DeleteRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.DeleteRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string branch = 5;
 * @return {string}
 */
proto.tigrisdata.v1.DeleteRequest.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DeleteRequest} returns this
 */
proto.tigrisdata.v1.DeleteRequest.prototype.setBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.ResponseMetadata.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, ""),
    deletedCount: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DeleteResponse}
 */
proto.tigrisdata.v1.DeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DeleteResponse;
  return proto.tigrisdata.v1.DeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DeleteResponse}
 */
proto.tigrisdata.v1.DeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.ResponseMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.ResponseMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDeletedCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.ResponseMetadata.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDeletedCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional ResponseMetadata metadata = 1;
 * @return {?proto.tigrisdata.v1.ResponseMetadata}
 */
proto.tigrisdata.v1.DeleteResponse.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.ResponseMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.ResponseMetadata, 1));
};


/**
 * @param {?proto.tigrisdata.v1.ResponseMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.DeleteResponse} returns this
*/
proto.tigrisdata.v1.DeleteResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.DeleteResponse} returns this
 */
proto.tigrisdata.v1.DeleteResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.DeleteResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.tigrisdata.v1.DeleteResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DeleteResponse} returns this
 */
proto.tigrisdata.v1.DeleteResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 deleted_count = 3;
 * @return {number}
 */
proto.tigrisdata.v1.DeleteResponse.prototype.getDeletedCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.DeleteResponse} returns this
 */
proto.tigrisdata.v1.DeleteResponse.prototype.setDeletedCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.UpdateRequestOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.UpdateRequestOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.UpdateRequestOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.UpdateRequestOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    writeOptions: (f = msg.getWriteOptions()) && proto.tigrisdata.v1.WriteOptions.toObject(includeInstance, f),
    collation: (f = msg.getCollation()) && proto.tigrisdata.v1.Collation.toObject(includeInstance, f),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.UpdateRequestOptions}
 */
proto.tigrisdata.v1.UpdateRequestOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.UpdateRequestOptions;
  return proto.tigrisdata.v1.UpdateRequestOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.UpdateRequestOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.UpdateRequestOptions}
 */
proto.tigrisdata.v1.UpdateRequestOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.WriteOptions;
      reader.readMessage(value,proto.tigrisdata.v1.WriteOptions.deserializeBinaryFromReader);
      msg.setWriteOptions(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.Collation;
      reader.readMessage(value,proto.tigrisdata.v1.Collation.deserializeBinaryFromReader);
      msg.setCollation(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.UpdateRequestOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.UpdateRequestOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.UpdateRequestOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.UpdateRequestOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWriteOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.WriteOptions.serializeBinaryToWriter
    );
  }
  f = message.getCollation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.Collation.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional WriteOptions write_options = 1;
 * @return {?proto.tigrisdata.v1.WriteOptions}
 */
proto.tigrisdata.v1.UpdateRequestOptions.prototype.getWriteOptions = function() {
  return /** @type{?proto.tigrisdata.v1.WriteOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.WriteOptions, 1));
};


/**
 * @param {?proto.tigrisdata.v1.WriteOptions|undefined} value
 * @return {!proto.tigrisdata.v1.UpdateRequestOptions} returns this
*/
proto.tigrisdata.v1.UpdateRequestOptions.prototype.setWriteOptions = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.UpdateRequestOptions} returns this
 */
proto.tigrisdata.v1.UpdateRequestOptions.prototype.clearWriteOptions = function() {
  return this.setWriteOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.UpdateRequestOptions.prototype.hasWriteOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Collation collation = 2;
 * @return {?proto.tigrisdata.v1.Collation}
 */
proto.tigrisdata.v1.UpdateRequestOptions.prototype.getCollation = function() {
  return /** @type{?proto.tigrisdata.v1.Collation} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.Collation, 2));
};


/**
 * @param {?proto.tigrisdata.v1.Collation|undefined} value
 * @return {!proto.tigrisdata.v1.UpdateRequestOptions} returns this
*/
proto.tigrisdata.v1.UpdateRequestOptions.prototype.setCollation = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.UpdateRequestOptions} returns this
 */
proto.tigrisdata.v1.UpdateRequestOptions.prototype.clearCollation = function() {
  return this.setCollation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.UpdateRequestOptions.prototype.hasCollation = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 limit = 3;
 * @return {number}
 */
proto.tigrisdata.v1.UpdateRequestOptions.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.UpdateRequestOptions} returns this
 */
proto.tigrisdata.v1.UpdateRequestOptions.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.UpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.UpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.UpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fields: msg.getFields_asB64(),
    filter: msg.getFilter_asB64(),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.UpdateRequestOptions.toObject(includeInstance, f),
    branch: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.UpdateRequest}
 */
proto.tigrisdata.v1.UpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.UpdateRequest;
  return proto.tigrisdata.v1.UpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.UpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.UpdateRequest}
 */
proto.tigrisdata.v1.UpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFields(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFilter(value);
      break;
    case 5:
      var value = new proto.tigrisdata.v1.UpdateRequestOptions;
      reader.readMessage(value,proto.tigrisdata.v1.UpdateRequestOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.UpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.UpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.UpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFields_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getFilter_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.tigrisdata.v1.UpdateRequestOptions.serializeBinaryToWriter
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.UpdateRequest} returns this
 */
proto.tigrisdata.v1.UpdateRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.UpdateRequest} returns this
 */
proto.tigrisdata.v1.UpdateRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes fields = 3;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.getFields = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes fields = 3;
 * This is a type-conversion wrapper around `getFields()`
 * @return {string}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.getFields_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFields()));
};


/**
 * optional bytes fields = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFields()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.getFields_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFields()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.UpdateRequest} returns this
 */
proto.tigrisdata.v1.UpdateRequest.prototype.setFields = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes filter = 4;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.getFilter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes filter = 4;
 * This is a type-conversion wrapper around `getFilter()`
 * @return {string}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.getFilter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFilter()));
};


/**
 * optional bytes filter = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFilter()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.getFilter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFilter()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.UpdateRequest} returns this
 */
proto.tigrisdata.v1.UpdateRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional UpdateRequestOptions options = 5;
 * @return {?proto.tigrisdata.v1.UpdateRequestOptions}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.UpdateRequestOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.UpdateRequestOptions, 5));
};


/**
 * @param {?proto.tigrisdata.v1.UpdateRequestOptions|undefined} value
 * @return {!proto.tigrisdata.v1.UpdateRequest} returns this
*/
proto.tigrisdata.v1.UpdateRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.UpdateRequest} returns this
 */
proto.tigrisdata.v1.UpdateRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string branch = 6;
 * @return {string}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.UpdateRequest} returns this
 */
proto.tigrisdata.v1.UpdateRequest.prototype.setBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.UpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.UpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.UpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.UpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.ResponseMetadata.toObject(includeInstance, f),
    modifiedCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    status: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.UpdateResponse}
 */
proto.tigrisdata.v1.UpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.UpdateResponse;
  return proto.tigrisdata.v1.UpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.UpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.UpdateResponse}
 */
proto.tigrisdata.v1.UpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.ResponseMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.ResponseMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setModifiedCount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.UpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.UpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.UpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.UpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.ResponseMetadata.serializeBinaryToWriter
    );
  }
  f = message.getModifiedCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional ResponseMetadata metadata = 1;
 * @return {?proto.tigrisdata.v1.ResponseMetadata}
 */
proto.tigrisdata.v1.UpdateResponse.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.ResponseMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.ResponseMetadata, 1));
};


/**
 * @param {?proto.tigrisdata.v1.ResponseMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.UpdateResponse} returns this
*/
proto.tigrisdata.v1.UpdateResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.UpdateResponse} returns this
 */
proto.tigrisdata.v1.UpdateResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.UpdateResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 modified_count = 2;
 * @return {number}
 */
proto.tigrisdata.v1.UpdateResponse.prototype.getModifiedCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.UpdateResponse} returns this
 */
proto.tigrisdata.v1.UpdateResponse.prototype.setModifiedCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string status = 3;
 * @return {string}
 */
proto.tigrisdata.v1.UpdateResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.UpdateResponse} returns this
 */
proto.tigrisdata.v1.UpdateResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ReadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ReadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ReadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReadRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    filter: msg.getFilter_asB64(),
    fields: msg.getFields_asB64(),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.ReadRequestOptions.toObject(includeInstance, f),
    sort: msg.getSort_asB64(),
    branch: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ReadRequest}
 */
proto.tigrisdata.v1.ReadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ReadRequest;
  return proto.tigrisdata.v1.ReadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ReadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ReadRequest}
 */
proto.tigrisdata.v1.ReadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFilter(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFields(value);
      break;
    case 5:
      var value = new proto.tigrisdata.v1.ReadRequestOptions;
      reader.readMessage(value,proto.tigrisdata.v1.ReadRequestOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSort(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ReadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ReadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFilter_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getFields_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.tigrisdata.v1.ReadRequestOptions.serializeBinaryToWriter
    );
  }
  f = message.getSort_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.ReadRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ReadRequest} returns this
 */
proto.tigrisdata.v1.ReadRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.ReadRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ReadRequest} returns this
 */
proto.tigrisdata.v1.ReadRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes filter = 3;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.ReadRequest.prototype.getFilter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes filter = 3;
 * This is a type-conversion wrapper around `getFilter()`
 * @return {string}
 */
proto.tigrisdata.v1.ReadRequest.prototype.getFilter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFilter()));
};


/**
 * optional bytes filter = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFilter()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReadRequest.prototype.getFilter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFilter()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.ReadRequest} returns this
 */
proto.tigrisdata.v1.ReadRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes fields = 4;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.ReadRequest.prototype.getFields = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes fields = 4;
 * This is a type-conversion wrapper around `getFields()`
 * @return {string}
 */
proto.tigrisdata.v1.ReadRequest.prototype.getFields_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFields()));
};


/**
 * optional bytes fields = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFields()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReadRequest.prototype.getFields_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFields()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.ReadRequest} returns this
 */
proto.tigrisdata.v1.ReadRequest.prototype.setFields = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional ReadRequestOptions options = 5;
 * @return {?proto.tigrisdata.v1.ReadRequestOptions}
 */
proto.tigrisdata.v1.ReadRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.ReadRequestOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.ReadRequestOptions, 5));
};


/**
 * @param {?proto.tigrisdata.v1.ReadRequestOptions|undefined} value
 * @return {!proto.tigrisdata.v1.ReadRequest} returns this
*/
proto.tigrisdata.v1.ReadRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ReadRequest} returns this
 */
proto.tigrisdata.v1.ReadRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ReadRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes sort = 6;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.ReadRequest.prototype.getSort = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes sort = 6;
 * This is a type-conversion wrapper around `getSort()`
 * @return {string}
 */
proto.tigrisdata.v1.ReadRequest.prototype.getSort_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSort()));
};


/**
 * optional bytes sort = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSort()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReadRequest.prototype.getSort_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSort()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.ReadRequest} returns this
 */
proto.tigrisdata.v1.ReadRequest.prototype.setSort = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional string branch = 7;
 * @return {string}
 */
proto.tigrisdata.v1.ReadRequest.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ReadRequest} returns this
 */
proto.tigrisdata.v1.ReadRequest.prototype.setBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ReadResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ReadResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ReadResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReadResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: msg.getData_asB64(),
    resumeToken: msg.getResumeToken_asB64(),
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.ResponseMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ReadResponse}
 */
proto.tigrisdata.v1.ReadResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ReadResponse;
  return proto.tigrisdata.v1.ReadResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ReadResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ReadResponse}
 */
proto.tigrisdata.v1.ReadResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setResumeToken(value);
      break;
    case 3:
      var value = new proto.tigrisdata.v1.ResponseMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.ResponseMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReadResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ReadResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ReadResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReadResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getResumeToken_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tigrisdata.v1.ResponseMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.ReadResponse.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.tigrisdata.v1.ReadResponse.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReadResponse.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.ReadResponse} returns this
 */
proto.tigrisdata.v1.ReadResponse.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes resume_token = 2;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.ReadResponse.prototype.getResumeToken = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes resume_token = 2;
 * This is a type-conversion wrapper around `getResumeToken()`
 * @return {string}
 */
proto.tigrisdata.v1.ReadResponse.prototype.getResumeToken_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getResumeToken()));
};


/**
 * optional bytes resume_token = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getResumeToken()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReadResponse.prototype.getResumeToken_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getResumeToken()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.ReadResponse} returns this
 */
proto.tigrisdata.v1.ReadResponse.prototype.setResumeToken = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional ResponseMetadata metadata = 3;
 * @return {?proto.tigrisdata.v1.ResponseMetadata}
 */
proto.tigrisdata.v1.ReadResponse.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.ResponseMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.ResponseMetadata, 3));
};


/**
 * @param {?proto.tigrisdata.v1.ResponseMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.ReadResponse} returns this
*/
proto.tigrisdata.v1.ReadResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ReadResponse} returns this
 */
proto.tigrisdata.v1.ReadResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ReadResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    filter: msg.getFilter_asB64(),
    branch: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CountRequest}
 */
proto.tigrisdata.v1.CountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CountRequest;
  return proto.tigrisdata.v1.CountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CountRequest}
 */
proto.tigrisdata.v1.CountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFilter(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFilter_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.CountRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CountRequest} returns this
 */
proto.tigrisdata.v1.CountRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.CountRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CountRequest} returns this
 */
proto.tigrisdata.v1.CountRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes filter = 3;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.CountRequest.prototype.getFilter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes filter = 3;
 * This is a type-conversion wrapper around `getFilter()`
 * @return {string}
 */
proto.tigrisdata.v1.CountRequest.prototype.getFilter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFilter()));
};


/**
 * optional bytes filter = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFilter()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CountRequest.prototype.getFilter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFilter()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.CountRequest} returns this
 */
proto.tigrisdata.v1.CountRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional string branch = 4;
 * @return {string}
 */
proto.tigrisdata.v1.CountRequest.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CountRequest} returns this
 */
proto.tigrisdata.v1.CountRequest.prototype.setBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CountResponse}
 */
proto.tigrisdata.v1.CountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CountResponse;
  return proto.tigrisdata.v1.CountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CountResponse}
 */
proto.tigrisdata.v1.CountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 count = 1;
 * @return {number}
 */
proto.tigrisdata.v1.CountResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.CountResponse} returns this
 */
proto.tigrisdata.v1.CountResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.ExplainResponse.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ExplainResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ExplainResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ExplainResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ExplainResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    collection: jspb.Message.getFieldWithDefault(msg, 1, ""),
    readType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    filter: jspb.Message.getFieldWithDefault(msg, 3, ""),
    sorting: jspb.Message.getFieldWithDefault(msg, 4, ""),
    keyRangeList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    field: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ExplainResponse}
 */
proto.tigrisdata.v1.ExplainResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ExplainResponse;
  return proto.tigrisdata.v1.ExplainResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ExplainResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ExplainResponse}
 */
proto.tigrisdata.v1.ExplainResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReadType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilter(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSorting(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addKeyRange(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setField(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ExplainResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ExplainResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ExplainResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ExplainResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReadType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFilter();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSorting();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getKeyRangeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string collection = 1;
 * @return {string}
 */
proto.tigrisdata.v1.ExplainResponse.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ExplainResponse} returns this
 */
proto.tigrisdata.v1.ExplainResponse.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string read_type = 2;
 * @return {string}
 */
proto.tigrisdata.v1.ExplainResponse.prototype.getReadType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ExplainResponse} returns this
 */
proto.tigrisdata.v1.ExplainResponse.prototype.setReadType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string filter = 3;
 * @return {string}
 */
proto.tigrisdata.v1.ExplainResponse.prototype.getFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ExplainResponse} returns this
 */
proto.tigrisdata.v1.ExplainResponse.prototype.setFilter = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string sorting = 4;
 * @return {string}
 */
proto.tigrisdata.v1.ExplainResponse.prototype.getSorting = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ExplainResponse} returns this
 */
proto.tigrisdata.v1.ExplainResponse.prototype.setSorting = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string key_range = 5;
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.ExplainResponse.prototype.getKeyRangeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.tigrisdata.v1.ExplainResponse} returns this
 */
proto.tigrisdata.v1.ExplainResponse.prototype.setKeyRangeList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.ExplainResponse} returns this
 */
proto.tigrisdata.v1.ExplainResponse.prototype.addKeyRange = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.ExplainResponse} returns this
 */
proto.tigrisdata.v1.ExplainResponse.prototype.clearKeyRangeList = function() {
  return this.setKeyRangeList([]);
};


/**
 * optional string field = 6;
 * @return {string}
 */
proto.tigrisdata.v1.ExplainResponse.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ExplainResponse} returns this
 */
proto.tigrisdata.v1.ExplainResponse.prototype.setField = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.SearchRequest.repeatedFields_ = [4,8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.SearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.SearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.SearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    q: jspb.Message.getFieldWithDefault(msg, 3, ""),
    searchFieldsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    filter: msg.getFilter_asB64(),
    facet: msg.getFacet_asB64(),
    sort: msg.getSort_asB64(),
    includeFieldsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    excludeFieldsList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    pageSize: jspb.Message.getFieldWithDefault(msg, 10, 0),
    page: jspb.Message.getFieldWithDefault(msg, 11, 0),
    collation: (f = msg.getCollation()) && proto.tigrisdata.v1.Collation.toObject(includeInstance, f),
    branch: jspb.Message.getFieldWithDefault(msg, 13, ""),
    groupBy: msg.getGroupBy_asB64(),
    vector: msg.getVector_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.SearchRequest}
 */
proto.tigrisdata.v1.SearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.SearchRequest;
  return proto.tigrisdata.v1.SearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.SearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.SearchRequest}
 */
proto.tigrisdata.v1.SearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQ(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addSearchFields(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFilter(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFacet(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSort(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addIncludeFields(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addExcludeFields(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 12:
      var value = new proto.tigrisdata.v1.Collation;
      reader.readMessage(value,proto.tigrisdata.v1.Collation.deserializeBinaryFromReader);
      msg.setCollation(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    case 14:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setGroupBy(value);
      break;
    case 15:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setVector(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.SearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.SearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getQ();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSearchFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getFilter_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getFacet_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getSort_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getIncludeFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getExcludeFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getCollation();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.tigrisdata.v1.Collation.serializeBinaryToWriter
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getGroupBy_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      14,
      f
    );
  }
  f = message.getVector_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      15,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string q = 3;
 * @return {string}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getQ = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setQ = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string search_fields = 4;
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getSearchFieldsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setSearchFieldsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.addSearchFields = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.clearSearchFieldsList = function() {
  return this.setSearchFieldsList([]);
};


/**
 * optional bytes filter = 5;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getFilter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes filter = 5;
 * This is a type-conversion wrapper around `getFilter()`
 * @return {string}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getFilter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFilter()));
};


/**
 * optional bytes filter = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFilter()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getFilter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFilter()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional bytes facet = 6;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getFacet = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes facet = 6;
 * This is a type-conversion wrapper around `getFacet()`
 * @return {string}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getFacet_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFacet()));
};


/**
 * optional bytes facet = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFacet()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getFacet_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFacet()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setFacet = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional bytes sort = 7;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getSort = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes sort = 7;
 * This is a type-conversion wrapper around `getSort()`
 * @return {string}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getSort_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSort()));
};


/**
 * optional bytes sort = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSort()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getSort_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSort()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setSort = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * repeated string include_fields = 8;
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getIncludeFieldsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setIncludeFieldsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.addIncludeFields = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.clearIncludeFieldsList = function() {
  return this.setIncludeFieldsList([]);
};


/**
 * repeated string exclude_fields = 9;
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getExcludeFieldsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setExcludeFieldsList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.addExcludeFields = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.clearExcludeFieldsList = function() {
  return this.setExcludeFieldsList([]);
};


/**
 * optional int32 page_size = 10;
 * @return {number}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 page = 11;
 * @return {number}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional Collation collation = 12;
 * @return {?proto.tigrisdata.v1.Collation}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getCollation = function() {
  return /** @type{?proto.tigrisdata.v1.Collation} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.Collation, 12));
};


/**
 * @param {?proto.tigrisdata.v1.Collation|undefined} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
*/
proto.tigrisdata.v1.SearchRequest.prototype.setCollation = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.clearCollation = function() {
  return this.setCollation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.SearchRequest.prototype.hasCollation = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string branch = 13;
 * @return {string}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional bytes group_by = 14;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getGroupBy = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * optional bytes group_by = 14;
 * This is a type-conversion wrapper around `getGroupBy()`
 * @return {string}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getGroupBy_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getGroupBy()));
};


/**
 * optional bytes group_by = 14;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getGroupBy()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getGroupBy_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getGroupBy()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setGroupBy = function(value) {
  return jspb.Message.setProto3BytesField(this, 14, value);
};


/**
 * optional bytes vector = 15;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getVector = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * optional bytes vector = 15;
 * This is a type-conversion wrapper around `getVector()`
 * @return {string}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getVector_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getVector()));
};


/**
 * optional bytes vector = 15;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getVector()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getVector_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getVector()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setVector = function(value) {
  return jspb.Message.setProto3BytesField(this, 15, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.SearchResponse.repeatedFields_ = [1,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.SearchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.SearchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.SearchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    hitsList: jspb.Message.toObjectList(msg.getHitsList(),
    proto.tigrisdata.v1.SearchHit.toObject, includeInstance),
    facetsMap: (f = msg.getFacetsMap()) ? f.toObject(includeInstance, proto.tigrisdata.v1.SearchFacet.toObject) : [],
    meta: (f = msg.getMeta()) && proto.tigrisdata.v1.SearchMetadata.toObject(includeInstance, f),
    groupList: jspb.Message.toObjectList(msg.getGroupList(),
    proto.tigrisdata.v1.GroupedSearchHits.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.SearchResponse}
 */
proto.tigrisdata.v1.SearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.SearchResponse;
  return proto.tigrisdata.v1.SearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.SearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.SearchResponse}
 */
proto.tigrisdata.v1.SearchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.SearchHit;
      reader.readMessage(value,proto.tigrisdata.v1.SearchHit.deserializeBinaryFromReader);
      msg.addHits(value);
      break;
    case 2:
      var value = msg.getFacetsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.tigrisdata.v1.SearchFacet.deserializeBinaryFromReader, "", new proto.tigrisdata.v1.SearchFacet());
         });
      break;
    case 3:
      var value = new proto.tigrisdata.v1.SearchMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.SearchMetadata.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 4:
      var value = new proto.tigrisdata.v1.GroupedSearchHits;
      reader.readMessage(value,proto.tigrisdata.v1.GroupedSearchHits.deserializeBinaryFromReader);
      msg.addGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.SearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.SearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHitsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tigrisdata.v1.SearchHit.serializeBinaryToWriter
    );
  }
  f = message.getFacetsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.tigrisdata.v1.SearchFacet.serializeBinaryToWriter);
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tigrisdata.v1.SearchMetadata.serializeBinaryToWriter
    );
  }
  f = message.getGroupList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.tigrisdata.v1.GroupedSearchHits.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SearchHit hits = 1;
 * @return {!Array<!proto.tigrisdata.v1.SearchHit>}
 */
proto.tigrisdata.v1.SearchResponse.prototype.getHitsList = function() {
  return /** @type{!Array<!proto.tigrisdata.v1.SearchHit>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tigrisdata.v1.SearchHit, 1));
};


/**
 * @param {!Array<!proto.tigrisdata.v1.SearchHit>} value
 * @return {!proto.tigrisdata.v1.SearchResponse} returns this
*/
proto.tigrisdata.v1.SearchResponse.prototype.setHitsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tigrisdata.v1.SearchHit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.SearchHit}
 */
proto.tigrisdata.v1.SearchResponse.prototype.addHits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tigrisdata.v1.SearchHit, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.SearchResponse} returns this
 */
proto.tigrisdata.v1.SearchResponse.prototype.clearHitsList = function() {
  return this.setHitsList([]);
};


/**
 * map<string, SearchFacet> facets = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.tigrisdata.v1.SearchFacet>}
 */
proto.tigrisdata.v1.SearchResponse.prototype.getFacetsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.tigrisdata.v1.SearchFacet>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.tigrisdata.v1.SearchFacet));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.tigrisdata.v1.SearchResponse} returns this
 */
proto.tigrisdata.v1.SearchResponse.prototype.clearFacetsMap = function() {
  this.getFacetsMap().clear();
  return this;};


/**
 * optional SearchMetadata meta = 3;
 * @return {?proto.tigrisdata.v1.SearchMetadata}
 */
proto.tigrisdata.v1.SearchResponse.prototype.getMeta = function() {
  return /** @type{?proto.tigrisdata.v1.SearchMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.SearchMetadata, 3));
};


/**
 * @param {?proto.tigrisdata.v1.SearchMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.SearchResponse} returns this
*/
proto.tigrisdata.v1.SearchResponse.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.SearchResponse} returns this
 */
proto.tigrisdata.v1.SearchResponse.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.SearchResponse.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated GroupedSearchHits group = 4;
 * @return {!Array<!proto.tigrisdata.v1.GroupedSearchHits>}
 */
proto.tigrisdata.v1.SearchResponse.prototype.getGroupList = function() {
  return /** @type{!Array<!proto.tigrisdata.v1.GroupedSearchHits>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tigrisdata.v1.GroupedSearchHits, 4));
};


/**
 * @param {!Array<!proto.tigrisdata.v1.GroupedSearchHits>} value
 * @return {!proto.tigrisdata.v1.SearchResponse} returns this
*/
proto.tigrisdata.v1.SearchResponse.prototype.setGroupList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.tigrisdata.v1.GroupedSearchHits=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.GroupedSearchHits}
 */
proto.tigrisdata.v1.SearchResponse.prototype.addGroup = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.tigrisdata.v1.GroupedSearchHits, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.SearchResponse} returns this
 */
proto.tigrisdata.v1.SearchResponse.prototype.clearGroupList = function() {
  return this.setGroupList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.SearchHit.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.SearchHit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.SearchHit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchHit.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: msg.getData_asB64(),
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.SearchHitMeta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.SearchHit}
 */
proto.tigrisdata.v1.SearchHit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.SearchHit;
  return proto.tigrisdata.v1.SearchHit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.SearchHit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.SearchHit}
 */
proto.tigrisdata.v1.SearchHit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.SearchHitMeta;
      reader.readMessage(value,proto.tigrisdata.v1.SearchHitMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SearchHit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.SearchHit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.SearchHit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchHit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.SearchHitMeta.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.SearchHit.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.tigrisdata.v1.SearchHit.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SearchHit.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.SearchHit} returns this
 */
proto.tigrisdata.v1.SearchHit.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional SearchHitMeta metadata = 2;
 * @return {?proto.tigrisdata.v1.SearchHitMeta}
 */
proto.tigrisdata.v1.SearchHit.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.SearchHitMeta} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.SearchHitMeta, 2));
};


/**
 * @param {?proto.tigrisdata.v1.SearchHitMeta|undefined} value
 * @return {!proto.tigrisdata.v1.SearchHit} returns this
*/
proto.tigrisdata.v1.SearchHit.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.SearchHit} returns this
 */
proto.tigrisdata.v1.SearchHit.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.SearchHit.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.SearchHitMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.SearchHitMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.SearchHitMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchHitMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    match: (f = msg.getMatch()) && proto.tigrisdata.v1.Match.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.SearchHitMeta}
 */
proto.tigrisdata.v1.SearchHitMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.SearchHitMeta;
  return proto.tigrisdata.v1.SearchHitMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.SearchHitMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.SearchHitMeta}
 */
proto.tigrisdata.v1.SearchHitMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 3:
      var value = new proto.tigrisdata.v1.Match;
      reader.readMessage(value,proto.tigrisdata.v1.Match.deserializeBinaryFromReader);
      msg.setMatch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SearchHitMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.SearchHitMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.SearchHitMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchHitMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMatch();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tigrisdata.v1.Match.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp created_at = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tigrisdata.v1.SearchHitMeta.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tigrisdata.v1.SearchHitMeta} returns this
*/
proto.tigrisdata.v1.SearchHitMeta.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.SearchHitMeta} returns this
 */
proto.tigrisdata.v1.SearchHitMeta.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.SearchHitMeta.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tigrisdata.v1.SearchHitMeta.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tigrisdata.v1.SearchHitMeta} returns this
*/
proto.tigrisdata.v1.SearchHitMeta.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.SearchHitMeta} returns this
 */
proto.tigrisdata.v1.SearchHitMeta.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.SearchHitMeta.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Match match = 3;
 * @return {?proto.tigrisdata.v1.Match}
 */
proto.tigrisdata.v1.SearchHitMeta.prototype.getMatch = function() {
  return /** @type{?proto.tigrisdata.v1.Match} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.Match, 3));
};


/**
 * @param {?proto.tigrisdata.v1.Match|undefined} value
 * @return {!proto.tigrisdata.v1.SearchHitMeta} returns this
*/
proto.tigrisdata.v1.SearchHitMeta.prototype.setMatch = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.SearchHitMeta} returns this
 */
proto.tigrisdata.v1.SearchHitMeta.prototype.clearMatch = function() {
  return this.setMatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.SearchHitMeta.prototype.hasMatch = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.SearchFacet.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.SearchFacet.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.SearchFacet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.SearchFacet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchFacet.toObject = function(includeInstance, msg) {
  var f, obj = {
    countsList: jspb.Message.toObjectList(msg.getCountsList(),
    proto.tigrisdata.v1.FacetCount.toObject, includeInstance),
    stats: (f = msg.getStats()) && proto.tigrisdata.v1.FacetStats.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.SearchFacet}
 */
proto.tigrisdata.v1.SearchFacet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.SearchFacet;
  return proto.tigrisdata.v1.SearchFacet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.SearchFacet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.SearchFacet}
 */
proto.tigrisdata.v1.SearchFacet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.FacetCount;
      reader.readMessage(value,proto.tigrisdata.v1.FacetCount.deserializeBinaryFromReader);
      msg.addCounts(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.FacetStats;
      reader.readMessage(value,proto.tigrisdata.v1.FacetStats.deserializeBinaryFromReader);
      msg.setStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SearchFacet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.SearchFacet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.SearchFacet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchFacet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tigrisdata.v1.FacetCount.serializeBinaryToWriter
    );
  }
  f = message.getStats();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.FacetStats.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FacetCount counts = 1;
 * @return {!Array<!proto.tigrisdata.v1.FacetCount>}
 */
proto.tigrisdata.v1.SearchFacet.prototype.getCountsList = function() {
  return /** @type{!Array<!proto.tigrisdata.v1.FacetCount>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tigrisdata.v1.FacetCount, 1));
};


/**
 * @param {!Array<!proto.tigrisdata.v1.FacetCount>} value
 * @return {!proto.tigrisdata.v1.SearchFacet} returns this
*/
proto.tigrisdata.v1.SearchFacet.prototype.setCountsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tigrisdata.v1.FacetCount=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.FacetCount}
 */
proto.tigrisdata.v1.SearchFacet.prototype.addCounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tigrisdata.v1.FacetCount, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.SearchFacet} returns this
 */
proto.tigrisdata.v1.SearchFacet.prototype.clearCountsList = function() {
  return this.setCountsList([]);
};


/**
 * optional FacetStats stats = 2;
 * @return {?proto.tigrisdata.v1.FacetStats}
 */
proto.tigrisdata.v1.SearchFacet.prototype.getStats = function() {
  return /** @type{?proto.tigrisdata.v1.FacetStats} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.FacetStats, 2));
};


/**
 * @param {?proto.tigrisdata.v1.FacetStats|undefined} value
 * @return {!proto.tigrisdata.v1.SearchFacet} returns this
*/
proto.tigrisdata.v1.SearchFacet.prototype.setStats = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.SearchFacet} returns this
 */
proto.tigrisdata.v1.SearchFacet.prototype.clearStats = function() {
  return this.setStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.SearchFacet.prototype.hasStats = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.FacetCount.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.FacetCount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.FacetCount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.FacetCount.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.FacetCount}
 */
proto.tigrisdata.v1.FacetCount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.FacetCount;
  return proto.tigrisdata.v1.FacetCount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.FacetCount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.FacetCount}
 */
proto.tigrisdata.v1.FacetCount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.FacetCount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.FacetCount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.FacetCount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.FacetCount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 count = 1;
 * @return {number}
 */
proto.tigrisdata.v1.FacetCount.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.FacetCount} returns this
 */
proto.tigrisdata.v1.FacetCount.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.tigrisdata.v1.FacetCount.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.FacetCount} returns this
 */
proto.tigrisdata.v1.FacetCount.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.FacetStats.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.FacetStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.FacetStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.FacetStats.toObject = function(includeInstance, msg) {
  var f, obj = {
    avg: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    max: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    min: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    sum: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    count: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.FacetStats}
 */
proto.tigrisdata.v1.FacetStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.FacetStats;
  return proto.tigrisdata.v1.FacetStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.FacetStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.FacetStats}
 */
proto.tigrisdata.v1.FacetStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAvg(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMax(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMin(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSum(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.FacetStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.FacetStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.FacetStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.FacetStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional double avg = 1;
 * @return {number}
 */
proto.tigrisdata.v1.FacetStats.prototype.getAvg = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.FacetStats} returns this
 */
proto.tigrisdata.v1.FacetStats.prototype.setAvg = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tigrisdata.v1.FacetStats} returns this
 */
proto.tigrisdata.v1.FacetStats.prototype.clearAvg = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.FacetStats.prototype.hasAvg = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double max = 2;
 * @return {number}
 */
proto.tigrisdata.v1.FacetStats.prototype.getMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.FacetStats} returns this
 */
proto.tigrisdata.v1.FacetStats.prototype.setMax = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tigrisdata.v1.FacetStats} returns this
 */
proto.tigrisdata.v1.FacetStats.prototype.clearMax = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.FacetStats.prototype.hasMax = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double min = 3;
 * @return {number}
 */
proto.tigrisdata.v1.FacetStats.prototype.getMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.FacetStats} returns this
 */
proto.tigrisdata.v1.FacetStats.prototype.setMin = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tigrisdata.v1.FacetStats} returns this
 */
proto.tigrisdata.v1.FacetStats.prototype.clearMin = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.FacetStats.prototype.hasMin = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double sum = 4;
 * @return {number}
 */
proto.tigrisdata.v1.FacetStats.prototype.getSum = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.FacetStats} returns this
 */
proto.tigrisdata.v1.FacetStats.prototype.setSum = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tigrisdata.v1.FacetStats} returns this
 */
proto.tigrisdata.v1.FacetStats.prototype.clearSum = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.FacetStats.prototype.hasSum = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 count = 5;
 * @return {number}
 */
proto.tigrisdata.v1.FacetStats.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.FacetStats} returns this
 */
proto.tigrisdata.v1.FacetStats.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.SearchMetadata.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.SearchMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.SearchMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.SearchMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    found: jspb.Message.getFieldWithDefault(msg, 1, 0),
    totalPages: jspb.Message.getFieldWithDefault(msg, 2, 0),
    page: (f = msg.getPage()) && proto.tigrisdata.v1.Page.toObject(includeInstance, f),
    matchedFieldsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.SearchMetadata}
 */
proto.tigrisdata.v1.SearchMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.SearchMetadata;
  return proto.tigrisdata.v1.SearchMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.SearchMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.SearchMetadata}
 */
proto.tigrisdata.v1.SearchMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFound(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalPages(value);
      break;
    case 3:
      var value = new proto.tigrisdata.v1.Page;
      reader.readMessage(value,proto.tigrisdata.v1.Page.deserializeBinaryFromReader);
      msg.setPage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addMatchedFields(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SearchMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.SearchMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.SearchMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFound();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTotalPages();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tigrisdata.v1.Page.serializeBinaryToWriter
    );
  }
  f = message.getMatchedFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional int64 found = 1;
 * @return {number}
 */
proto.tigrisdata.v1.SearchMetadata.prototype.getFound = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.SearchMetadata} returns this
 */
proto.tigrisdata.v1.SearchMetadata.prototype.setFound = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 total_pages = 2;
 * @return {number}
 */
proto.tigrisdata.v1.SearchMetadata.prototype.getTotalPages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.SearchMetadata} returns this
 */
proto.tigrisdata.v1.SearchMetadata.prototype.setTotalPages = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Page page = 3;
 * @return {?proto.tigrisdata.v1.Page}
 */
proto.tigrisdata.v1.SearchMetadata.prototype.getPage = function() {
  return /** @type{?proto.tigrisdata.v1.Page} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.Page, 3));
};


/**
 * @param {?proto.tigrisdata.v1.Page|undefined} value
 * @return {!proto.tigrisdata.v1.SearchMetadata} returns this
*/
proto.tigrisdata.v1.SearchMetadata.prototype.setPage = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.SearchMetadata} returns this
 */
proto.tigrisdata.v1.SearchMetadata.prototype.clearPage = function() {
  return this.setPage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.SearchMetadata.prototype.hasPage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated string matched_fields = 4;
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.SearchMetadata.prototype.getMatchedFieldsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.tigrisdata.v1.SearchMetadata} returns this
 */
proto.tigrisdata.v1.SearchMetadata.prototype.setMatchedFieldsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.SearchMetadata} returns this
 */
proto.tigrisdata.v1.SearchMetadata.prototype.addMatchedFields = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.SearchMetadata} returns this
 */
proto.tigrisdata.v1.SearchMetadata.prototype.clearMatchedFieldsList = function() {
  return this.setMatchedFieldsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.MatchField.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.MatchField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.MatchField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.MatchField.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.MatchField}
 */
proto.tigrisdata.v1.MatchField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.MatchField;
  return proto.tigrisdata.v1.MatchField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.MatchField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.MatchField}
 */
proto.tigrisdata.v1.MatchField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.MatchField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.MatchField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.MatchField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.MatchField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.tigrisdata.v1.MatchField.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.MatchField} returns this
 */
proto.tigrisdata.v1.MatchField.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.Match.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.Match.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.Match.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.Match} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.Match.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldsList: jspb.Message.toObjectList(msg.getFieldsList(),
    proto.tigrisdata.v1.MatchField.toObject, includeInstance),
    score: jspb.Message.getFieldWithDefault(msg, 2, ""),
    vectorDistance: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.Match}
 */
proto.tigrisdata.v1.Match.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.Match;
  return proto.tigrisdata.v1.Match.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.Match} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.Match}
 */
proto.tigrisdata.v1.Match.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.MatchField;
      reader.readMessage(value,proto.tigrisdata.v1.MatchField.deserializeBinaryFromReader);
      msg.addFields(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScore(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVectorDistance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.Match.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.Match.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.Match} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.Match.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tigrisdata.v1.MatchField.serializeBinaryToWriter
    );
  }
  f = message.getScore();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * repeated MatchField fields = 1;
 * @return {!Array<!proto.tigrisdata.v1.MatchField>}
 */
proto.tigrisdata.v1.Match.prototype.getFieldsList = function() {
  return /** @type{!Array<!proto.tigrisdata.v1.MatchField>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tigrisdata.v1.MatchField, 1));
};


/**
 * @param {!Array<!proto.tigrisdata.v1.MatchField>} value
 * @return {!proto.tigrisdata.v1.Match} returns this
*/
proto.tigrisdata.v1.Match.prototype.setFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tigrisdata.v1.MatchField=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.MatchField}
 */
proto.tigrisdata.v1.Match.prototype.addFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tigrisdata.v1.MatchField, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.Match} returns this
 */
proto.tigrisdata.v1.Match.prototype.clearFieldsList = function() {
  return this.setFieldsList([]);
};


/**
 * optional string score = 2;
 * @return {string}
 */
proto.tigrisdata.v1.Match.prototype.getScore = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.Match} returns this
 */
proto.tigrisdata.v1.Match.prototype.setScore = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double vector_distance = 3;
 * @return {number}
 */
proto.tigrisdata.v1.Match.prototype.getVectorDistance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.Match} returns this
 */
proto.tigrisdata.v1.Match.prototype.setVectorDistance = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tigrisdata.v1.Match} returns this
 */
proto.tigrisdata.v1.Match.prototype.clearVectorDistance = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.Match.prototype.hasVectorDistance = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.GroupedSearchHits.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.GroupedSearchHits.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.GroupedSearchHits.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.GroupedSearchHits} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.GroupedSearchHits.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupKeysList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    hitsList: jspb.Message.toObjectList(msg.getHitsList(),
    proto.tigrisdata.v1.SearchHit.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.GroupedSearchHits}
 */
proto.tigrisdata.v1.GroupedSearchHits.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.GroupedSearchHits;
  return proto.tigrisdata.v1.GroupedSearchHits.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.GroupedSearchHits} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.GroupedSearchHits}
 */
proto.tigrisdata.v1.GroupedSearchHits.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addGroupKeys(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.SearchHit;
      reader.readMessage(value,proto.tigrisdata.v1.SearchHit.deserializeBinaryFromReader);
      msg.addHits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.GroupedSearchHits.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.GroupedSearchHits.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.GroupedSearchHits} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.GroupedSearchHits.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupKeysList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getHitsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.tigrisdata.v1.SearchHit.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string group_keys = 1;
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.GroupedSearchHits.prototype.getGroupKeysList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.tigrisdata.v1.GroupedSearchHits} returns this
 */
proto.tigrisdata.v1.GroupedSearchHits.prototype.setGroupKeysList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.GroupedSearchHits} returns this
 */
proto.tigrisdata.v1.GroupedSearchHits.prototype.addGroupKeys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.GroupedSearchHits} returns this
 */
proto.tigrisdata.v1.GroupedSearchHits.prototype.clearGroupKeysList = function() {
  return this.setGroupKeysList([]);
};


/**
 * repeated SearchHit hits = 2;
 * @return {!Array<!proto.tigrisdata.v1.SearchHit>}
 */
proto.tigrisdata.v1.GroupedSearchHits.prototype.getHitsList = function() {
  return /** @type{!Array<!proto.tigrisdata.v1.SearchHit>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tigrisdata.v1.SearchHit, 2));
};


/**
 * @param {!Array<!proto.tigrisdata.v1.SearchHit>} value
 * @return {!proto.tigrisdata.v1.GroupedSearchHits} returns this
*/
proto.tigrisdata.v1.GroupedSearchHits.prototype.setHitsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.tigrisdata.v1.SearchHit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.SearchHit}
 */
proto.tigrisdata.v1.GroupedSearchHits.prototype.addHits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.tigrisdata.v1.SearchHit, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.GroupedSearchHits} returns this
 */
proto.tigrisdata.v1.GroupedSearchHits.prototype.clearHitsList = function() {
  return this.setHitsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.Page.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.Page.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.Page} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.Page.toObject = function(includeInstance, msg) {
  var f, obj = {
    current: jspb.Message.getFieldWithDefault(msg, 1, 0),
    size: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.Page}
 */
proto.tigrisdata.v1.Page.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.Page;
  return proto.tigrisdata.v1.Page.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.Page} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.Page}
 */
proto.tigrisdata.v1.Page.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurrent(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.Page.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.Page.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.Page} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.Page.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrent();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 current = 1;
 * @return {number}
 */
proto.tigrisdata.v1.Page.prototype.getCurrent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.Page} returns this
 */
proto.tigrisdata.v1.Page.prototype.setCurrent = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 size = 3;
 * @return {number}
 */
proto.tigrisdata.v1.Page.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.Page} returns this
 */
proto.tigrisdata.v1.Page.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CreateProjectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CreateProjectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CreateProjectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateProjectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CreateProjectRequest}
 */
proto.tigrisdata.v1.CreateProjectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CreateProjectRequest;
  return proto.tigrisdata.v1.CreateProjectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CreateProjectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CreateProjectRequest}
 */
proto.tigrisdata.v1.CreateProjectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CreateProjectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CreateProjectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CreateProjectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateProjectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.CreateProjectRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CreateProjectRequest} returns this
 */
proto.tigrisdata.v1.CreateProjectRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CreateProjectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CreateProjectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CreateProjectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateProjectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CreateProjectResponse}
 */
proto.tigrisdata.v1.CreateProjectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CreateProjectResponse;
  return proto.tigrisdata.v1.CreateProjectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CreateProjectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CreateProjectResponse}
 */
proto.tigrisdata.v1.CreateProjectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CreateProjectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CreateProjectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CreateProjectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateProjectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.tigrisdata.v1.CreateProjectResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CreateProjectResponse} returns this
 */
proto.tigrisdata.v1.CreateProjectResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.tigrisdata.v1.CreateProjectResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CreateProjectResponse} returns this
 */
proto.tigrisdata.v1.CreateProjectResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DeleteProjectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DeleteProjectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DeleteProjectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteProjectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DeleteProjectRequest}
 */
proto.tigrisdata.v1.DeleteProjectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DeleteProjectRequest;
  return proto.tigrisdata.v1.DeleteProjectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DeleteProjectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DeleteProjectRequest}
 */
proto.tigrisdata.v1.DeleteProjectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DeleteProjectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DeleteProjectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DeleteProjectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteProjectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.DeleteProjectRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DeleteProjectRequest} returns this
 */
proto.tigrisdata.v1.DeleteProjectRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DeleteProjectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DeleteProjectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DeleteProjectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteProjectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DeleteProjectResponse}
 */
proto.tigrisdata.v1.DeleteProjectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DeleteProjectResponse;
  return proto.tigrisdata.v1.DeleteProjectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DeleteProjectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DeleteProjectResponse}
 */
proto.tigrisdata.v1.DeleteProjectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DeleteProjectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DeleteProjectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DeleteProjectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteProjectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.tigrisdata.v1.DeleteProjectResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DeleteProjectResponse} returns this
 */
proto.tigrisdata.v1.DeleteProjectResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.tigrisdata.v1.DeleteProjectResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DeleteProjectResponse} returns this
 */
proto.tigrisdata.v1.DeleteProjectResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CreateBranchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CreateBranchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CreateBranchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateBranchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    branch: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CreateBranchRequest}
 */
proto.tigrisdata.v1.CreateBranchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CreateBranchRequest;
  return proto.tigrisdata.v1.CreateBranchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CreateBranchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CreateBranchRequest}
 */
proto.tigrisdata.v1.CreateBranchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CreateBranchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CreateBranchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CreateBranchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateBranchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.CreateBranchRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CreateBranchRequest} returns this
 */
proto.tigrisdata.v1.CreateBranchRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string branch = 2;
 * @return {string}
 */
proto.tigrisdata.v1.CreateBranchRequest.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CreateBranchRequest} returns this
 */
proto.tigrisdata.v1.CreateBranchRequest.prototype.setBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CreateBranchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CreateBranchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CreateBranchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateBranchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CreateBranchResponse}
 */
proto.tigrisdata.v1.CreateBranchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CreateBranchResponse;
  return proto.tigrisdata.v1.CreateBranchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CreateBranchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CreateBranchResponse}
 */
proto.tigrisdata.v1.CreateBranchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CreateBranchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CreateBranchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CreateBranchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateBranchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.tigrisdata.v1.CreateBranchResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CreateBranchResponse} returns this
 */
proto.tigrisdata.v1.CreateBranchResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.tigrisdata.v1.CreateBranchResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CreateBranchResponse} returns this
 */
proto.tigrisdata.v1.CreateBranchResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DeleteBranchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DeleteBranchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DeleteBranchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteBranchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    branch: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DeleteBranchRequest}
 */
proto.tigrisdata.v1.DeleteBranchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DeleteBranchRequest;
  return proto.tigrisdata.v1.DeleteBranchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DeleteBranchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DeleteBranchRequest}
 */
proto.tigrisdata.v1.DeleteBranchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DeleteBranchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DeleteBranchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DeleteBranchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteBranchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.DeleteBranchRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DeleteBranchRequest} returns this
 */
proto.tigrisdata.v1.DeleteBranchRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string branch = 2;
 * @return {string}
 */
proto.tigrisdata.v1.DeleteBranchRequest.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DeleteBranchRequest} returns this
 */
proto.tigrisdata.v1.DeleteBranchRequest.prototype.setBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DeleteBranchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DeleteBranchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DeleteBranchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteBranchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DeleteBranchResponse}
 */
proto.tigrisdata.v1.DeleteBranchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DeleteBranchResponse;
  return proto.tigrisdata.v1.DeleteBranchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DeleteBranchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DeleteBranchResponse}
 */
proto.tigrisdata.v1.DeleteBranchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DeleteBranchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DeleteBranchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DeleteBranchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteBranchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.tigrisdata.v1.DeleteBranchResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DeleteBranchResponse} returns this
 */
proto.tigrisdata.v1.DeleteBranchResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.tigrisdata.v1.DeleteBranchResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DeleteBranchResponse} returns this
 */
proto.tigrisdata.v1.DeleteBranchResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ListBranchesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ListBranchesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ListBranchesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListBranchesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ListBranchesRequest}
 */
proto.tigrisdata.v1.ListBranchesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ListBranchesRequest;
  return proto.tigrisdata.v1.ListBranchesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ListBranchesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ListBranchesRequest}
 */
proto.tigrisdata.v1.ListBranchesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ListBranchesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ListBranchesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ListBranchesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListBranchesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.ListBranchesRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ListBranchesRequest} returns this
 */
proto.tigrisdata.v1.ListBranchesRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.ListBranchesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ListBranchesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ListBranchesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ListBranchesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListBranchesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    branchesList: jspb.Message.toObjectList(msg.getBranchesList(),
    proto.tigrisdata.v1.BranchInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ListBranchesResponse}
 */
proto.tigrisdata.v1.ListBranchesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ListBranchesResponse;
  return proto.tigrisdata.v1.ListBranchesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ListBranchesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ListBranchesResponse}
 */
proto.tigrisdata.v1.ListBranchesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.BranchInfo;
      reader.readMessage(value,proto.tigrisdata.v1.BranchInfo.deserializeBinaryFromReader);
      msg.addBranches(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ListBranchesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ListBranchesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ListBranchesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListBranchesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBranchesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tigrisdata.v1.BranchInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BranchInfo branches = 1;
 * @return {!Array<!proto.tigrisdata.v1.BranchInfo>}
 */
proto.tigrisdata.v1.ListBranchesResponse.prototype.getBranchesList = function() {
  return /** @type{!Array<!proto.tigrisdata.v1.BranchInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tigrisdata.v1.BranchInfo, 1));
};


/**
 * @param {!Array<!proto.tigrisdata.v1.BranchInfo>} value
 * @return {!proto.tigrisdata.v1.ListBranchesResponse} returns this
*/
proto.tigrisdata.v1.ListBranchesResponse.prototype.setBranchesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tigrisdata.v1.BranchInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.BranchInfo}
 */
proto.tigrisdata.v1.ListBranchesResponse.prototype.addBranches = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tigrisdata.v1.BranchInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.ListBranchesResponse} returns this
 */
proto.tigrisdata.v1.ListBranchesResponse.prototype.clearBranchesList = function() {
  return this.setBranchesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    schema: msg.getSchema_asB64(),
    onlyCreate: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.CollectionOptions.toObject(includeInstance, f),
    branch: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CreateOrUpdateCollectionRequest;
  return proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSchema(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnlyCreate(value);
      break;
    case 5:
      var value = new proto.tigrisdata.v1.CollectionOptions;
      reader.readMessage(value,proto.tigrisdata.v1.CollectionOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSchema_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getOnlyCreate();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.tigrisdata.v1.CollectionOptions.serializeBinaryToWriter
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest} returns this
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest} returns this
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes schema = 3;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.getSchema = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes schema = 3;
 * This is a type-conversion wrapper around `getSchema()`
 * @return {string}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.getSchema_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSchema()));
};


/**
 * optional bytes schema = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSchema()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.getSchema_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSchema()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest} returns this
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.setSchema = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bool only_create = 4;
 * @return {boolean}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.getOnlyCreate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest} returns this
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.setOnlyCreate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional CollectionOptions options = 5;
 * @return {?proto.tigrisdata.v1.CollectionOptions}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.CollectionOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.CollectionOptions, 5));
};


/**
 * @param {?proto.tigrisdata.v1.CollectionOptions|undefined} value
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest} returns this
*/
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest} returns this
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string branch = 6;
 * @return {string}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest} returns this
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.setBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CreateOrUpdateCollectionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionResponse}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CreateOrUpdateCollectionResponse;
  return proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CreateOrUpdateCollectionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionResponse}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CreateOrUpdateCollectionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionResponse} returns this
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionResponse} returns this
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DropCollectionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DropCollectionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DropCollectionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DropCollectionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.CollectionOptions.toObject(includeInstance, f),
    branch: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DropCollectionRequest}
 */
proto.tigrisdata.v1.DropCollectionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DropCollectionRequest;
  return proto.tigrisdata.v1.DropCollectionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DropCollectionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DropCollectionRequest}
 */
proto.tigrisdata.v1.DropCollectionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = new proto.tigrisdata.v1.CollectionOptions;
      reader.readMessage(value,proto.tigrisdata.v1.CollectionOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DropCollectionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DropCollectionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DropCollectionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DropCollectionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tigrisdata.v1.CollectionOptions.serializeBinaryToWriter
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.DropCollectionRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DropCollectionRequest} returns this
 */
proto.tigrisdata.v1.DropCollectionRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.DropCollectionRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DropCollectionRequest} returns this
 */
proto.tigrisdata.v1.DropCollectionRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CollectionOptions options = 3;
 * @return {?proto.tigrisdata.v1.CollectionOptions}
 */
proto.tigrisdata.v1.DropCollectionRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.CollectionOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.CollectionOptions, 3));
};


/**
 * @param {?proto.tigrisdata.v1.CollectionOptions|undefined} value
 * @return {!proto.tigrisdata.v1.DropCollectionRequest} returns this
*/
proto.tigrisdata.v1.DropCollectionRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.DropCollectionRequest} returns this
 */
proto.tigrisdata.v1.DropCollectionRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.DropCollectionRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string branch = 4;
 * @return {string}
 */
proto.tigrisdata.v1.DropCollectionRequest.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DropCollectionRequest} returns this
 */
proto.tigrisdata.v1.DropCollectionRequest.prototype.setBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DropCollectionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DropCollectionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DropCollectionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DropCollectionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DropCollectionResponse}
 */
proto.tigrisdata.v1.DropCollectionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DropCollectionResponse;
  return proto.tigrisdata.v1.DropCollectionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DropCollectionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DropCollectionResponse}
 */
proto.tigrisdata.v1.DropCollectionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DropCollectionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DropCollectionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DropCollectionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DropCollectionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.tigrisdata.v1.DropCollectionResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DropCollectionResponse} returns this
 */
proto.tigrisdata.v1.DropCollectionResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.tigrisdata.v1.DropCollectionResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DropCollectionResponse} returns this
 */
proto.tigrisdata.v1.DropCollectionResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ProjectInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ProjectInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ProjectInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ProjectInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.ProjectMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ProjectInfo}
 */
proto.tigrisdata.v1.ProjectInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ProjectInfo;
  return proto.tigrisdata.v1.ProjectInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ProjectInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ProjectInfo}
 */
proto.tigrisdata.v1.ProjectInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.ProjectMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.ProjectMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ProjectInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ProjectInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ProjectInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ProjectInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.ProjectMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.ProjectInfo.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ProjectInfo} returns this
 */
proto.tigrisdata.v1.ProjectInfo.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ProjectMetadata metadata = 2;
 * @return {?proto.tigrisdata.v1.ProjectMetadata}
 */
proto.tigrisdata.v1.ProjectInfo.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.ProjectMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.ProjectMetadata, 2));
};


/**
 * @param {?proto.tigrisdata.v1.ProjectMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.ProjectInfo} returns this
*/
proto.tigrisdata.v1.ProjectInfo.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ProjectInfo} returns this
 */
proto.tigrisdata.v1.ProjectInfo.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ProjectInfo.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CollectionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CollectionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CollectionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CollectionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    collection: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.CollectionMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CollectionInfo}
 */
proto.tigrisdata.v1.CollectionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CollectionInfo;
  return proto.tigrisdata.v1.CollectionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CollectionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CollectionInfo}
 */
proto.tigrisdata.v1.CollectionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.CollectionMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.CollectionMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CollectionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CollectionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CollectionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CollectionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.CollectionMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string collection = 1;
 * @return {string}
 */
proto.tigrisdata.v1.CollectionInfo.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CollectionInfo} returns this
 */
proto.tigrisdata.v1.CollectionInfo.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional CollectionMetadata metadata = 2;
 * @return {?proto.tigrisdata.v1.CollectionMetadata}
 */
proto.tigrisdata.v1.CollectionInfo.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.CollectionMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.CollectionMetadata, 2));
};


/**
 * @param {?proto.tigrisdata.v1.CollectionMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.CollectionInfo} returns this
*/
proto.tigrisdata.v1.CollectionInfo.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.CollectionInfo} returns this
 */
proto.tigrisdata.v1.CollectionInfo.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.CollectionInfo.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.BranchInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.BranchInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.BranchInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.BranchInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    branch: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.BranchMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.BranchInfo}
 */
proto.tigrisdata.v1.BranchInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.BranchInfo;
  return proto.tigrisdata.v1.BranchInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.BranchInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.BranchInfo}
 */
proto.tigrisdata.v1.BranchInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.BranchMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.BranchMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.BranchInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.BranchInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.BranchInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.BranchInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.BranchMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string branch = 1;
 * @return {string}
 */
proto.tigrisdata.v1.BranchInfo.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.BranchInfo} returns this
 */
proto.tigrisdata.v1.BranchInfo.prototype.setBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional BranchMetadata metadata = 2;
 * @return {?proto.tigrisdata.v1.BranchMetadata}
 */
proto.tigrisdata.v1.BranchInfo.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.BranchMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.BranchMetadata, 2));
};


/**
 * @param {?proto.tigrisdata.v1.BranchMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.BranchInfo} returns this
*/
proto.tigrisdata.v1.BranchInfo.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.BranchInfo} returns this
 */
proto.tigrisdata.v1.BranchInfo.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.BranchInfo.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ListProjectsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ListProjectsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ListProjectsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListProjectsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ListProjectsRequest}
 */
proto.tigrisdata.v1.ListProjectsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ListProjectsRequest;
  return proto.tigrisdata.v1.ListProjectsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ListProjectsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ListProjectsRequest}
 */
proto.tigrisdata.v1.ListProjectsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ListProjectsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ListProjectsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ListProjectsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListProjectsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.ListProjectsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ListProjectsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ListProjectsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ListProjectsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListProjectsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectsList: jspb.Message.toObjectList(msg.getProjectsList(),
    proto.tigrisdata.v1.ProjectInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ListProjectsResponse}
 */
proto.tigrisdata.v1.ListProjectsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ListProjectsResponse;
  return proto.tigrisdata.v1.ListProjectsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ListProjectsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ListProjectsResponse}
 */
proto.tigrisdata.v1.ListProjectsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.ProjectInfo;
      reader.readMessage(value,proto.tigrisdata.v1.ProjectInfo.deserializeBinaryFromReader);
      msg.addProjects(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ListProjectsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ListProjectsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ListProjectsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListProjectsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tigrisdata.v1.ProjectInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ProjectInfo projects = 1;
 * @return {!Array<!proto.tigrisdata.v1.ProjectInfo>}
 */
proto.tigrisdata.v1.ListProjectsResponse.prototype.getProjectsList = function() {
  return /** @type{!Array<!proto.tigrisdata.v1.ProjectInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tigrisdata.v1.ProjectInfo, 1));
};


/**
 * @param {!Array<!proto.tigrisdata.v1.ProjectInfo>} value
 * @return {!proto.tigrisdata.v1.ListProjectsResponse} returns this
*/
proto.tigrisdata.v1.ListProjectsResponse.prototype.setProjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tigrisdata.v1.ProjectInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.ProjectInfo}
 */
proto.tigrisdata.v1.ListProjectsResponse.prototype.addProjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tigrisdata.v1.ProjectInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.ListProjectsResponse} returns this
 */
proto.tigrisdata.v1.ListProjectsResponse.prototype.clearProjectsList = function() {
  return this.setProjectsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ListCollectionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ListCollectionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ListCollectionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListCollectionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.CollectionOptions.toObject(includeInstance, f),
    branch: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ListCollectionsRequest}
 */
proto.tigrisdata.v1.ListCollectionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ListCollectionsRequest;
  return proto.tigrisdata.v1.ListCollectionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ListCollectionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ListCollectionsRequest}
 */
proto.tigrisdata.v1.ListCollectionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.CollectionOptions;
      reader.readMessage(value,proto.tigrisdata.v1.CollectionOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ListCollectionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ListCollectionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ListCollectionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListCollectionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.CollectionOptions.serializeBinaryToWriter
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.ListCollectionsRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ListCollectionsRequest} returns this
 */
proto.tigrisdata.v1.ListCollectionsRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional CollectionOptions options = 2;
 * @return {?proto.tigrisdata.v1.CollectionOptions}
 */
proto.tigrisdata.v1.ListCollectionsRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.CollectionOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.CollectionOptions, 2));
};


/**
 * @param {?proto.tigrisdata.v1.CollectionOptions|undefined} value
 * @return {!proto.tigrisdata.v1.ListCollectionsRequest} returns this
*/
proto.tigrisdata.v1.ListCollectionsRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ListCollectionsRequest} returns this
 */
proto.tigrisdata.v1.ListCollectionsRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ListCollectionsRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string branch = 3;
 * @return {string}
 */
proto.tigrisdata.v1.ListCollectionsRequest.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ListCollectionsRequest} returns this
 */
proto.tigrisdata.v1.ListCollectionsRequest.prototype.setBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.ListCollectionsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ListCollectionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ListCollectionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ListCollectionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListCollectionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    collectionsList: jspb.Message.toObjectList(msg.getCollectionsList(),
    proto.tigrisdata.v1.CollectionInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ListCollectionsResponse}
 */
proto.tigrisdata.v1.ListCollectionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ListCollectionsResponse;
  return proto.tigrisdata.v1.ListCollectionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ListCollectionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ListCollectionsResponse}
 */
proto.tigrisdata.v1.ListCollectionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.tigrisdata.v1.CollectionInfo;
      reader.readMessage(value,proto.tigrisdata.v1.CollectionInfo.deserializeBinaryFromReader);
      msg.addCollections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ListCollectionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ListCollectionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ListCollectionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListCollectionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.tigrisdata.v1.CollectionInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CollectionInfo collections = 2;
 * @return {!Array<!proto.tigrisdata.v1.CollectionInfo>}
 */
proto.tigrisdata.v1.ListCollectionsResponse.prototype.getCollectionsList = function() {
  return /** @type{!Array<!proto.tigrisdata.v1.CollectionInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tigrisdata.v1.CollectionInfo, 2));
};


/**
 * @param {!Array<!proto.tigrisdata.v1.CollectionInfo>} value
 * @return {!proto.tigrisdata.v1.ListCollectionsResponse} returns this
*/
proto.tigrisdata.v1.ListCollectionsResponse.prototype.setCollectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.tigrisdata.v1.CollectionInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.CollectionInfo}
 */
proto.tigrisdata.v1.ListCollectionsResponse.prototype.addCollections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.tigrisdata.v1.CollectionInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.ListCollectionsResponse} returns this
 */
proto.tigrisdata.v1.ListCollectionsResponse.prototype.clearCollectionsList = function() {
  return this.setCollectionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DescribeDatabaseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DescribeDatabaseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DescribeDatabaseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DescribeDatabaseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    schemaFormat: jspb.Message.getFieldWithDefault(msg, 2, ""),
    branch: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DescribeDatabaseRequest}
 */
proto.tigrisdata.v1.DescribeDatabaseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DescribeDatabaseRequest;
  return proto.tigrisdata.v1.DescribeDatabaseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DescribeDatabaseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DescribeDatabaseRequest}
 */
proto.tigrisdata.v1.DescribeDatabaseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaFormat(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DescribeDatabaseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DescribeDatabaseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DescribeDatabaseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DescribeDatabaseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSchemaFormat();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.DescribeDatabaseRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DescribeDatabaseRequest} returns this
 */
proto.tigrisdata.v1.DescribeDatabaseRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string schema_format = 2;
 * @return {string}
 */
proto.tigrisdata.v1.DescribeDatabaseRequest.prototype.getSchemaFormat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DescribeDatabaseRequest} returns this
 */
proto.tigrisdata.v1.DescribeDatabaseRequest.prototype.setSchemaFormat = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string branch = 3;
 * @return {string}
 */
proto.tigrisdata.v1.DescribeDatabaseRequest.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DescribeDatabaseRequest} returns this
 */
proto.tigrisdata.v1.DescribeDatabaseRequest.prototype.setBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DescribeCollectionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DescribeCollectionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DescribeCollectionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    schemaFormat: jspb.Message.getFieldWithDefault(msg, 3, ""),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.CollectionOptions.toObject(includeInstance, f),
    branch: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DescribeCollectionRequest}
 */
proto.tigrisdata.v1.DescribeCollectionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DescribeCollectionRequest;
  return proto.tigrisdata.v1.DescribeCollectionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DescribeCollectionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DescribeCollectionRequest}
 */
proto.tigrisdata.v1.DescribeCollectionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaFormat(value);
      break;
    case 4:
      var value = new proto.tigrisdata.v1.CollectionOptions;
      reader.readMessage(value,proto.tigrisdata.v1.CollectionOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DescribeCollectionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DescribeCollectionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DescribeCollectionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSchemaFormat();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.tigrisdata.v1.CollectionOptions.serializeBinaryToWriter
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DescribeCollectionRequest} returns this
 */
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DescribeCollectionRequest} returns this
 */
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string schema_format = 3;
 * @return {string}
 */
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.getSchemaFormat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DescribeCollectionRequest} returns this
 */
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.setSchemaFormat = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional CollectionOptions options = 4;
 * @return {?proto.tigrisdata.v1.CollectionOptions}
 */
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.CollectionOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.CollectionOptions, 4));
};


/**
 * @param {?proto.tigrisdata.v1.CollectionOptions|undefined} value
 * @return {!proto.tigrisdata.v1.DescribeCollectionRequest} returns this
*/
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.DescribeCollectionRequest} returns this
 */
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string branch = 5;
 * @return {string}
 */
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DescribeCollectionRequest} returns this
 */
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.setBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.repeatedFields_ = [2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DescribeDatabaseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DescribeDatabaseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.DatabaseMetadata.toObject(includeInstance, f),
    collectionsList: jspb.Message.toObjectList(msg.getCollectionsList(),
    proto.tigrisdata.v1.CollectionDescription.toObject, includeInstance),
    size: jspb.Message.getFieldWithDefault(msg, 3, 0),
    branchesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DescribeDatabaseResponse}
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DescribeDatabaseResponse;
  return proto.tigrisdata.v1.DescribeDatabaseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DescribeDatabaseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DescribeDatabaseResponse}
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.DatabaseMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.DatabaseMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.CollectionDescription;
      reader.readMessage(value,proto.tigrisdata.v1.CollectionDescription.deserializeBinaryFromReader);
      msg.addCollections(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addBranches(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DescribeDatabaseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DescribeDatabaseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.DatabaseMetadata.serializeBinaryToWriter
    );
  }
  f = message.getCollectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.tigrisdata.v1.CollectionDescription.serializeBinaryToWriter
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getBranchesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional DatabaseMetadata metadata = 1;
 * @return {?proto.tigrisdata.v1.DatabaseMetadata}
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.DatabaseMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.DatabaseMetadata, 1));
};


/**
 * @param {?proto.tigrisdata.v1.DatabaseMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.DescribeDatabaseResponse} returns this
*/
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.DescribeDatabaseResponse} returns this
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated CollectionDescription collections = 2;
 * @return {!Array<!proto.tigrisdata.v1.CollectionDescription>}
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.getCollectionsList = function() {
  return /** @type{!Array<!proto.tigrisdata.v1.CollectionDescription>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tigrisdata.v1.CollectionDescription, 2));
};


/**
 * @param {!Array<!proto.tigrisdata.v1.CollectionDescription>} value
 * @return {!proto.tigrisdata.v1.DescribeDatabaseResponse} returns this
*/
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.setCollectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.tigrisdata.v1.CollectionDescription=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.CollectionDescription}
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.addCollections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.tigrisdata.v1.CollectionDescription, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.DescribeDatabaseResponse} returns this
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.clearCollectionsList = function() {
  return this.setCollectionsList([]);
};


/**
 * optional int64 size = 3;
 * @return {number}
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.DescribeDatabaseResponse} returns this
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated string branches = 4;
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.getBranchesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.tigrisdata.v1.DescribeDatabaseResponse} returns this
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.setBranchesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.DescribeDatabaseResponse} returns this
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.addBranches = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.DescribeDatabaseResponse} returns this
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.clearBranchesList = function() {
  return this.setBranchesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.DescribeCollectionResponse.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DescribeCollectionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DescribeCollectionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DescribeCollectionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    collection: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.CollectionMetadata.toObject(includeInstance, f),
    schema: msg.getSchema_asB64(),
    size: jspb.Message.getFieldWithDefault(msg, 4, 0),
    indexesList: jspb.Message.toObjectList(msg.getIndexesList(),
    proto.tigrisdata.v1.CollectionIndex.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DescribeCollectionResponse}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DescribeCollectionResponse;
  return proto.tigrisdata.v1.DescribeCollectionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DescribeCollectionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DescribeCollectionResponse}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.CollectionMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.CollectionMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSchema(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 5:
      var value = new proto.tigrisdata.v1.CollectionIndex;
      reader.readMessage(value,proto.tigrisdata.v1.CollectionIndex.deserializeBinaryFromReader);
      msg.addIndexes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DescribeCollectionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DescribeCollectionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DescribeCollectionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.CollectionMetadata.serializeBinaryToWriter
    );
  }
  f = message.getSchema_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getIndexesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.tigrisdata.v1.CollectionIndex.serializeBinaryToWriter
    );
  }
};


/**
 * optional string collection = 1;
 * @return {string}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DescribeCollectionResponse} returns this
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional CollectionMetadata metadata = 2;
 * @return {?proto.tigrisdata.v1.CollectionMetadata}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.CollectionMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.CollectionMetadata, 2));
};


/**
 * @param {?proto.tigrisdata.v1.CollectionMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.DescribeCollectionResponse} returns this
*/
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.DescribeCollectionResponse} returns this
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes schema = 3;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.getSchema = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes schema = 3;
 * This is a type-conversion wrapper around `getSchema()`
 * @return {string}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.getSchema_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSchema()));
};


/**
 * optional bytes schema = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSchema()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.getSchema_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSchema()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.DescribeCollectionResponse} returns this
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.setSchema = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional int64 size = 4;
 * @return {number}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.DescribeCollectionResponse} returns this
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated CollectionIndex indexes = 5;
 * @return {!Array<!proto.tigrisdata.v1.CollectionIndex>}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.getIndexesList = function() {
  return /** @type{!Array<!proto.tigrisdata.v1.CollectionIndex>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tigrisdata.v1.CollectionIndex, 5));
};


/**
 * @param {!Array<!proto.tigrisdata.v1.CollectionIndex>} value
 * @return {!proto.tigrisdata.v1.DescribeCollectionResponse} returns this
*/
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.setIndexesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.tigrisdata.v1.CollectionIndex=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.CollectionIndex}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.addIndexes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.tigrisdata.v1.CollectionIndex, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.DescribeCollectionResponse} returns this
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.clearIndexesList = function() {
  return this.setIndexesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ProjectDescription.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ProjectDescription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ProjectDescription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ProjectDescription.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ProjectDescription}
 */
proto.tigrisdata.v1.ProjectDescription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ProjectDescription;
  return proto.tigrisdata.v1.ProjectDescription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ProjectDescription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ProjectDescription}
 */
proto.tigrisdata.v1.ProjectDescription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ProjectDescription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ProjectDescription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ProjectDescription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ProjectDescription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.CollectionDescription.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CollectionDescription.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CollectionDescription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CollectionDescription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CollectionDescription.toObject = function(includeInstance, msg) {
  var f, obj = {
    collection: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.CollectionMetadata.toObject(includeInstance, f),
    schema: msg.getSchema_asB64(),
    size: jspb.Message.getFieldWithDefault(msg, 4, 0),
    indexesList: jspb.Message.toObjectList(msg.getIndexesList(),
    proto.tigrisdata.v1.CollectionIndex.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CollectionDescription}
 */
proto.tigrisdata.v1.CollectionDescription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CollectionDescription;
  return proto.tigrisdata.v1.CollectionDescription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CollectionDescription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CollectionDescription}
 */
proto.tigrisdata.v1.CollectionDescription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.CollectionMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.CollectionMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSchema(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 5:
      var value = new proto.tigrisdata.v1.CollectionIndex;
      reader.readMessage(value,proto.tigrisdata.v1.CollectionIndex.deserializeBinaryFromReader);
      msg.addIndexes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CollectionDescription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CollectionDescription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CollectionDescription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CollectionDescription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.CollectionMetadata.serializeBinaryToWriter
    );
  }
  f = message.getSchema_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getIndexesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.tigrisdata.v1.CollectionIndex.serializeBinaryToWriter
    );
  }
};


/**
 * optional string collection = 1;
 * @return {string}
 */
proto.tigrisdata.v1.CollectionDescription.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CollectionDescription} returns this
 */
proto.tigrisdata.v1.CollectionDescription.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional CollectionMetadata metadata = 2;
 * @return {?proto.tigrisdata.v1.CollectionMetadata}
 */
proto.tigrisdata.v1.CollectionDescription.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.CollectionMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.CollectionMetadata, 2));
};


/**
 * @param {?proto.tigrisdata.v1.CollectionMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.CollectionDescription} returns this
*/
proto.tigrisdata.v1.CollectionDescription.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.CollectionDescription} returns this
 */
proto.tigrisdata.v1.CollectionDescription.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.CollectionDescription.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes schema = 3;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.CollectionDescription.prototype.getSchema = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes schema = 3;
 * This is a type-conversion wrapper around `getSchema()`
 * @return {string}
 */
proto.tigrisdata.v1.CollectionDescription.prototype.getSchema_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSchema()));
};


/**
 * optional bytes schema = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSchema()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CollectionDescription.prototype.getSchema_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSchema()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.CollectionDescription} returns this
 */
proto.tigrisdata.v1.CollectionDescription.prototype.setSchema = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional int64 size = 4;
 * @return {number}
 */
proto.tigrisdata.v1.CollectionDescription.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.CollectionDescription} returns this
 */
proto.tigrisdata.v1.CollectionDescription.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated CollectionIndex indexes = 5;
 * @return {!Array<!proto.tigrisdata.v1.CollectionIndex>}
 */
proto.tigrisdata.v1.CollectionDescription.prototype.getIndexesList = function() {
  return /** @type{!Array<!proto.tigrisdata.v1.CollectionIndex>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tigrisdata.v1.CollectionIndex, 5));
};


/**
 * @param {!Array<!proto.tigrisdata.v1.CollectionIndex>} value
 * @return {!proto.tigrisdata.v1.CollectionDescription} returns this
*/
proto.tigrisdata.v1.CollectionDescription.prototype.setIndexesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.tigrisdata.v1.CollectionIndex=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.CollectionIndex}
 */
proto.tigrisdata.v1.CollectionDescription.prototype.addIndexes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.tigrisdata.v1.CollectionIndex, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.CollectionDescription} returns this
 */
proto.tigrisdata.v1.CollectionDescription.prototype.clearIndexesList = function() {
  return this.setIndexesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ProjectMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ProjectMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ProjectMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ProjectMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ProjectMetadata}
 */
proto.tigrisdata.v1.ProjectMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ProjectMetadata;
  return proto.tigrisdata.v1.ProjectMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ProjectMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ProjectMetadata}
 */
proto.tigrisdata.v1.ProjectMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ProjectMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ProjectMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ProjectMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ProjectMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DatabaseMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DatabaseMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DatabaseMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DatabaseMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DatabaseMetadata}
 */
proto.tigrisdata.v1.DatabaseMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DatabaseMetadata;
  return proto.tigrisdata.v1.DatabaseMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DatabaseMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DatabaseMetadata}
 */
proto.tigrisdata.v1.DatabaseMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DatabaseMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DatabaseMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DatabaseMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DatabaseMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CollectionMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CollectionMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CollectionMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CollectionMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CollectionMetadata}
 */
proto.tigrisdata.v1.CollectionMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CollectionMetadata;
  return proto.tigrisdata.v1.CollectionMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CollectionMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CollectionMetadata}
 */
proto.tigrisdata.v1.CollectionMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CollectionMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CollectionMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CollectionMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CollectionMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.CollectionIndex.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CollectionIndex.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CollectionIndex.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CollectionIndex} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CollectionIndex.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    state: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fieldsList: jspb.Message.toObjectList(msg.getFieldsList(),
    proto.tigrisdata.v1.Field.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CollectionIndex}
 */
proto.tigrisdata.v1.CollectionIndex.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CollectionIndex;
  return proto.tigrisdata.v1.CollectionIndex.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CollectionIndex} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CollectionIndex}
 */
proto.tigrisdata.v1.CollectionIndex.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 3:
      var value = new proto.tigrisdata.v1.Field;
      reader.readMessage(value,proto.tigrisdata.v1.Field.deserializeBinaryFromReader);
      msg.addFields(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CollectionIndex.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CollectionIndex.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CollectionIndex} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CollectionIndex.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.tigrisdata.v1.Field.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.tigrisdata.v1.CollectionIndex.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CollectionIndex} returns this
 */
proto.tigrisdata.v1.CollectionIndex.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string state = 2;
 * @return {string}
 */
proto.tigrisdata.v1.CollectionIndex.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CollectionIndex} returns this
 */
proto.tigrisdata.v1.CollectionIndex.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Field fields = 3;
 * @return {!Array<!proto.tigrisdata.v1.Field>}
 */
proto.tigrisdata.v1.CollectionIndex.prototype.getFieldsList = function() {
  return /** @type{!Array<!proto.tigrisdata.v1.Field>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tigrisdata.v1.Field, 3));
};


/**
 * @param {!Array<!proto.tigrisdata.v1.Field>} value
 * @return {!proto.tigrisdata.v1.CollectionIndex} returns this
*/
proto.tigrisdata.v1.CollectionIndex.prototype.setFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.tigrisdata.v1.Field=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.Field}
 */
proto.tigrisdata.v1.CollectionIndex.prototype.addFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.tigrisdata.v1.Field, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.CollectionIndex} returns this
 */
proto.tigrisdata.v1.CollectionIndex.prototype.clearFieldsList = function() {
  return this.setFieldsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.Field.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.Field.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.Field} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.Field.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.Field}
 */
proto.tigrisdata.v1.Field.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.Field;
  return proto.tigrisdata.v1.Field.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.Field} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.Field}
 */
proto.tigrisdata.v1.Field.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.Field.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.Field.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.Field} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.Field.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.tigrisdata.v1.Field.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.Field} returns this
 */
proto.tigrisdata.v1.Field.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.BuildCollectionIndexRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.BuildCollectionIndexRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.BuildCollectionIndexRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.BuildCollectionIndexRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    branch: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.BuildCollectionIndexRequest}
 */
proto.tigrisdata.v1.BuildCollectionIndexRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.BuildCollectionIndexRequest;
  return proto.tigrisdata.v1.BuildCollectionIndexRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.BuildCollectionIndexRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.BuildCollectionIndexRequest}
 */
proto.tigrisdata.v1.BuildCollectionIndexRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.BuildCollectionIndexRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.BuildCollectionIndexRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.BuildCollectionIndexRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.BuildCollectionIndexRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.BuildCollectionIndexRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.BuildCollectionIndexRequest} returns this
 */
proto.tigrisdata.v1.BuildCollectionIndexRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.BuildCollectionIndexRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.BuildCollectionIndexRequest} returns this
 */
proto.tigrisdata.v1.BuildCollectionIndexRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string branch = 3;
 * @return {string}
 */
proto.tigrisdata.v1.BuildCollectionIndexRequest.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.BuildCollectionIndexRequest} returns this
 */
proto.tigrisdata.v1.BuildCollectionIndexRequest.prototype.setBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.BuildCollectionIndexResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.BuildCollectionIndexResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.BuildCollectionIndexResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.BuildCollectionIndexResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.BuildCollectionIndexResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    indexesList: jspb.Message.toObjectList(msg.getIndexesList(),
    proto.tigrisdata.v1.CollectionIndex.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.BuildCollectionIndexResponse}
 */
proto.tigrisdata.v1.BuildCollectionIndexResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.BuildCollectionIndexResponse;
  return proto.tigrisdata.v1.BuildCollectionIndexResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.BuildCollectionIndexResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.BuildCollectionIndexResponse}
 */
proto.tigrisdata.v1.BuildCollectionIndexResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.CollectionIndex;
      reader.readMessage(value,proto.tigrisdata.v1.CollectionIndex.deserializeBinaryFromReader);
      msg.addIndexes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.BuildCollectionIndexResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.BuildCollectionIndexResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.BuildCollectionIndexResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.BuildCollectionIndexResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndexesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tigrisdata.v1.CollectionIndex.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CollectionIndex indexes = 1;
 * @return {!Array<!proto.tigrisdata.v1.CollectionIndex>}
 */
proto.tigrisdata.v1.BuildCollectionIndexResponse.prototype.getIndexesList = function() {
  return /** @type{!Array<!proto.tigrisdata.v1.CollectionIndex>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tigrisdata.v1.CollectionIndex, 1));
};


/**
 * @param {!Array<!proto.tigrisdata.v1.CollectionIndex>} value
 * @return {!proto.tigrisdata.v1.BuildCollectionIndexResponse} returns this
*/
proto.tigrisdata.v1.BuildCollectionIndexResponse.prototype.setIndexesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tigrisdata.v1.CollectionIndex=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.CollectionIndex}
 */
proto.tigrisdata.v1.BuildCollectionIndexResponse.prototype.addIndexes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tigrisdata.v1.CollectionIndex, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.BuildCollectionIndexResponse} returns this
 */
proto.tigrisdata.v1.BuildCollectionIndexResponse.prototype.clearIndexesList = function() {
  return this.setIndexesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.BranchMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.BranchMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.BranchMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.BranchMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.BranchMetadata}
 */
proto.tigrisdata.v1.BranchMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.BranchMetadata;
  return proto.tigrisdata.v1.BranchMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.BranchMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.BranchMetadata}
 */
proto.tigrisdata.v1.BranchMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.BranchMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.BranchMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.BranchMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.BranchMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CreateAppKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CreateAppKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CreateAppKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateAppKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    project: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CreateAppKeyRequest}
 */
proto.tigrisdata.v1.CreateAppKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CreateAppKeyRequest;
  return proto.tigrisdata.v1.CreateAppKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CreateAppKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CreateAppKeyRequest}
 */
proto.tigrisdata.v1.CreateAppKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CreateAppKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CreateAppKeyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CreateAppKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateAppKeyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.tigrisdata.v1.CreateAppKeyRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CreateAppKeyRequest} returns this
 */
proto.tigrisdata.v1.CreateAppKeyRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.tigrisdata.v1.CreateAppKeyRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CreateAppKeyRequest} returns this
 */
proto.tigrisdata.v1.CreateAppKeyRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string project = 3;
 * @return {string}
 */
proto.tigrisdata.v1.CreateAppKeyRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CreateAppKeyRequest} returns this
 */
proto.tigrisdata.v1.CreateAppKeyRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CreateAppKeyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CreateAppKeyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CreateAppKeyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateAppKeyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    createdAppKey: (f = msg.getCreatedAppKey()) && proto.tigrisdata.v1.AppKey.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CreateAppKeyResponse}
 */
proto.tigrisdata.v1.CreateAppKeyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CreateAppKeyResponse;
  return proto.tigrisdata.v1.CreateAppKeyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CreateAppKeyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CreateAppKeyResponse}
 */
proto.tigrisdata.v1.CreateAppKeyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.AppKey;
      reader.readMessage(value,proto.tigrisdata.v1.AppKey.deserializeBinaryFromReader);
      msg.setCreatedAppKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CreateAppKeyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CreateAppKeyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CreateAppKeyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateAppKeyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreatedAppKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.AppKey.serializeBinaryToWriter
    );
  }
};


/**
 * optional AppKey created_app_key = 1;
 * @return {?proto.tigrisdata.v1.AppKey}
 */
proto.tigrisdata.v1.CreateAppKeyResponse.prototype.getCreatedAppKey = function() {
  return /** @type{?proto.tigrisdata.v1.AppKey} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.AppKey, 1));
};


/**
 * @param {?proto.tigrisdata.v1.AppKey|undefined} value
 * @return {!proto.tigrisdata.v1.CreateAppKeyResponse} returns this
*/
proto.tigrisdata.v1.CreateAppKeyResponse.prototype.setCreatedAppKey = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.CreateAppKeyResponse} returns this
 */
proto.tigrisdata.v1.CreateAppKeyResponse.prototype.clearCreatedAppKey = function() {
  return this.setCreatedAppKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.CreateAppKeyResponse.prototype.hasCreatedAppKey = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.UpdateAppKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.UpdateAppKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.UpdateAppKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.UpdateAppKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    project: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.UpdateAppKeyRequest}
 */
proto.tigrisdata.v1.UpdateAppKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.UpdateAppKeyRequest;
  return proto.tigrisdata.v1.UpdateAppKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.UpdateAppKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.UpdateAppKeyRequest}
 */
proto.tigrisdata.v1.UpdateAppKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.UpdateAppKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.UpdateAppKeyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.UpdateAppKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.UpdateAppKeyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.tigrisdata.v1.UpdateAppKeyRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.UpdateAppKeyRequest} returns this
 */
proto.tigrisdata.v1.UpdateAppKeyRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string project = 2;
 * @return {string}
 */
proto.tigrisdata.v1.UpdateAppKeyRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.UpdateAppKeyRequest} returns this
 */
proto.tigrisdata.v1.UpdateAppKeyRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.tigrisdata.v1.UpdateAppKeyRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.UpdateAppKeyRequest} returns this
 */
proto.tigrisdata.v1.UpdateAppKeyRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.tigrisdata.v1.UpdateAppKeyRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.UpdateAppKeyRequest} returns this
 */
proto.tigrisdata.v1.UpdateAppKeyRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.UpdateAppKeyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.UpdateAppKeyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.UpdateAppKeyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.UpdateAppKeyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    updatedAppKey: (f = msg.getUpdatedAppKey()) && proto.tigrisdata.v1.AppKey.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.UpdateAppKeyResponse}
 */
proto.tigrisdata.v1.UpdateAppKeyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.UpdateAppKeyResponse;
  return proto.tigrisdata.v1.UpdateAppKeyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.UpdateAppKeyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.UpdateAppKeyResponse}
 */
proto.tigrisdata.v1.UpdateAppKeyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.AppKey;
      reader.readMessage(value,proto.tigrisdata.v1.AppKey.deserializeBinaryFromReader);
      msg.setUpdatedAppKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.UpdateAppKeyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.UpdateAppKeyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.UpdateAppKeyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.UpdateAppKeyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdatedAppKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.AppKey.serializeBinaryToWriter
    );
  }
};


/**
 * optional AppKey updated_app_key = 1;
 * @return {?proto.tigrisdata.v1.AppKey}
 */
proto.tigrisdata.v1.UpdateAppKeyResponse.prototype.getUpdatedAppKey = function() {
  return /** @type{?proto.tigrisdata.v1.AppKey} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.AppKey, 1));
};


/**
 * @param {?proto.tigrisdata.v1.AppKey|undefined} value
 * @return {!proto.tigrisdata.v1.UpdateAppKeyResponse} returns this
*/
proto.tigrisdata.v1.UpdateAppKeyResponse.prototype.setUpdatedAppKey = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.UpdateAppKeyResponse} returns this
 */
proto.tigrisdata.v1.UpdateAppKeyResponse.prototype.clearUpdatedAppKey = function() {
  return this.setUpdatedAppKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.UpdateAppKeyResponse.prototype.hasUpdatedAppKey = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.AppKey.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.AppKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.AppKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.AppKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    secret: jspb.Message.getFieldWithDefault(msg, 4, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 5, 0),
    createdBy: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, 0),
    updatedBy: jspb.Message.getFieldWithDefault(msg, 8, ""),
    project: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.AppKey}
 */
proto.tigrisdata.v1.AppKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.AppKey;
  return proto.tigrisdata.v1.AppKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.AppKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.AppKey}
 */
proto.tigrisdata.v1.AppKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedBy(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.AppKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.AppKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.AppKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.AppKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getUpdatedBy();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.tigrisdata.v1.AppKey.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.AppKey} returns this
 */
proto.tigrisdata.v1.AppKey.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.tigrisdata.v1.AppKey.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.AppKey} returns this
 */
proto.tigrisdata.v1.AppKey.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.tigrisdata.v1.AppKey.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.AppKey} returns this
 */
proto.tigrisdata.v1.AppKey.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string secret = 4;
 * @return {string}
 */
proto.tigrisdata.v1.AppKey.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.AppKey} returns this
 */
proto.tigrisdata.v1.AppKey.prototype.setSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 created_at = 5;
 * @return {number}
 */
proto.tigrisdata.v1.AppKey.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.AppKey} returns this
 */
proto.tigrisdata.v1.AppKey.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string created_by = 6;
 * @return {string}
 */
proto.tigrisdata.v1.AppKey.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.AppKey} returns this
 */
proto.tigrisdata.v1.AppKey.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 updated_at = 7;
 * @return {number}
 */
proto.tigrisdata.v1.AppKey.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.AppKey} returns this
 */
proto.tigrisdata.v1.AppKey.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string updated_by = 8;
 * @return {string}
 */
proto.tigrisdata.v1.AppKey.prototype.getUpdatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.AppKey} returns this
 */
proto.tigrisdata.v1.AppKey.prototype.setUpdatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string project = 9;
 * @return {string}
 */
proto.tigrisdata.v1.AppKey.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.AppKey} returns this
 */
proto.tigrisdata.v1.AppKey.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ListAppKeysRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ListAppKeysRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ListAppKeysRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListAppKeysRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ListAppKeysRequest}
 */
proto.tigrisdata.v1.ListAppKeysRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ListAppKeysRequest;
  return proto.tigrisdata.v1.ListAppKeysRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ListAppKeysRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ListAppKeysRequest}
 */
proto.tigrisdata.v1.ListAppKeysRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ListAppKeysRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ListAppKeysRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ListAppKeysRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListAppKeysRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.tigrisdata.v1.ListAppKeysRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ListAppKeysRequest} returns this
 */
proto.tigrisdata.v1.ListAppKeysRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.ListAppKeysResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ListAppKeysResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ListAppKeysResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ListAppKeysResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListAppKeysResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    appKeysList: jspb.Message.toObjectList(msg.getAppKeysList(),
    proto.tigrisdata.v1.AppKey.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ListAppKeysResponse}
 */
proto.tigrisdata.v1.ListAppKeysResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ListAppKeysResponse;
  return proto.tigrisdata.v1.ListAppKeysResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ListAppKeysResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ListAppKeysResponse}
 */
proto.tigrisdata.v1.ListAppKeysResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.AppKey;
      reader.readMessage(value,proto.tigrisdata.v1.AppKey.deserializeBinaryFromReader);
      msg.addAppKeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ListAppKeysResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ListAppKeysResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ListAppKeysResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListAppKeysResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAppKeysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tigrisdata.v1.AppKey.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AppKey app_keys = 1;
 * @return {!Array<!proto.tigrisdata.v1.AppKey>}
 */
proto.tigrisdata.v1.ListAppKeysResponse.prototype.getAppKeysList = function() {
  return /** @type{!Array<!proto.tigrisdata.v1.AppKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tigrisdata.v1.AppKey, 1));
};


/**
 * @param {!Array<!proto.tigrisdata.v1.AppKey>} value
 * @return {!proto.tigrisdata.v1.ListAppKeysResponse} returns this
*/
proto.tigrisdata.v1.ListAppKeysResponse.prototype.setAppKeysList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tigrisdata.v1.AppKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.AppKey}
 */
proto.tigrisdata.v1.ListAppKeysResponse.prototype.addAppKeys = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tigrisdata.v1.AppKey, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.ListAppKeysResponse} returns this
 */
proto.tigrisdata.v1.ListAppKeysResponse.prototype.clearAppKeysList = function() {
  return this.setAppKeysList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DeleteAppKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DeleteAppKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DeleteAppKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteAppKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    project: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DeleteAppKeyRequest}
 */
proto.tigrisdata.v1.DeleteAppKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DeleteAppKeyRequest;
  return proto.tigrisdata.v1.DeleteAppKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DeleteAppKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DeleteAppKeyRequest}
 */
proto.tigrisdata.v1.DeleteAppKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DeleteAppKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DeleteAppKeyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DeleteAppKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteAppKeyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.tigrisdata.v1.DeleteAppKeyRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DeleteAppKeyRequest} returns this
 */
proto.tigrisdata.v1.DeleteAppKeyRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string project = 2;
 * @return {string}
 */
proto.tigrisdata.v1.DeleteAppKeyRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DeleteAppKeyRequest} returns this
 */
proto.tigrisdata.v1.DeleteAppKeyRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DeleteAppKeyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DeleteAppKeyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DeleteAppKeyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteAppKeyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    deleted: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DeleteAppKeyResponse}
 */
proto.tigrisdata.v1.DeleteAppKeyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DeleteAppKeyResponse;
  return proto.tigrisdata.v1.DeleteAppKeyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DeleteAppKeyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DeleteAppKeyResponse}
 */
proto.tigrisdata.v1.DeleteAppKeyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeleted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DeleteAppKeyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DeleteAppKeyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DeleteAppKeyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteAppKeyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeleted();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool deleted = 1;
 * @return {boolean}
 */
proto.tigrisdata.v1.DeleteAppKeyResponse.prototype.getDeleted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tigrisdata.v1.DeleteAppKeyResponse} returns this
 */
proto.tigrisdata.v1.DeleteAppKeyResponse.prototype.setDeleted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.RotateAppKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.RotateAppKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.RotateAppKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.RotateAppKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    project: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.RotateAppKeyRequest}
 */
proto.tigrisdata.v1.RotateAppKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.RotateAppKeyRequest;
  return proto.tigrisdata.v1.RotateAppKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.RotateAppKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.RotateAppKeyRequest}
 */
proto.tigrisdata.v1.RotateAppKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.RotateAppKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.RotateAppKeyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.RotateAppKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.RotateAppKeyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.tigrisdata.v1.RotateAppKeyRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.RotateAppKeyRequest} returns this
 */
proto.tigrisdata.v1.RotateAppKeyRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string project = 2;
 * @return {string}
 */
proto.tigrisdata.v1.RotateAppKeyRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.RotateAppKeyRequest} returns this
 */
proto.tigrisdata.v1.RotateAppKeyRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.RotateAppKeyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.RotateAppKeyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.RotateAppKeyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.RotateAppKeyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    appKey: (f = msg.getAppKey()) && proto.tigrisdata.v1.AppKey.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.RotateAppKeyResponse}
 */
proto.tigrisdata.v1.RotateAppKeyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.RotateAppKeyResponse;
  return proto.tigrisdata.v1.RotateAppKeyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.RotateAppKeyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.RotateAppKeyResponse}
 */
proto.tigrisdata.v1.RotateAppKeyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.AppKey;
      reader.readMessage(value,proto.tigrisdata.v1.AppKey.deserializeBinaryFromReader);
      msg.setAppKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.RotateAppKeyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.RotateAppKeyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.RotateAppKeyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.RotateAppKeyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAppKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.AppKey.serializeBinaryToWriter
    );
  }
};


/**
 * optional AppKey app_key = 1;
 * @return {?proto.tigrisdata.v1.AppKey}
 */
proto.tigrisdata.v1.RotateAppKeyResponse.prototype.getAppKey = function() {
  return /** @type{?proto.tigrisdata.v1.AppKey} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.AppKey, 1));
};


/**
 * @param {?proto.tigrisdata.v1.AppKey|undefined} value
 * @return {!proto.tigrisdata.v1.RotateAppKeyResponse} returns this
*/
proto.tigrisdata.v1.RotateAppKeyResponse.prototype.setAppKey = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.RotateAppKeyResponse} returns this
 */
proto.tigrisdata.v1.RotateAppKeyResponse.prototype.clearAppKey = function() {
  return this.setAppKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.RotateAppKeyResponse.prototype.hasAppKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.tigrisdata.v1);
