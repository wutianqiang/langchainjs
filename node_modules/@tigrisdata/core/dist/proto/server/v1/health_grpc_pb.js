// GENERATED CODE -- DO NOT EDIT!

// Original file comments:
// Copyright 2022-2023 Tigris Data, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
'use strict';
var grpc = require('@grpc/grpc-js');
var server_v1_health_pb = require('../../server/v1/health_pb.js');
var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
var openapiv3_annotations_pb = require('../../openapiv3/annotations_pb.js');

function serialize_HealthCheckInput(arg) {
  if (!(arg instanceof server_v1_health_pb.HealthCheckInput)) {
    throw new Error('Expected argument of type HealthCheckInput');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_HealthCheckInput(buffer_arg) {
  return server_v1_health_pb.HealthCheckInput.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_HealthCheckResponse(arg) {
  if (!(arg instanceof server_v1_health_pb.HealthCheckResponse)) {
    throw new Error('Expected argument of type HealthCheckResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_HealthCheckResponse(buffer_arg) {
  return server_v1_health_pb.HealthCheckResponse.deserializeBinary(new Uint8Array(buffer_arg));
}


var HealthAPIService = exports.HealthAPIService = {
  // This endpoint can be used to check the liveness of the server.
health: {
    path: '/HealthAPI/Health',
    requestStream: false,
    responseStream: false,
    requestType: server_v1_health_pb.HealthCheckInput,
    responseType: server_v1_health_pb.HealthCheckResponse,
    requestSerialize: serialize_HealthCheckInput,
    requestDeserialize: deserialize_HealthCheckInput,
    responseSerialize: serialize_HealthCheckResponse,
    responseDeserialize: deserialize_HealthCheckResponse,
  },
};

exports.HealthAPIClient = grpc.makeGenericClientConstructor(HealthAPIService);
