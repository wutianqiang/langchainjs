import { TigrisCollectionType, TigrisSchema } from "../types";
import { TigrisIndexSchema, TigrisIndexType } from "../search";
export declare type CollectionSchema<T extends TigrisCollectionType> = {
    name: string;
    schema: TigrisSchema<T>;
};
export declare type IndexSchema<T extends TigrisIndexType> = {
    name: string;
    schema: TigrisIndexSchema<T>;
};
/** @internal */
export declare class DecoratedSchemaProcessor {
    private static _instance;
    private readonly storage;
    private constructor();
    static get Instance(): DecoratedSchemaProcessor;
    processIndex(cls: new () => TigrisIndexType): IndexSchema<typeof cls>;
    processCollection(cls: new () => TigrisCollectionType): CollectionSchema<typeof cls>;
    private buildTigrisSchema;
    private buildNestedArray;
    private addPrimaryKeys;
    private validatePrimaryKeysOrder;
    private getSchemaFields;
}
