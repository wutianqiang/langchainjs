{"version":3,"file":"index.js","sources":["../src/reader.ts","../src/setProvider.ts","../src/dictionaryProvider.ts","../src/PObject.ts","../src/parser.ts","../src/nameRegistry.ts"],"sourcesContent":["type Encoding = 'ascii' | 'utf-8';\n\nexport interface IReader {\n    byte(): number;\n    bytes(length: number): Uint8Array | Int8Array | Uint8ClampedArray;\n    uint16(): number;\n    int32(): number;\n    uint32(): number;\n    uint64(): number;\n    float32(): number;\n    float64(): number;\n    skip(offset: number): void;\n    string(size: number, encoding: Encoding): string;\n    line(): string;\n    hasNext(): boolean;\n}\n\nexport class BufferReader implements IReader {\n    private readonly _buffer: Uint8Array | Int8Array | Uint8ClampedArray;\n    private readonly _dataView: DataView;\n    private readonly _utf8Decoder = new TextDecoder('utf-8');\n    private readonly _asciiDecoder = new TextDecoder('ascii');\n\n    private _position: number;\n\n    constructor(buffer: Uint8Array | Int8Array | Uint8ClampedArray) {\n        this._buffer = buffer;\n        this._dataView = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n        this._position = 0;\n    }\n\n    get length() {\n        return this._buffer.byteLength;\n    }\n\n    get position() {\n        return this._position;\n    }\n\n    byte() {\n        const position = this._position;\n        this.skip(1);\n        return this._dataView.getUint8(position);\n    }\n\n    bytes(length: number) {\n        const position = this._position;\n        this.skip(length);\n        return this._buffer.subarray(position, this._position);\n    }\n\n    uint16() {\n        const position = this.position;\n        this.skip(2);\n        return this._dataView.getUint16(position, true);\n    }\n\n    int32() {\n        const position = this.position;\n        this.skip(4);\n        return this._dataView.getInt32(position, true);\n    }\n\n    uint32() {\n        const position = this.position;\n        this.skip(4);\n        return this._dataView.getUint32(position, true);\n    }\n\n    uint64() {\n        const position = this.position;\n        this.skip(8);\n        // split 64-bit number into two 32-bit parts\n        const left = this._dataView.getUint32(position, true);\n        const right = this._dataView.getUint32(position + 4, true);\n        // combine the two 32-bit values\n        const number = left + 2 ** 32 * right;\n        if (!Number.isSafeInteger(number)) {\n            console.warn(number, 'exceeds MAX_SAFE_INTEGER. Precision may be lost');\n        }\n        // new Uint8Array([0xff, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00]) => 255,\n        // new Uint8Array([0xff, 0xff, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00]) => 65535,\n        // new Uint8Array([0xff, 0xff, 0xff, 0xff,  0x00, 0x00, 0x00, 0x00]) => 4294967295,\n        // new Uint8Array([0x00, 0x00, 0x00, 0x00,  0x01, 0x00, 0x00, 0x00]) => 4294967296,\n        // new Uint8Array([0x00, 0x00, 0x00, 0x00,  0x00, 0x01, 0x00, 0x00]) => 1099511627776,\n        // new Uint8Array([0x00, 0x00, 0x00, 0x00,  0x00, 0x00, 0x01, 0x00]) => 281474976710656,\n        // new Uint8Array([0xff, 0xff, 0xff, 0xff,  0xff, 0xff, 0x1f, 0x00]) => 9007199254740991, // maximum precision\n        return number;\n    }\n\n    float32() {\n        const position = this.position;\n        this.skip(4);\n        return this._dataView.getFloat32(position, true);\n    }\n\n    float64() {\n        const position = this.position;\n        this.skip(8);\n        return this._dataView.getFloat64(position, true);\n    }\n\n    skip(offset: number) {\n        this._position += offset;\n        if (this._position > this._buffer.length) {\n            throw new Error(\n                'Expected ' +\n                    (this._position - this._buffer.length) +\n                    ' more bytes. The file might be corrupted. Unexpected end of file.',\n            );\n        }\n    }\n\n    string(size: number, encoding: Encoding) {\n        const data = this.bytes(size);\n        return encoding == 'utf-8' ? this._utf8Decoder.decode(data) : this._asciiDecoder.decode(data);\n    }\n\n    line() {\n        const index = this._buffer.indexOf(0x0a /** LF(\\\\n) */, this._position);\n        if (index == -1) {\n            throw new Error('Could not find end of line.');\n        }\n        const size = index - this._position;\n        const text = this.string(size, 'ascii');\n        this.skip(1);\n        return text;\n    }\n\n    hasNext() {\n        return this.position < this.length;\n    }\n}\n\nexport function readUint64(data: Uint8Array | Int8Array | Uint8ClampedArray) {\n    if (data.length > 8) {\n        throw new Error('Value too large to unpickling');\n    }\n    // Padding to 8 bytes\n    const buffer = new ArrayBuffer(8);\n    const uint8 = new Uint8Array(buffer);\n    uint8.set(data);\n    const subReader = new BufferReader(uint8);\n    const number = subReader.uint64();\n    return number;\n}\n\nexport function readUint64WithBigInt(data: Uint8Array | Int8Array | Uint8ClampedArray) {\n    let fixedLength = 0;\n    let partCount = 0;\n    while (fixedLength < data.length) {\n        fixedLength += 4;\n        partCount += 1;\n    }\n    const buffer = new ArrayBuffer(fixedLength);\n    const uint8 = new Uint8Array(buffer);\n    uint8.set(data);\n    const view = new DataView(buffer, 0, fixedLength);\n    let number = BigInt(0);\n    for (let partIndex = 0; partIndex < partCount; partIndex++) {\n        const part = BigInt(view.getUint32(partIndex * 4, true));\n        number |= part << BigInt(partIndex * 32);\n    }\n    return number;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { UnpicklingTypeOfSet } from './parser';\n\nexport interface ISetProvider {\n    create(): any;\n    createWithItems(value: Iterable<unknown>): any;\n    addMethod(set: any, value: unknown): void;\n}\nconst ArraySetProvider: ISetProvider = {\n    create: () => [],\n    createWithItems: (value) => Array.from(value),\n    addMethod: function (set: any[], value): void {\n        set.push(value);\n    },\n};\nconst StdandardSetProvider: ISetProvider = {\n    create: () => new Set(),\n    createWithItems: (value) => new Set(value),\n    addMethod: function (set: Set<unknown>, value): void {\n        set.add(value);\n    },\n};\nexport const SetProviderFactory = (type: UnpicklingTypeOfSet) => {\n    switch (type) {\n        case 'Set':\n            return StdandardSetProvider;\n        case 'array':\n            return ArraySetProvider;\n        default:\n            throw new Error(`Unknown unpickling type [${type}] of Set.`);\n    }\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { UnpicklingTypeOfDictionary } from './parser';\n\nexport interface IDictionaryProvider {\n    create(): any;\n    setMethod(dict: any, key: unknown, value: unknown): void;\n}\nconst ObjectDictionaryProvider: IDictionaryProvider = {\n    create: () => ({}),\n    setMethod: function (dict: Record<string, unknown>, key: string, value: unknown): void {\n        dict[key] = value;\n    },\n};\nconst StdandardDictionaryProvider: IDictionaryProvider = {\n    create: () => new Map(),\n    setMethod: function (dict: Map<unknown, unknown>, key: unknown, value: unknown): void {\n        dict.set(key, value);\n    },\n};\nexport const DictionaryProviderFactory = (type: UnpicklingTypeOfDictionary) => {\n    switch (type) {\n        case 'Map':\n            return StdandardDictionaryProvider;\n        case 'object':\n            return ObjectDictionaryProvider;\n        default:\n            throw new Error(`Unknown unpickling type [${type}] of Dictionary.`);\n    }\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nexport function createPObject(module: string, name: string): (new (...args: any[]) => any) | ((...args: any[]) => any) {\n    const PObject = function (this: any, ...args: any[]): any {\n        if (new.target) {\n            Object.defineProperty(this, 'args', {\n                value: args,\n                enumerable: false,\n                configurable: false,\n                writable: false,\n            });\n        } else {\n            const PFunction = function (this: any, ...args: any[]) {\n                Object.defineProperty(this, 'args', {\n                    value: args,\n                    enumerable: false,\n                    configurable: false,\n                    writable: false,\n                });\n            };\n            PFunction.prototype.__module__ = module;\n            PFunction.prototype.__name__ = name;\n            return Reflect.construct(PFunction, args);\n        }\n    } as unknown as (new (...args: any[]) => any) | ((...args: any[]) => any);\n    PObject.prototype.__module__ = module;\n    PObject.prototype.__name__ = name;\n    PObject.prototype.__setnewargs_ex__ = function (kwargs: any) {\n        Object.defineProperty(this, 'kwargs', {\n            value: kwargs,\n            enumerable: false,\n            configurable: false,\n            writable: false,\n        });\n    };\n    return PObject;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { OP } from './opcode';\nimport { IReader, BufferReader, readUint64, readUint64WithBigInt } from './reader';\nimport { ISetProvider, SetProviderFactory } from './setProvider';\nimport { IDictionaryProvider, DictionaryProviderFactory } from './dictionaryProvider';\nimport { createPObject } from './PObject';\n\nexport type UnpicklingTypeOfSet = 'array' | 'Set';\nexport type UnpicklingTypeOfDictionary = 'object' | 'Map';\n\nexport interface NameResolver {\n    resolve(module: string, name: string): (new (...args: any[]) => any) | ((...args: any[]) => any);\n}\nexport interface PersistentResolver {\n    resolve(pid: string): any;\n}\nexport interface ExtensionResolver {\n    resolve(extCode: number): any;\n}\n\nexport interface ParserOptions {\n    nameResolver: NameResolver;\n    persistentResolver: PersistentResolver;\n    extensionResolver: ExtensionResolver;\n    unpicklingTypeOfSet: UnpicklingTypeOfSet;\n    unpicklingTypeOfDictionary: UnpicklingTypeOfDictionary;\n}\n\nconst DefualtOptions: ParserOptions = {\n    nameResolver: {\n        resolve: (module, name) => createPObject(module, name),\n    },\n    persistentResolver: {\n        resolve: (pid) => {\n            throw new Error(`Unregistered persistent id: \\`${pid}\\`.`);\n        },\n    },\n    extensionResolver: {\n        resolve: (extCode) => {\n            throw new Error(`Unregistered extension code: \\`${extCode.toString(16)}\\`.`);\n        },\n    },\n    unpicklingTypeOfSet: 'array',\n    unpicklingTypeOfDictionary: 'object',\n};\n\nexport class Parser {\n    private readonly _options: ParserOptions;\n    private readonly _nameResolver: NameResolver;\n    private readonly _persistentResolver: PersistentResolver;\n    private readonly _extensionResolver: ExtensionResolver;\n    private readonly _setProvider: ISetProvider;\n    private readonly _dictionaryProvider: IDictionaryProvider;\n\n    constructor(options?: Partial<ParserOptions>) {\n        this._options = { ...DefualtOptions, ...options };\n        this._nameResolver = this._options.nameResolver;\n        this._persistentResolver = this._options.persistentResolver;\n        this._extensionResolver = this._options.extensionResolver;\n        this._setProvider = SetProviderFactory(this._options.unpicklingTypeOfSet);\n        this._dictionaryProvider = DictionaryProviderFactory(this._options.unpicklingTypeOfDictionary);\n    }\n\n    parse<T>(buffer: Uint8Array | Int8Array | Uint8ClampedArray): T {\n        const reader = new BufferReader(buffer);\n        return this.read(reader);\n    }\n\n    read<T>(reader: IReader): T {\n        let stack: any[] = [];\n        const metastack: any[] = [];\n        const memo = new Map();\n        while (reader.hasNext()) {\n            const opcode = reader.byte();\n            // console.log(`${(reader.position - 1).toString()} ${opcode}`);\n            // console.log('metastack:', metastack, '\\nstack:', stack);\n            // console.log('\\nmemo:', Array.from(memo.entries()));\n            switch (opcode) {\n                // Structural\n                case OP.PROTO: {\n                    const version = reader.byte();\n                    if (version > 4) {\n                        throw new Error(`Unsupported protocol version '${version}'.`);\n                    }\n                    break;\n                }\n                case OP.STOP:\n                    return stack.pop();\n                case OP.FRAME:\n                    // Ignore framing, but still have to gobble up the length.\n                    reader.skip(8);\n                    break;\n                case OP.MARK:\n                    metastack.push(stack);\n                    stack = [];\n                    break;\n                case OP.POP_MARK:\n                    stack = metastack.pop();\n                    break;\n                case OP.POP:\n                    stack.pop();\n                    break;\n                case OP.DUP:\n                    stack.push(stack[stack.length - 1]);\n                    break;\n\n                // Memo saving\n                case OP.PUT: {\n                    const index = parseInt(reader.line(), 10);\n                    memo.set(index, stack[stack.length - 1]);\n                    break;\n                }\n                case OP.BINPUT:\n                    memo.set(reader.byte(), stack[stack.length - 1]);\n                    break;\n                case OP.LONG_BINPUT:\n                    memo.set(reader.uint32(), stack[stack.length - 1]);\n                    break;\n                case OP.MEMOIZE:\n                    memo.set(memo.size, stack[stack.length - 1]);\n                    break;\n\n                // Memo getting\n                case OP.GET: {\n                    const index = parseInt(reader.line(), 10);\n                    stack.push(memo.get(index));\n                    break;\n                }\n                case OP.BINGET:\n                    stack.push(memo.get(reader.byte()));\n                    break;\n                case OP.LONG_BINGET:\n                    stack.push(memo.get(reader.uint32()));\n                    break;\n\n                // Primitive\n                case OP.NONE:\n                    stack.push(null);\n                    break;\n                case OP.NEWTRUE:\n                    stack.push(true);\n                    break;\n                case OP.NEWFALSE:\n                    stack.push(false);\n                    break;\n\n                // ASCII-formatted numbers\n                case OP.INT: {\n                    const value = reader.line();\n                    if (value == '01') {\n                        stack.push(true);\n                    } else if (value == '00') {\n                        stack.push(false);\n                    } else {\n                        stack.push(parseInt(value, 10));\n                    }\n                    break;\n                }\n                case OP.LONG:\n                    stack.push(parseInt(reader.line(), 10));\n                    break;\n                case OP.FLOAT:\n                    stack.push(parseFloat(reader.line()));\n                    break;\n\n                // ASCII-formatted strings\n                case OP.STRING: {\n                    const data = reader.line();\n                    // https://github.com/python/cpython/blob/4fe1c4b97e39429abbb9c2117fe40f585de00887/Lib/pickle.py#L1326\n                    if (data.length >= 2 && data[0] == data.slice(-1) && ['\"', \"'\"].includes(data[0])) {\n                        stack.push(data.slice(1, -1));\n                        break;\n                    } else {\n                        throw new Error('Insecure string pickle.');\n                    }\n                }\n                case OP.UNICODE:\n                    stack.push(reader.line());\n                    break;\n\n                // Binary-coded numbers\n                case OP.BININT:\n                    stack.push(reader.int32());\n                    break;\n                case OP.BININT1:\n                    stack.push(reader.byte());\n                    break;\n                case OP.BININT2:\n                    stack.push(reader.uint16());\n                    break;\n                case OP.LONG1: {\n                    const length = reader.byte();\n                    const data = reader.bytes(length);\n                    const number = readUint64(data);\n                    stack.push(number);\n                    break;\n                }\n                case OP.LONG4: {\n                    const length = reader.uint32();\n                    const data = reader.bytes(length);\n                    const number = readUint64WithBigInt(data);\n                    stack.push(number);\n                    break;\n                }\n                case OP.BINFLOAT:\n                    stack.push(reader.float64());\n                    break;\n\n                // Length-prefixed (byte)strings\n                case OP.BINBYTES:\n                    stack.push(reader.bytes(reader.int32()));\n                    break;\n                case OP.SHORT_BINBYTES:\n                    stack.push(reader.bytes(reader.byte()));\n                    break;\n                case OP.BINBYTES8:\n                    stack.push(reader.bytes(reader.uint64()));\n                    break;\n                case OP.BINSTRING:\n                    stack.push(reader.string(reader.uint32(), 'ascii'));\n                    break;\n                case OP.SHORT_BINSTRING:\n                    stack.push(reader.string(reader.byte(), 'ascii'));\n                    break;\n                case OP.BINUNICODE:\n                    stack.push(reader.string(reader.uint32(), 'utf-8'));\n                    break;\n                case OP.SHORT_BINUNICODE:\n                    stack.push(reader.string(reader.byte(), 'utf-8'));\n                    break;\n                case OP.BINUNICODE8:\n                    stack.push(reader.string(reader.uint64(), 'utf-8'));\n                    break;\n\n                // Tuples\n                case OP.EMPTY_TUPLE:\n                    stack.push([]);\n                    break;\n                case OP.TUPLE: {\n                    const items = stack;\n                    stack = metastack.pop();\n                    stack.push(items);\n                    break;\n                }\n                case OP.TUPLE1: {\n                    stack.push([stack.pop()]);\n                    break;\n                }\n                case OP.TUPLE2: {\n                    const b = stack.pop();\n                    const a = stack.pop();\n                    stack.push([a, b]);\n                    break;\n                }\n                case OP.TUPLE3: {\n                    const c = stack.pop();\n                    const b = stack.pop();\n                    const a = stack.pop();\n                    stack.push([a, b, c]);\n                    break;\n                }\n\n                // Lists\n                case OP.EMPTY_LIST:\n                    stack.push([]);\n                    break;\n                case OP.LIST: {\n                    const items = stack;\n                    stack = metastack.pop();\n                    stack.push(items);\n                    break;\n                }\n                case OP.APPEND: {\n                    const append = stack.pop();\n                    stack[stack.length - 1].push(append);\n                    break;\n                }\n                case OP.APPENDS: {\n                    const appends = stack;\n                    stack = metastack.pop();\n                    const list = stack[stack.length - 1];\n                    list.push(...appends);\n                    break;\n                }\n\n                // Dicts\n                case OP.EMPTY_DICT: {\n                    const dict = this._dictionaryProvider.create();\n                    stack.push(dict);\n                    break;\n                }\n                case OP.DICT: {\n                    const items = stack;\n                    stack = metastack.pop();\n                    const dict = this._dictionaryProvider.create();\n                    for (let i = 0; i < items.length; i += 2) {\n                        dict[items[i]] = items[i + 1];\n                    }\n                    stack.push(dict);\n                    break;\n                }\n                case OP.SETITEM: {\n                    const value = stack.pop();\n                    const key = stack.pop();\n                    const dict = stack[stack.length - 1];\n                    this._dictionaryProvider.setMethod(dict, key, value);\n                    break;\n                }\n                case OP.SETITEMS: {\n                    const items = stack;\n                    stack = metastack.pop();\n                    const dict = stack[stack.length - 1];\n                    // items stored as [k0, v0, ..., kn, vn]\n                    for (let pos = 0; pos < items.length; pos += 2) {\n                        this._dictionaryProvider.setMethod(dict, items[pos], items[pos + 1]);\n                    }\n                    break;\n                }\n\n                // Sets\n                case OP.EMPTY_SET: {\n                    const set = this._setProvider.create();\n                    stack.push(set);\n                    break;\n                }\n                case OP.FROZENSET: {\n                    const items = stack;\n                    stack = metastack.pop();\n                    const set = this._setProvider.createWithItems(items);\n                    stack.push(set);\n                    break;\n                }\n                case OP.ADDITEMS: {\n                    const items = stack;\n                    stack = metastack.pop();\n                    const set = stack[stack.length - 1];\n                    for (let i = 0; i < items.length; i++) {\n                        this._setProvider.addMethod(set, items[i]);\n                    }\n                    break;\n                }\n\n                // Exts\n                case OP.EXT1: {\n                    const extCode = reader.byte();\n                    const cls = this._extensionResolver.resolve(extCode);\n                    stack.push(cls);\n                    break;\n                }\n                case OP.EXT2: {\n                    const extCode = reader.uint16();\n                    const cls = this._extensionResolver.resolve(extCode);\n                    stack.push(cls);\n                    break;\n                }\n                case OP.EXT4: {\n                    const extCode = reader.uint32();\n                    const cls = this._extensionResolver.resolve(extCode);\n                    stack.push(cls);\n                    break;\n                }\n\n                //  Module globals\n                case OP.GLOBAL: {\n                    const module = reader.line();\n                    const name = reader.line();\n                    const cls = this._nameResolver.resolve(module, name);\n                    stack.push(cls);\n                    break;\n                }\n                case OP.STACK_GLOBAL: {\n                    const name = stack.pop();\n                    const module = stack.pop();\n                    const cls = this._nameResolver.resolve(module, name);\n                    stack.push(cls);\n                    break;\n                }\n\n                // Classes\n                case OP.INST: {\n                    const module = reader.line();\n                    const name = reader.line();\n                    const args = stack;\n                    stack = metastack.pop();\n                    const cls = this._nameResolver.resolve(module, name);\n                    const obj = Reflect.construct(cls, args);\n                    stack.push(obj);\n                    break;\n                }\n                case OP.OBJ: {\n                    const args = stack;\n                    const cls = args.pop();\n                    stack = metastack.pop();\n                    const obj = Reflect.construct(cls, args);\n                    stack.push(obj);\n                    break;\n                }\n                case OP.NEWOBJ: {\n                    const args = stack.pop();\n                    const cls = stack.pop();\n                    const obj = Reflect.construct(cls, args);\n                    stack.push(obj);\n                    break;\n                }\n                case OP.NEWOBJ_EX: {\n                    const kwargs = stack.pop();\n                    const args = stack.pop();\n                    const cls = stack.pop();\n                    const obj: any = Reflect.construct(cls, args);\n                    if (obj.__setnewargs_ex__) {\n                        obj.__setnewargs_ex__(kwargs);\n                    }\n                    stack.push(obj);\n                    break;\n                }\n                case OP.PERSID: {\n                    const pid = reader.line();\n                    const cls = this._persistentResolver.resolve(pid);\n                    stack.push(cls);\n                    break;\n                }\n                case OP.BINPERSID: {\n                    const pid = stack.pop();\n                    const cls = this._persistentResolver.resolve(pid);\n                    stack.push(cls);\n                    break;\n                }\n                case OP.REDUCE: {\n                    const args = stack.pop();\n                    const func = stack.pop();\n                    stack.push(func(...args));\n                    break;\n                }\n                case OP.BUILD: {\n                    const state = stack.pop();\n                    const obj = stack[stack.length - 1];\n                    if (obj.__setstate__) {\n                        obj.__setstate__(state);\n                        break;\n                    }\n                    if (obj instanceof Map) {\n                        // https://docs.python.org/3/library/stdtypes.html#object.__dict__\n                        if (state instanceof Map && state.has('__dict__')) {\n                            for (const [key, value] of state.get('__dict__')) {\n                                obj.set(key, value);\n                            }\n                            break;\n                        }\n                        if (state.__dict__) {\n                            for (const key in state.__dict__) {\n                                obj.set(key, state.__dict__[key]);\n                            }\n                            break;\n                        }\n                    } else {\n                        if (state instanceof Map) {\n                            Object.assign(obj, Object.fromEntries(state));\n                        } else {\n                            Object.assign(obj, state);\n                        }\n                    }\n                    break;\n                }\n\n                default:\n                    throw new Error(`Unsupported opcode '${opcode}'.`);\n            }\n        }\n        throw new Error('Unexpected end of file.');\n    }\n}\n","import { createPObject } from './PObject';\nimport { NameResolver } from './parser';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport class NameRegistry implements NameResolver {\n    protected readonly _registry = new Map<string, (new (...args: any[]) => any) | ((...args: any[]) => any)>();\n\n    register(module: string, name: string, func: (new (...args: any[]) => any) | ((...args: any[]) => any)) {\n        const fqn = NameRegistry.getFullyQualifiedName(name, module);\n        if (this._registry.has(fqn)) {\n            throw new Error(`'${fqn}' is already registered.`);\n        }\n        this._registry.set(fqn, func);\n        return this;\n    }\n\n    resolve(module: string, name: string) {\n        const fqn = NameRegistry.getFullyQualifiedName(name, module);\n        return this._registry.get(fqn) ?? this.onMissingName(module, name);\n    }\n\n    onMissingName(module: string, name: string) {\n        return createPObject(module, name);\n    }\n\n    static getFullyQualifiedName(module: string, name: string) {\n        return module + '.' + name;\n    }\n}\n"],"names":[],"mappings":"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"}